---
title: "Figures"
format: html
editor: visual
---

Code to generate figures created in R for the manuscript titled "Predicting Predator Abundance from Prey in Estuaries: Insights from Single and Joint Species Distribution Modeling". The data/functions needed are loaded in from the Load.Figures.R script. 
```{r}
source("/users/sallydowd/Documents/GitHub/NCBlueCrab_Predators/Final/Scripts/Load.FiguresR")
```

## Main text 

### Figure 1: 
```{r}
t1 <- ggplot(data = world) + geom_sf() + geom_sf(data = globe_grid_15_edt, fill = NA) + coord_sf(xlim=c(-85, -70), ylim=c(25,40), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + geom_point(data = subset(p915_CPUEedt_fig24, Month %in% c(5,6)), aes(x = Longitude, y = Latitude, colour= Survey), size = .5) + geom_point(data = subset(p120_CPUEedt_fig24, Month %in% c(5,6)), aes(x = Longitude, y = Latitude, colour= Survey), size = .5) + ggtitle("D) 0.24° x 0.24°") + standard2

t2 <- ggplot(data = world) + geom_sf() + geom_sf(data = globe_grid_30_edt, fill = NA) + coord_sf(xlim=c(-85, -70), ylim=c(25,40), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + geom_point(data = subset(p915_CPUEedt_fig12, Month %in% c(5,6)), aes(x = Longitude, y = Latitude, colour= Survey), size = .5) + geom_point(data = subset(p120_CPUEedt_fig12, Month %in% c(5,6)), aes(x = Longitude, y = Latitude, colour= Survey), size = .5) ggtitle("C) 0.12° x 0.12°")   + standard2

t3 <- ggplot(data = world) + geom_sf() + geom_sf(data = globe_grid_60_edt, fill = NA) + coord_sf(xlim=c(-85, -70), ylim=c(25,40), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + geom_point(data = subset(p915_CPUEedt_fig06, Month %in% c(5,6)), aes(x = Longitude, y = Latitude, colour= Survey), size = .5) + geom_point(data = subset(p120_CPUEedt_fig06, Month %in% c(5,6)), aes(x = Longitude, y = Latitude, colour= Survey), size = .5)  + ggtitle("B) 0.06° x 0.06°")  + standard2

t4 <- ggplot(data = world) + geom_sf() + theme(panel.background = element_rect(fill = "white", colour = "black")) + geom_point(data = filter(p915_CPUEedt, !Latitude== 33.72389, !Latitude == 35.95528, !Latitude == 36.04694, !(Latitude > 34.5 & Longitude < -77.5), Month %in% c(5,6)), aes(x = Longitude, y = Latitude, colour= Survey), size = .5) + geom_point(data = subset(p120_CPUEedt, Month %in% c(5,6)), aes(x = Longitude, y = Latitude, colour= Survey), size = .5) + coord_sf(xlim=c(-78.5, -75.4), ylim=c(33.802938,36.672128), expand = TRUE) + ggtitle("A) Sampling points") + standard2
```

### Figure 3: 
```{r}
prediction_boxplot2 <- read_excel("/users/sallydowd/Google Drive/My Drive/Research/Ch1Data/Tables/prediction_new.xlsx", sheet=2) 
df <- prediction_boxplot2
df$Prediction < - factor(df$Prediction, levels=c("Traditional", "Conditional"))
```

```{r}
rd_p2 <- ggplot() + geom_boxplot(aes(lower= meanR2 - sdR2, upper= meanR2 + sdR2, middle= meanR2, ymin= meanR2- 1.5*sdR2, ymax= meanR2+1.5*sdR2, x= Model_type), stat= "identity", data= subset(df, Species %in% "Red drum")) + scale_x_discrete(labels= c("1a", "2a", "3a")) + standard_theme+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + xlab("Model type") + ylab(expression(paste("R"^"2"))) + labs(tag= "A)") + facet_wrap(~factor(Prediction, c("Traditional", "Conditional"))) + 
geom_bracket(xmin= 1, xmax= 1.9, y.position= 0.80, label= "") + geom_bracket(xmin= 1, xmax=3, y.position= 0.95, label= "") + geom_bracket(xmin= 2.1, xmax=3, y.position= 0.80, label= "") + ylim(-1.2, 1.0) + theme(axis.text.x = element_text(angle = 360)) + ggtitle("Red drum")

sk_p2 <- ggplot() + geom_boxplot(aes(lower= meanR2 - sdR2, upper= meanR2 + sdR2, middle= meanR2, ymin= meanR2- 1.5*sdR2, ymax= meanR2+1.5*sdR2, x= Model_type), stat= "identity", data= subset(df, Species %in% "Southern kingfish")) + scale_x_discrete(labels= c("1a", "2a", "3a")) + standard_theme+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + xlab("Model type") + ylab(expression(paste("R"^"2"))) + labs(tag= "B)") + facet_wrap(~factor(Prediction, c("Traditional", "Conditional"))) + expand_limits(y= c(0.0015, 0.23)) + 
geom_bracket(xmin= 1, xmax= 1.9, y.position= 0.20, label= "") + geom_bracket(xmin= 1, xmax=3, y.position= 0.22, label= "") + geom_bracket(xmin= 2.1, xmax=3, y.position= 0.20, label= "") + theme(axis.text.x = element_text(angle = 360)) + ggtitle("Southern kingfish")

bd_p2 <- ggplot() + geom_boxplot(aes(lower= meanR2 - sdR2, upper= meanR2 + sdR2, middle= meanR2, ymin= meanR2- 1.5*sdR2, ymax= meanR2+1.5*sdR2, x= Model_type), stat= "identity", data= subset(df, Species %in% "Black drum")) + scale_x_discrete(labels= c("1a", "2a", "3a")) + standard_theme+ theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1)) + xlab("Model type") + ylab(expression(paste("R"^"2"))) + labs(tag= "C)") + facet_wrap(~factor(Prediction, c("Traditional", "Conditional"))) + expand_limits(y= c(-1, 2.5)) + geom_bracket(xmin= 1, xmax= 1.9, y.position= 2, label= "") + geom_bracket(xmin= 1, xmax=3, y.position= 2.4, label= "") + geom_bracket(xmin= 2.1, xmax=3, y.position= 2, label= "")  + theme(axis.text.x = element_text(angle = 360)) + ggtitle("Black drum")

fig <- ggarrange(rd_p2 + rremove("xlab") + rremove("ylab"), sk_p2 + rremove("xlab") + rremove("ylab"), bd_p2 + rremove("xlab") + rremove("ylab"), ncol= 3)
library(grid)
annotate_figure(fig, bottom= textGrob("Model type"), left= textGrob(expression(paste("R"^"2")), rot= 90))
```

### Figure 4: 

The code for this figure is adapted from Dr. Sarah Roberts (sarah.roberts@duke.edu)
```{r}
load("/users/sallydowd/Google Drive/My Drive/Research/Ch1Data/Final_results/gJam/Inference2/Models/non_avg_full.RData")
```

##### Extract parameters
```{r}
#posterior summaries 
out <- non_avg_full

betas <- out$parameters$betaStandXTable #SM by stats posterior summary
sens <- out[["parameters"]][["sensTable"]] #sensitivity to predictor variables
rmsetot <- out[["fit"]][["rmspeAll"]] #root mean squared prediction error all
DIC <- out[["fit"]][["DIC"]]
rmse_byspec <- out[["fit"]][["rmspeBySpec"]]
cor <- out[["parameters"]][["corMu"]] #residual, correlation 
colnames(cor) <- colnames(out[["parameters"]][["corSe"]])
s_mat <- out[["parameters"]][["sigMu"]] #WsWs', Species x Species, covariance matrix
#add cor from ydata for panel A
ycor <- out[["inputs"]][["y"]] #response matrix 
cor2 <- out[["parameters"]][["ematrix"]]
```

#### Organize parameters 
```{r}
library(lessR)
#residual covariance
colnames(cor) <- colnames(out[["parameters"]][["corSe"]])
cor <- corReorder(cor, order = "manual", vars=c(smallatlanticcroakerP915, smallatlanticmenhadenP915, pinfishP915, smallsouthernflounderP915, smallspotP915, reddrumP915, southernkingfishP915, blackdrumP915))
cor <-  as.data.frame(cor)
rownames(cor) <- colnames(cor)
cor$specs <- rownames(cor)

#ematrix
cor2 <- out[["parameters"]][["ematrix"]] #responses in matrix E 
cor2<- corReorder(cor2, order = "manual", vars=c(smallatlanticcroakerP915, smallatlanticmenhadenP915, pinfishP915, smallsouthernflounderP915, smallspotP915, reddrumP915, southernkingfishP915, blackdrumP915))
cor2 <-  as.data.frame(cor2)
rownames(cor2) <- colnames(cor2)
cor2$specs <- rownames(cor2)

#S x S 
s_mat <- corReorder(s_mat, order = "manual", vars=c(smallatlanticcroakerP915, smallatlanticmenhadenP915, pinfishP915, smallsouthernflounderP915, smallspotP915, reddrumP915, southernkingfishP915, blackdrumP915))
s_mat <-  as.data.frame(s_mat)
rownames(s_mat) <- colnames(s_mat)

#co-occurence
ycor <- cor(ycor, method = "spearman")
ycor<- corReorder(ycor, order = "manual", vars=c(smallatlanticcroakerP915, smallatlanticmenhadenP915, pinfishP915, smallsouthernflounderP915, smallspotP915, reddrumP915, southernkingfishP915, blackdrumP915))
```

#### Plots
```{r}
#co-occurence in ydata
cooccur <- ggcorrplot::ggcorrplot(ycor, type = "lower", tl.cex=14)+ scale_fill_gradient2(low = "blue", mid = "white", high = "red", breaks=c(0), limit=c(-1, 1))+ theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1), panel.grid.major.x = element_blank())
cooccur
#issue with coocur was b/c re-ran ycor 2x

cor_again <- cor[,-9]
#co-occurrence modeled, residual correlation 
comodel <- ggcorrplot::ggcorrplot(cor_again, type = "lower", tl.cex=14)+ scale_fill_gradient2(low = "blue", mid = "white", high = "red", breaks=c(0), limit=c(-1, 1))+ theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1), panel.grid.major.x = element_blank())
comodel

#ematrix, covariance 
cor2_again <- cor2[,-9]
emat <- ggcorrplot::ggcorrplot(cor2_again, type = "lower", tl.cex= 14) + scale_fill_gradient2(low = "blue", mid = "white", high = "red", breaks=c(0), limit= c(-1,1))+ theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1), panel.grid.major.x = element_blank())
emat 

#beta
betas_tidy <- betas
betas_tidy$variable <- rownames(betas_tidy)
betas_tidy <- betas_tidy %>% separate(variable, c("species","variable"), sep = "([_])")

betas_tidy <- betas_tidy %>% filter(variable != "intercept")

# betas_tidy$variable <- factor(betas_tidy$variable, levels=c("SST","SSAL"))

min(betas_tidy$Estimate)
max(betas_tidy$Estimate)
#
betas_tidy$Estimate <- ifelse(betas_tidy$Estimate > 2, 2, betas_tidy$Estimate)
betas_tidy$Estimate <- ifelse(betas_tidy$Estimate < -2,-2, betas_tidy$Estimate)

betaplot <- ggplot(data = betas_tidy, aes(x=variable, y=species, fill=Estimate)) +
  geom_tile() + scale_fill_gradient2(low = "blue", high = "red", mid = "white",
                                     midpoint = 0, space = "Lab",
                                     name="Betas") + theme(axis.text.x = element_text(angle = 90, size = 14, vjust = 1, hjust = 1), axis.text.y = element_text(size = 14))
cooccur <- cooccur + theme(legend.position= "none") + 
  ggtitle("c) Co-occurence in Data")+
  theme( plot.title = element_text(hjust = 0.5)) +
  theme( plot.title = element_text(size = 20, face = "bold"))
comodel <- comodel + theme(legend.position= "none") + 
  ggtitle("d) Residual Correlation") +
  theme( plot.title = element_text(hjust = 0.5)) +
  theme( plot.title = element_text(size = 20, face = "bold"))
emat <- emat + theme(legend.position= "none") + 
  theme(legend.position="none")+
  ggtitle("b) Covariance or E-matrix") +
  theme( plot.title = element_text(hjust = 0.5)) +
  theme( plot.title = element_text(size = 20, face = "bold"))
betaplot <- betaplot + theme(legend.position= "none") + 
  theme(axis.title.x = element_blank()) +
  theme(axis.title.y = element_blank())+
  ggtitle("a) Environmental Response") +
  theme( plot.title = element_text(hjust = 0.5)) +
  theme( plot.title = element_text(size = 20, face = "bold"))
```

#### Organize plots
```{r}
library(cowplot)
# extract the legend from one of the plots
legend <- get_legend(cooccur + theme(legend.position="bottom") + theme(legend.title = element_blank(), legend.text = element_blank()) +
                         theme(legend.key.height= unit(2, 'cm'),
                               legend.key.width= unit(4, 'cm')))
library(ggpubr)
d <- ggarrange(betaplot, emat, cooccur, comodel)
annotate_figure(d, bottom= legend)
```

## Appendix A: Introduction & Methods


### Fig A.1: 


### Fig A.3 