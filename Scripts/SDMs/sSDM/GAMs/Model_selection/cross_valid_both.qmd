---
title: "cross_valid_both"
format: html
editor: visual
---

```{r}
source("~/Documents/GitHub/NCBlueCrab_Predators/Scripts/Load.SDM.R")

#Train and test dataset
##P915, P120 
sample_size_both = floor(0.8*nrow(df_count_wide_both))
picked_both = sample(seq_len(nrow(df_count_wide_both)),size = sample_size_both) 
df_count_wide_both_test = df_count_wide_both[-picked_both,]
df_count_wide_both_train = df_count_wide_both[picked_both,]
```

### Data exploration

```{r}
#Number of sampling events with > 0 caught, 2001-2021
t <- pivot_longer(
  data = df_count_wide_both, cols= atlanticcroakerP915:bonnetheadsharkP915forage, 
  names_to = c("Speciescommonname"),
  values_to = "avg_count")
t <- t %>% filter(avg_count > 0) %>% filter(Speciescommonname %in% c("bonnetheadsharkP915", "southernkingfishP915", "reddrumP915", "blackdrumP915", "spotP915", "atlanticcroakerP915", "atlanticmenhadenP915", "southernkingfishforageP915"))

t2 <- t %>% group_by(Speciescommonname) %>% mutate(count= n()) %>% distinct(count) %>% arrange(-count) 
write.csv(t2, "~/Desktop/counts_both.csv")

#Avg. annual sample size
t %>% group_by(Speciescommonname) %>% mutate(avg_ss= mean(avg_count)) %>% distinct(avg_ss)
unique(df_count$Speciescommonname)

t %>% ggplot() + geom_histogram(aes(x= avg_count)) + standard_theme + facet_wrap(~Speciescommonname, scales= "free_x") + xlim(0,250) + ylim(0,125)
```

```{r}
#Load cross-validation functions 
library(gtools)

pastePerm<- function(row, names){
  keep<- which(row==1)
  if(length(keep)==0){
    return('1')
  }else{
    return(paste(names[keep],collapse='+'))
  }
}
my_sqrt <- function(var1){
  sqrt(var1) #take square root of variable 
} #construct model formulas 

dredgeform<- function(pred, covars, alwaysIn=''){ #always in is set to empty string
  p<- length(covars) #number of independent variables
  perm.tab<- permutations(2, p, v=c(0,1), repeats.allowed=T) #for different combinations of predictor variables
  myforms<- NULL #store formulas 
  for(j in 1:nrow(perm.tab)){
    myforms[j]<- pastePerm(perm.tab[j,], covars) #function above
  }
  myforms<- paste0(pred, '~',myforms) #predicted variable and formula
  return(myforms)
}
```

### P915, P120 GAMs

#### Formulas

```{r}
#Load formulas
##Red drum
allformulas_reddrum <- dredgeform(pred = "reddrumP915", covars = c("s(avgdepth)", "s(avgssal)", "s(avgstemp)", "s(avgsdo)", "s(SAVkm)", "s(InletDistkm)", "s(NoFishRest)", "s(atlanticmenhadenP915)", "s(atlanticcroakerP915)", "s(spotP915)", "s(blackdrumP915)", "s(pinfishP915)", "s(atlanticcroakerP120)", "s(atlanticmenhadenP120)", "s(pinfishP120)", "s(spotP120)", "s(bluecrabP120)", "s(whiteshrimpP120)", "s(pinkshrimpP120)", "s(brownshrimpP120)", "s(southernflounderP120)", "s(weakfishP120)", "s(reddrumforage)", "factor(FishingAllnum)", "factor(Sedsizecommon)"))

##Black drum
allformulas_blackdrum <- dredgeform(pred = "blackdrumP915", covars = c("s(avgdepth)", "s(avgssal)", "s(avgstemp)", "s(avgsdo)", "s(SAVkm)", "s(InletDistkm)", "s(NoFishRest)", "s(reddrumP915)", "s(blackdrumP915forage)", "s(bluecrabP120)", "s(whiteshrimpP120)", "s(pinkshrimpP120)", "s(brownshrimpP120)", "factor(FishingAllnum)", "factor(Sedsizecommon)"))

##Southern kingfish
allformulas_southernkingfish <- dredgeform(pred = "southernkingfishP915", covars = c("s(avgdepth)", "s(avgssal)", "s(avgstemp)", "s(avgsdo)", "s(SAVkm)", "s(InletDistkm)", "s(NoFishRest)", "s(atlanticmenhadenP915)", "s(atlanticcroakerP915)", "s(spotP915)", "s(southernkingfishforageP915)", "s(atlanticmenhadenP120)", "s(atlanticcroakerP120)", "s(spotP120)", "s(bluecrabP120)", "s(whiteshrimpP120)", "s(pinkshrimpP120)", "s(brownshrimpP120)", "factor(FishingAllnum)", "factor(Sedsizecommon)"))

##Bonnethead shark 
allformulas_bonnetheadshark <- dredgeform(pred = "bonnetheadsharkP915", covars = c("s(avgdepth)", "s(avgssal)", "s(avgstemp)", "s(avgsdo)", "s(SAVkm)", "s(InletDistkm)", "s(NoFishRest)", "s(bonnetheadsharkP915forage)", "s(bluecrabP120)", "s(whiteshrimpP120)", "s(brownshrimpP120)", "s(NoFishRest)", "factor(FishingAllnum)", "factor(Sedsizecommon)"))

##removed pink shrimp b/c fewer unique combinations 
```

```{r}
#Look at correlations 
cor <- cor(df_count_wide_both[, c(14:17, 20, 22:25, 29:33, 35:40, 43:44, 46:49)])
cor_plot <- corrplot(cor)
png(file= "~/Desktop/cor_plot.png")
corrplot(cor)
dev.off()
##correlations b/w forage and brown shrimp
```

```{r}
##Bonnethead shark
compare_var_tw_bonnetheadshark <- as.data.frame(matrix(ncol = 2, nrow = 0))
colnames(compare_var_tw_bonnetheadshark) <- c("formula", "AIC")
for (i in 1:length(allformulas_bonnetheadshark)) {
model_tw_bonnetheadshark <- gam(as.formula(allformulas_bonnetheadshark[i]), family= tw(link= "log"), data=df_count_wide_both_train)
compare_var_tw_bonnetheadshark[i, 1] <- allformulas_bonnetheadshark[i]
compare_var_tw_bonnetheadshark[i, 2] <- AIC(model_tw_bonnetheadshark)
print(i)
}

chunk_size <- 1000
num_chunks <- ceiling(length(allformulas_bonnetheadshark) / chunk_size)

write.csv(compare_var_tw_bonnetheadshark_both, "~/Desktop/compare_var_tw_bonnetheadshark.csv")
```

```{r}
chunk_size <- 1000
num_chunks <- ceiling(length(allformulas_bonnetheadshark) / chunk_size)

#Loop through chunks
for (chunk in 1:num_chunks) {
#start and end point 
start_index <- (chunk - 1) * chunk_size + 1
end_index <- min(chunk * chunk_size, length(allformulas_bonnetheadshark))

#Extract formulas for the current chunk
current_chunk_formulas <- allformulas_bonnetheadshark[start_index:end_index]

compare_var_chunk <- as.data.frame(matrix(ncol = 2, nrow = length(current_chunk_formulas)))
colnames(compare_var_chunk) <- c("formula", "AIC")

#Loop through formulas in the current chunk
for (i in seq_along(current_chunk_formulas)) {
model_tw_bonnetheadshark <- gam(as.formula(current_chunk_formulas[i]), family= tw(link= "log"), data=df_count_wide_both_train)
compare_var_chunk[i, 1] <- current_chunk_formulas[i]
compare_var_chunk[i, 2] <- AIC(model_tw_bonnetheadshark)
print(i)
}
print(chunk)
write.csv(compare_var_chunk, paste0("/Users/sallydowd/Desktop/Ch1Data/GAMs/model_selection/P915.P120/bonnethead/","bonnethead_", chunk, ".csv"), row.names = FALSE)
rm(compare_var_chunk, model_tw_bonnetheadshark)
}
library(beepr)
beep(sound= 8)
```

#Processing bonnethead csvs
```{r}
setwd("/Users/sallydowd/Desktop/Ch1Data/GAMs/Model_selection/P915.P120/bonnethead")
filenames <- list.files("/Users/sallydowd/Desktop/Ch1Data/GAMs/Model_selection/P915.P120/bonnethead", pattern= '*.csv')  
all <- lapply(filenames, read.csv)
merged <- do.call(rbind, all)
merged %>% arrange(AIC) %>% .[1,1]

##Gaussian 
gaus_bonnethead_shark <- gam(bonnetheadsharkP915~s(avgdepth)+s(avgssal)+s(avgstemp)+s(InletDistkm)+s(bonnetheadsharkP915forage)+s(bluecrabP120)+s(whiteshrimpP120)+s(brownshrimpP120)+s(NoFishRest)+factor(FishingAllnum)+factor(Sedsizecommon), data= df_count_wide_both_train)
summary(gaus_bonnethead_shark)
gam.check(gaus_bonnethead_shark)

##Gaussian w/ log transformation 
gaus_log_bonnethead_shark <- gam(log(bonnetheadsharkP915+1)~s(avgdepth)+s(avgssal)+s(avgstemp)+s(InletDistkm)+s(bonnetheadsharkP915forage)+s(bluecrabP120)+s(whiteshrimpP120)+s(brownshrimpP120)+s(NoFishRest)+factor(FishingAllnum)+factor(Sedsizecommon), data= df_count_wide_both_train)
summary(gaus_log_bonnethead_shark)
gam.check(gaus_log_bonnethead_shark)

##Gaussian w/ power transformation 
gaus_pow_bonnethead_shark <- gam(bonnetheadsharkP915^0.25~s(avgdepth)+s(avgssal)+s(avgstemp)+s(InletDistkm)+s(bonnetheadsharkP915forage)+s(bluecrabP120)+s(whiteshrimpP120)+s(brownshrimpP120)+s(NoFishRest)+factor(FishingAllnum)+factor(Sedsizecommon), data= df_count_wide_both_train)
summary(gaus_pow_bonnethead_shark)
gam.check(gaus_pow_bonnethead_shark)

##Tweedie
tw_bonnethead_shark <- gam(bonnetheadsharkP915~s(avgdepth)+s(avgssal)+s(avgstemp)+s(InletDistkm)+s(bonnetheadsharkP915forage)+s(bluecrabP120)+s(whiteshrimpP120)+s(brownshrimpP120)+s(NoFishRest)+factor(FishingAllnum)+factor(Sedsizecommon), data= df_count_wide_both_train, family= tw(link= "log"))
summary(tw_bonnethead_shark)
gam.check(tw_bonnethead_shark)

##Negative binomial 
nb_bonnethead_shark <- gam(bonnetheadsharkP915~s(avgdepth)+s(avgssal)+s(avgstemp)+s(InletDistkm)+s(bonnetheadsharkP915forage)+s(bluecrabP120)+s(whiteshrimpP120)+s(brownshrimpP120)+s(NoFishRest)+factor(FishingAllnum)+factor(Sedsizecommon), data= df_count_wide_both_train, family= "nb")
summary(nb_bonnethead_shark)
gam.check(nb_bonnethead_shark)

##Poisson 
pois_bonnethead_shark <- gam(bonnetheadsharkP915~s(avgdepth)+s(avgssal)+s(avgstemp)+s(InletDistkm)+s(bonnetheadsharkP915forage)+s(bluecrabP120)+s(whiteshrimpP120)+s(brownshrimpP120)+s(NoFishRest)+factor(FishingAllnum)+factor(Sedsizecommon), data= df_count_wide_both_train, family= "poisson")
summary(pois_bonnethead_shark)
gam.check(pois_bonnethead_shark)
```
