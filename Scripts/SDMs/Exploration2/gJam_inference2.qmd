---
title: "gJam_inference2"
format: html
editor: visual
---

```{r}
source("~/Documents/GitHub/NCBlueCrab_Predators/Scripts/Load.gJam.R")
```

##### Model 1: both_ind_burn3

###### Predictions

```{r}
set.seed(123)
#Red drum 
##Conditional prediction
ycond1 <- ydata_test1[,!colnames(ydata_test1) %in% "reddrumP915"]
newdata1 <- list(xdata = xdata_test1, ydata = ycond1, nsim = 1000)
pred_con1 <- gjamPredict(both_ind_burn3, newdata = newdata1)

##Unconditional prediction
newdata1<- list(xdata = xdata_test1, nsim = 1000)
pred_uncon1 <- gjamPredict(both_ind_burn3, newdata = newdata1)

pred_reddrum_con1 <- pred_con1$sdList$yMu[,colnames(pred_con1$sdList$yMu) %in% "reddrumP915"]
obs_reddrum1 <- ydata_test1[,colnames(ydata_test1) %in% "reddrumP915"]
pred_reddrum_uncon1 <- pred_uncon1$sdList$yMu[,colnames(pred_uncon1$sdList$yMu) %in% "reddrumP915"]

dat1 <- cbind(pred_reddrum_con1, obs_reddrum1, pred_reddrum_uncon1)
dat1 <- as.data.frame(dat1)
r2_general(dat1$pred_reddrum_con1, dat1$obs_reddrum1)
r2_general(dat1$pred_reddrum_uncon1, dat1$obs_reddrum1)
RMSE_func(actual= dat1$obs_reddrum1, pred= dat1$pred_reddrum_con1)
RMSE_func(actual= dat1$obs_reddrum1, pred= dat1$pred_reddrum_uncon1)
```

```{r}
set.seed(123)
#Southern kingfish
##Conditional prediction
ycond1 <- ydata_test1[,!colnames(ydata_test1) %in% "southernkingfishP915"]
newdata1 <- list(xdata = xdata_test1, ydata = ycond1, nsim = 1000)
pred_con1 <- gjamPredict(both_ind_burn3, newdata = newdata1)

##Unconditional prediction
newdata1<- list(xdata = xdata_test1, nsim = 1000)
pred_uncon1 <- gjamPredict(both_ind_burn3, newdata = newdata1)

pred_southernkingfish_con1 <- pred_con1$sdList$yMu[,colnames(pred_con1$sdList$yMu) %in% "southernkingfishP915"]
obs_southernkingfish1 <- ydata_test1[,colnames(ydata_test1) %in% "southernkingfishP915"]
pred_southernkingfish_uncon1 <- pred_uncon1$sdList$yMu[,colnames(pred_uncon1$sdList$yMu) %in% "southernkingfishP915"]

dat1 <- cbind(pred_southernkingfish_con1, obs_southernkingfish1, pred_southernkingfish_uncon1)
dat1 <- as.data.frame(dat1)
r2_general(dat1$pred_southernkingfish_con1, dat1$obs_southernkingfish1)
r2_general(dat1$pred_southernkingfish_uncon1, dat1$obs_southernkingfish1)
RMSE_func(actual= dat1$obs_southernkingfish1, pred= dat1$pred_southernkingfish_con1)
RMSE_func(actual= dat1$obs_southernkingfish1, pred= dat1$pred_southernkingfish_uncon1)
```

```{r}
set.seed(123)
#Black drum
##Conditional prediction
ycond1 <- ydata_test1[,!colnames(ydata_test1) %in% "blackdrumP915"]
newdata1 <- list(xdata = xdata_test1, ydata = ycond1, nsim = 1000)
pred_con1 <- gjamPredict(both_ind_burn3, newdata = newdata1)

##Unconditional prediction
newdata1<- list(xdata = xdata_test1, nsim = 1000)
pred_uncon1 <- gjamPredict(both_ind_burn3, newdata = newdata1)

pred_blackdrum_con1 <- pred_con1$sdList$yMu[,colnames(pred_con1$sdList$yMu) %in% "blackdrumP915"]
obs_blackdrum1 <- ydata_test1[,colnames(ydata_test1) %in% "blackdrumP915"]
pred_blackdrum_uncon1 <- pred_uncon1$sdList$yMu[,colnames(pred_uncon1$sdList$yMu) %in% "blackdrumP915"]

dat1 <- cbind(pred_blackdrum_con1, obs_blackdrum1, pred_blackdrum_uncon1)
dat1 <- as.data.frame(dat1)
r2_general(dat1$pred_blackdrum_con1, dat1$obs_blackdrum1)
r2_general(dat1$pred_blackdrum_uncon1, dat1$obs_blackdrum1)
RMSE_func(actual= dat1$obs_blackdrum1, pred= dat1$pred_blackdrum_con1)
RMSE_func(actual= dat1$obs_blackdrum1, pred= dat1$pred_blackdrum_uncon1)
```

###### RMSPE

```{r}
rmspe_byspec <- both_ind_burn3[["fit"]][["rmspeBySpec"]]
rmspetot <- both_ind_burn3[["fit"]][["rmspeAll"]]
```

##### Model 2: one_ind_burn3

###### Predictions

```{r}
set.seed(123)
#Red drum 
##Conditional prediction
ycond2 <- ydata_test2[,!colnames(ydata_test2) %in% "reddrumP915"]
newdata2 <- list(xdata = xdata_test2, ydata = ycond2, nsim = 1000)
pred_con2 <- gjamPredict(one_ind_burn3, newdata = newdata2)

##Unconditional prediction
newdata2<- list(xdata = xdata_test2, nsim = 1000)
pred_uncon2 <- gjamPredict(one_ind_burn3, newdata = newdata2)

pred_reddrum_con2 <- pred_con2$sdList$yMu[,colnames(pred_con2$sdList$yMu) %in% "reddrumP915"]
obs_reddrum2 <- ydata_test2[,colnames(ydata_test2) %in% "reddrumP915"]
pred_reddrum_uncon2 <- pred_uncon2$sdList$yMu[,colnames(pred_uncon2$sdList$yMu) %in% "reddrumP915"]

dat2 <- cbind(pred_reddrum_con2, obs_reddrum2, pred_reddrum_uncon2)
dat2 <- as.data.frame(dat2)
r2_general(dat2$pred_reddrum_con2, dat2$obs_reddrum2)
r2_general(dat2$pred_reddrum_uncon2, dat2$obs_reddrum2)

RMSE_func(actual= dat2$obs_reddrum2, pred= dat2$pred_reddrum_con2)
RMSE_func(actual= dat2$obs_reddrum2, pred= dat2$pred_reddrum_uncon2)
rmspe_byspec <- one_ind_burn3[["fit"]][["rmspeBySpec"]]
```

```{r}
set.seed(123)
#Southern kingfish
##Conditional prediction
ycond2 <- ydata_test2[,!colnames(ydata_test2) %in% "southernkingfishP915"]
newdata2 <- list(xdata = xdata_test2, ydata = ycond2, nsim = 1000)
pred_con2 <- gjamPredict(one_ind_burn3, newdata = newdata2)

##Unconditional prediction
newdata2 <- list(xdata = xdata_test2, nsim = 1000)
pred_uncon2 <- gjamPredict(one_ind_burn3, newdata = newdata2)

pred_southernkingfish_con2 <- pred_con2$sdList$yMu[,colnames(pred_con2$sdList$yMu) %in% "southernkingfishP915"]
obs_southernkingfish2 <- ydata_test2[,colnames(ydata_test2) %in% "southernkingfishP915"]
pred_southernkingfish_uncon2 <- pred_uncon2$sdList$yMu[,colnames(pred_uncon2$sdList$yMu) %in% "southernkingfishP915"]

dat2 <- cbind(pred_southernkingfish_con2, obs_southernkingfish2, pred_southernkingfish_uncon2)
dat2 <- as.data.frame(dat2)
r2_general(dat2$pred_southernkingfish_con2, dat2$obs_southernkingfish2)
r2_general(dat2$pred_southernkingfish_uncon2, dat2$obs_southernkingfish2)
RMSE_func(actual= dat2$obs_southernkingfish2, pred= dat2$pred_southernkingfish_con2)
RMSE_func(actual= dat2$obs_southernkingfish2, pred= dat2$pred_southernkingfish_uncon2)
```

```{r}
set.seed(123)
#Black drum
##Conditional prediction
ycond2 <- ydata_test2[,!colnames(ydata_test2) %in% "blackdrumP915"]
newdata2 <- list(xdata = xdata_test2, ydata = ycond2, nsim = 1000)
pred_con2 <- gjamPredict(one_ind_burn3, newdata = newdata2)

##Unconditional prediction
newdata2 <- list(xdata = xdata_test2, nsim = 1000)
pred_uncon2 <- gjamPredict(one_ind_burn3, newdata = newdata2)

pred_blackdrum_con2 <- pred_con2$sdList$yMu[,colnames(pred_con2$sdList$yMu) %in% "blackdrumP915"]
obs_blackdrum2 <- ydata_test2[,colnames(ydata_test2) %in% "blackdrumP915"]
pred_blackdrum_uncon2 <- pred_uncon2$sdList$yMu[,colnames(pred_uncon2$sdList$yMu) %in% "blackdrumP915"]

dat2 <- cbind(pred_blackdrum_con2, obs_blackdrum2, pred_blackdrum_uncon2)
dat2 <- as.data.frame(dat2)
r2_general(dat2$pred_blackdrum_con2, dat2$obs_blackdrum2)
r2_general(dat2$pred_blackdrum_uncon2, dat2$obs_blackdrum2)
RMSE_func(actual= dat2$obs_blackdrum2, pred= dat2$pred_blackdrum_con2)
RMSE_func(actual= dat2$obs_blackdrum2, pred= dat2$pred_blackdrum_uncon2)
```

###### RMSPE

```{r}
rmspe_byspec2 <- one_ind_burn3[["fit"]][["rmspeBySpec"]]
rmspetot2 <- one_ind_burn3[["fit"]][["rmspeAll"]]
```

##### Model 3: non_avg2

###### Predictions

```{r}
set.seed(123)
#Red drum 
##Conditional prediction
ycond3 <- ydata_test3[,!colnames(ydata_test3) %in% "reddrumP915"]
newdata3 <- list(xdata = xdata_test3, ydata = ycond3, nsim = 1000)
pred_con3 <- gjamPredict(non_avg2, newdata = newdata3)

##Unconditional prediction
newdata3<- list(xdata = xdata_test3, nsim = 1000)
pred_uncon3 <- gjamPredict(non_avg2, newdata = newdata3)

pred_reddrum_con3 <- pred_con3$sdList$yMu[,colnames(pred_con3$sdList$yMu) %in% "reddrumP915"]
obs_reddrum3 <- ydata_test3[,colnames(ydata_test3) %in% "reddrumP915"]
pred_reddrum_uncon3 <- pred_uncon3$sdList$yMu[,colnames(pred_uncon3$sdList$yMu) %in% "reddrumP915"]

dat3 <- cbind(pred_reddrum_con3, obs_reddrum3, pred_reddrum_uncon3)
dat3 <- as.data.frame(dat3)
r2_general(dat3$pred_reddrum_con3, dat3$obs_reddrum3)
r2_general(dat3$pred_reddrum_uncon3, dat3$obs_reddrum3)
RMSE_func(actual= dat3$obs_reddrum3, pred= dat3$pred_reddrum_con3)
RMSE_func(actual= dat3$obs_reddrum3, pred= dat3$pred_reddrum_uncon3)
rmspe_byspec <- non_avg2[["fit"]][["rmspeBySpec"]]
```

```{r}
set.seed(123)
#Southern kingfish
##Conditional prediction
ycond3 <- ydata_test3[,!colnames(ydata_test3) %in% "southernkingfishP915"]
newdata3 <- list(xdata = xdata_test3, ydata = ycond3, nsim = 1000)
pred_con3 <- gjamPredict(non_avg2, newdata = newdata3)

##Unconditional prediction
newdata3 <- list(xdata = xdata_test3, nsim = 1000)
pred_uncon3 <- gjamPredict(non_avg2, newdata = newdata3)

pred_southernkingfish_con3 <- pred_con3$sdList$yMu[,colnames(pred_con3$sdList$yMu) %in% "southernkingfishP915"]
obs_southernkingfish3 <- ydata_test3[,colnames(ydata_test3) %in% "southernkingfishP915"]
pred_southernkingfish_uncon3 <- pred_uncon3$sdList$yMu[,colnames(pred_uncon3$sdList$yMu) %in% "southernkingfishP915"]

dat3 <- cbind(pred_southernkingfish_con3, obs_southernkingfish3, pred_southernkingfish_uncon3)
dat3 <- as.data.frame(dat3)
r2_general(dat3$pred_southernkingfish_con3, dat3$obs_southernkingfish3)
r2_general(dat3$pred_southernkingfish_uncon3, dat3$obs_southernkingfish3)
RMSE_func(actual= dat3$obs_southernkingfish3, pred= dat3$pred_southernkingfish_con3)
RMSE_func(actual= dat3$obs_southernkingfish3, pred= dat3$pred_southernkingfish_uncon3)
```

```{r}
set.seed(123)
#Black drum
##Conditional prediction
ycond3 <- ydata_test3[,!colnames(ydata_test3) %in% "blackdrumP915"]
newdata3 <- list(xdata = xdata_test3, ydata = ycond3, nsim = 1000)
pred_con3 <- gjamPredict(non_avg2, newdata = newdata3)

##Unconditional prediction
newdata3<- list(xdata = xdata_test3, nsim = 1000)
pred_uncon3 <- gjamPredict(non_avg2, newdata = newdata3)

pred_blackdrum_con3 <- pred_con3$sdList$yMu[,colnames(pred_con3$sdList$yMu) %in% "blackdrumP915"]
obs_blackdrum3 <- ydata_test3[,colnames(ydata_test3) %in% "blackdrumP915"]
pred_blackdrum_uncon3 <- pred_uncon3$sdList$yMu[,colnames(pred_uncon3$sdList$yMu) %in% "blackdrumP915"]

dat3 <- cbind(pred_blackdrum_con3, obs_blackdrum3, pred_blackdrum_uncon3)
dat3 <- as.data.frame(dat3)
r2_general(dat3$pred_blackdrum_con3, dat3$obs_blackdrum3)
r2_general(dat3$pred_blackdrum_uncon3, dat3$obs_blackdrum3)
RMSE_func(actual= dat3$obs_blackdrum3, pred= dat3$pred_blackdrum_con3)
RMSE_func(actual= dat3$obs_blackdrum3, pred= dat3$pred_blackdrum_uncon)
```

###### RMSPE

```{r}
rmspe_byspec3 <- non_avg2[["fit"]][["rmspeBySpec"]]
rmspetot3 <- non_avg2[["fit"]][["rmspeAll"]]

 
```

```{r}
non_avg2[["fit"]]$fractionExplained


y_pred <- pred_con3$sdList$yMu
y_obs <- ytest 
```



```{r}
#posterior summaries 
out <- non_avg2

betas <- out$parameters$betaStandXTable #SM by stats posterior summary
sens <- out[["parameters"]][["sensTable"]] #sensitivity to predictor variables
rmsetot <- out[["fit"]][["rmspeAll"]] #root mean squared prediction error all
DIC <- out[["fit"]][["DIC"]]
rmse_byspec <- out[["fit"]][["rmspeBySpec"]]
cor <- out[["parameters"]][["corMu"]] #residual, correlation 
colnames(cor) <- colnames(out[["parameters"]][["corSe"]])
s_mat <- out[["parameters"]][["sigMu"]] #WsWs', Species x Species, covariance matrix
#add cor from ydata for panel A
ycor <- out[["inputs"]][["y"]] #response matrix 
cor2 <- out[["parameters"]][["ematrix"]]

#residual covariance
colnames(cor) <- colnames(out[["parameters"]][["corSe"]])
cor <-  as.data.frame(cor)
rownames(cor) <- colnames(cor)
cor$specs <- rownames(cor)

#ematrix
cor2 <- out[["parameters"]][["ematrix"]] #responses in matrix E 
cor2 <-  as.data.frame(cor2)
rownames(cor2) <- colnames(cor2)
cor2$specs <- rownames(cor2)

#latent vector wi that represents response variables all on a continuous scale
#matrix E is the correlation among species in terms of their responses to X
```

```{r}
specs_all_dev <- as.data.frame(matrix(data=NA, nrow=length(cor2$specs), ncol=1))
specs_all_dev$names <- cor2$specs
specs_all_dev$env_cov <- cor2$reddrumP915
specs_all_dev1 <- specs_all_dev[-1]
```

```{r}
cor_again <- cor[,-9]
comodel <- ggcorrplot::ggcorrplot(cor_again, type = "lower")+ scale_fill_gradient2(low = "blue", mid = "white", high = "red", breaks=c(0), limit=c(-1, 1))+ theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1), panel.grid.major.x = element_blank())
comodel
ggsave("/users/sallydowd/Desktop/comodol.jpeg", width= 7, height=5)

cor2_again <- cor2[,-9]
emat <- ggcorrplot::ggcorrplot(cor2_again, type = "lower") + scale_fill_gradient2(low = "blue", mid = "white", high = "red", breaks=c(0))+ theme(axis.text.x = element_text(angle = 90, vjust = 1, hjust = 1), panel.grid.major.x = element_blank())
emat
ggsave("/users/sallydowd/Desktop/emat.jpeg", width= 7, height=5)
```

