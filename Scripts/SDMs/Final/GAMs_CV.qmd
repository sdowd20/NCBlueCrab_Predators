---
title: "GAMs_CV"
format: html
editor: visual
---

```{r}
source("~/Documents/GitHub/NCBlueCrab_Predators/Scripts/Load.SDM.Final.R")
```

Helpful articles: -Setup initial GAM: https://bcheggeseth.github.io/253_fall_2021/local-regression-gams.html -Best for CV: https://www.tidymodels.org/start/resampling/ 
-An Introduction to Calibration with tidymodels: https://www.tidymodels.org/learn/models/calibration/

```{r}
set.seed(123) #only divide data once 
#4/5, 1/5ths 
data_split <- initial_split(df_CPUE_length_wide_both, strata = reddrumP915, prop= 0.80)

#Return split datasets 
data_train <- training(data_split) 
data_test  <- testing(data_split)
```

```{r}
#Define model 
gam_mod <- gen_additive_mod() %>%
set_engine(engine = 'mgcv', family= tw(link= "log")) %>% set_mode('regression')

#set_engine: specifies package and any arguments specific to that software 
#outcome variable as continuous
```

```{r}
folds <- vfold_cv(data_train, v= 5, strata= reddrumP915, repeats= 50) #10 fold cross-validation repeated 5 times on the training set 
#strata: create a stratified CV object, too little data to stratify by Year 
```

```{r}
#Fit model
set.seed(123)
gam_wf <- workflow() %>% add_variables(outcomes= reddrumP915, predictors= c(avgstemp, avgssal, avgsdo, Year)) %>% add_model(gam_mod, formula= reddrumP915 ~ s(avgstemp) + s(avgssal) + s(avgsdo) + s(Year)) %>% fit(data= data_train) 

#Perform cross-validation
gam_fit_rs <- gam_wf %>% fit_resamples(folds) 

#15/100 fitting terminated with step failure w/avgsdo, avgstemp, avgssal, Yearfactor
#some when remove avgsdo 
#
summary(gam_fit_rs)
t <- collect_metrics(gam_fit_rs)

show_best(gam_fit_rs, metric = "rmse")


gam_wf2 <- workflow() %>% add_variables(outcomes= reddrumP915, predictors= c(avgstemp, avgssal, avgsdo, Yearfactor, reddrumP915forageP915, reddrumP915forageP120)) %>% add_model(gam_mod, formula= reddrumP915 ~ s(avgstemp) + s(avgssal) + Yearfactor + s(avgsdo) + s(reddrumP915forageP915) + s(reddrumP915forageP120)) %>% fit(data= data_train) 

gam_fit_rs2 <- gam_wf2 %>% fit_resamples(folds) 
t2 <- collect_metrics(gam_fit_rs2)

reddrum_env <- as.data.frame(matrix(ncol = 3, nrow = 0))
colnames(reddrum_env) <- c("formula", "rmse", "rsq")
reddrum_env[i, 1] <- allformulas_reddrum[i]
reddrum_env[i, 2] <- t$mean[1]
reddrum_env[i, 3] <- t$mean[2]

#workflow: creates workflow, aggregate information required to fit and predict from a model
#fit_resamples(): analysis set (division within training data set) is used for prediction, 4/5 of data are used to fit the model, 1/5 is used for predictions, 5 predictions in non-repeated CV 
```
