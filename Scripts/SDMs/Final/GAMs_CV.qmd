---
title: "GAMs_CV"
format: html
editor: visual
---

```{r}
source("~/Documents/GitHub/NCBlueCrab_Predators/Scripts/Load.SDM.Final.R")
```

Helpful articles: -Setup initial GAM: https://bcheggeseth.github.io/253_fall_2021/local-regression-gams.html -Best for CV: https://www.tidymodels.org/start/resampling/ -An Introduction to Calibration with tidymodels: https://www.tidymodels.org/learn/models/calibration/

```{r}
set.seed(123) #only divide data once 
#4/5, 1/5ths 
data_split <- initial_split(df_CPUE_length_wide_both, strata = reddrumP915, prop= 0.80)

#Return split datasets 
data_train <- training(data_split) 
data_test  <- testing(data_split)
```

```{r}
#Define model 
gam_mod <- gen_additive_mod() %>%
set_engine(engine = 'mgcv', family= tw(link= "log")) %>% set_mode('regression')

#set_engine: specifies package and any arguments specific to that software 
#outcome variable as continuous
```

```{r}
folds <- vfold_cv(data_train, v= 5, strata= reddrumP915, repeats= 100) #10 fold cross-validation repeated 5 times on the training set 
#strata: create a stratified CV object, too little data to stratify by Year 
```

#### Red drum
```{r}
set.seed(123)

#Environment
reddrum_env_wf <- workflow() %>% add_variables(outcomes= reddrumP915, predictors= c(avgdepth, avgssal, avgstemp, avgsdo, NoFishRest, Year)) %>% add_model(gam_mod, formula= reddrumP915 ~ s(avgdepth) + s(avgssal) + s(avgstemp) + s(avgsdo) + s(NoFishRest) + s(Year)) %>% fit(data= data_train) 
                                                           
reddrum_env_cv <- reddrum_env_wf %>% fit_resamples(folds)
reddrum_env_cv2 <- collect_metrics(reddrum_env_cv)

#Environment + bc
reddrum_env_bc_wf <- workflow() %>% add_variables(outcomes= reddrumP915, predictors= c(avgdepth, avgssal, avgstemp, avgsdo, NoFishRest, Year, smallbluecrabP120)) %>% add_model(gam_mod, formula= reddrumP915 ~ s(avgdepth) + s(avgssal) + s(avgstemp) + s(avgsdo) + s(NoFishRest) + s(Year) + s(smallbluecrabP120)) %>% fit(data= data_train) 

reddrum_env_bc_cv <- reddrum_env_bc_wf %>% fit_resamples(folds)
reddrum_env_bc_cv2 <- collect_metrics(reddrum_env_bc_cv)

#Environment + forage
reddrum_env_forage_wf <- workflow() %>% add_variables(outcomes= reddrumP915, predictors= c(avgdepth, avgssal, avgstemp, avgsdo, NoFishRest, Year, reddrumP915forageP915, reddrumP915forageP120)) %>% add_model(gam_mod, formula= reddrumP915 ~ s(avgdepth) + s(avgssal) + s(avgstemp) + s(avgsdo) + s(NoFishRest) + s(Year) + s(reddrumP915forageP915) + s(reddrumP915forageP120)) %>% fit(data= data_train) 

reddrum_env_forage_cv <- reddrum_env_forage_wf %>% fit_resamples(folds)
reddrum_env_forage_cv2 <- collect_metrics(reddrum_env_forage_cv)

#Environment + bc + forage 
reddrum_env_bc_forage_wf <- workflow() %>% add_variables(outcomes= reddrumP915, predictors= c(avgdepth, avgssal, avgstemp, avgsdo, NoFishRest, Year, reddrumP915forageP915, reddrumP915forageP120, smallbluecrabP120)) %>% add_model(gam_mod, formula= reddrumP915 ~ s(avgdepth) + s(avgssal) + s(avgstemp) + s(avgsdo) + s(NoFishRest) + s(Year) + s(reddrumP915forageP915) + s(reddrumP915forageP120) + s(smallbluecrabP120)) %>% fit(data= data_train) 

reddrum_env_bc_forage_cv <- reddrum_env_bc_forage_wf %>% fit_resamples(folds)
reddrum_env_bc_forage_cv2 <- collect_metrics(reddrum_env_bc_forage_cv)

#workflow: creates workflow, aggregate information required to fit and predict from a model
#fit_resamples(): analysis set (division within training data set) is used for prediction, 4/5 of data are used to fit the model, 1/5 is used for predictions, 5 predictions in non-repeated CV 
```

#### Southern kingfish
```{r}

```

#### Black drum 
```{r}

```
