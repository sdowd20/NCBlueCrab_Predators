---
title: "GAMs_final"
format: html
editor: visual
---

```{r}
#Load packages, functions and datasets
source("~/Documents/GitHub/NCBlueCrab_Predators/Scripts/Load.SDM.BC.R")

#PAUSE: MIGHT NEED TO APPLY TO IMPORTING DATASET
df_count_BC_wide_both$Year <- as.factor(df_count_BC_wide_both$Year)

##TEST FOR CORRELATIONS AND VIF! 

unique(df_count_BC_wide_both$Year)
#change this 
sample_size_both = floor(0.7*nrow(df_count_BC_wide_both))
picked_both = sample(seq_len(nrow(df_count_BC_wide_both)),size = sample_size_both) 
df_count_BC_wide_both_test = df_count_BC_wide_both[-picked_both,]
df_count_BC_wide_both_train = df_count_BC_wide_both[picked_both,]
```

#### CV

```{r}
library(gtools)

pastePerm<- function(row, names){
  keep<- which(row==1)
  if(length(keep)==0){
    return('1')
  }else{
    return(paste(names[keep],collapse='+'))
  }
}
my_sqrt <- function(var1){
  sqrt(var1) #take square root of variable 
} #construct model formulas 

dredgeform<- function(pred, covars, alwaysIn='factor(Year)'){ #always in is set to factor Year
  p<- length(covars) #number of independent variables
  perm.tab<- permutations(2, p, v=c(0,1), repeats.allowed=T) #for different combinations of predictor variables
  myforms<- NULL #store formulas 
  for(j in 1:nrow(perm.tab)){
    myforms[j]<- pastePerm(perm.tab[j,], c(alwaysIn, covars)) #function above
  }
  myforms<- paste0(pred, '~', alwaysIn, '+', myforms) #predicted variable and formula
  return(myforms)
}
```

##### Env

```{r}
#Load formulas 
##Red drum
allformulas_reddrum <- dredgeform(pred = "reddrumP915", covars = c("s(avgdepth)", "s(avgssal)", "s(avgstemp)", "s(avgsdo)", "s(SAVkm)", "s(NoFishRest)"))

##Black drum
allformulas_blackdrum <- dredgeform(pred = "blackdrumP915", covars = c("s(avgdepth)", "s(avgssal)", "s(avgstemp)", "s(avgsdo)", "s(SAVkm)", "s(NoFishRest)", "s(Month)"))

##Southern kingfish
allformulas_southernkingfish <- dredgeform(pred = "southernkingfishP915", covars = c("s(avgdepth)", "s(avgssal)", "s(avgstemp)", "s(avgsdo)", "s(SAVkm)", "s(NoFishRest)", "s(Month)"))   
```

```{r}
#Run CV 
##Red drum 
compare_var_tw_reddrum <- as.data.frame(matrix(ncol = 2, nrow = 0))
colnames(compare_var_tw_reddrum) <- c("formula", "AIC")
for (i in 1:length(allformulas_reddrum)) {
model_tw_reddrum <- gam(as.formula(allformulas_reddrum[i]), data=df_CPUE_BC_wide_both, family= tw(link= "log"))
compare_var_tw_reddrum[i, 1] <- allformulas_reddrum[i]
compare_var_tw_reddrum[i, 2] <- AIC(model_tw_reddrum)
print(i)
}

write.csv(compare_var_tw_reddrum, "/users/sallydowd/Desktop/Ch1Data/Final_results/GAMs/Env/compare_var_tw_reddrum_both_env.csv")

#Southern kingfish
compare_var_tw_southernkingfish <- as.data.frame(matrix(ncol = 2, nrow = 0))
colnames(compare_var_tw_southernkingfish) <- c("formula", "AIC")
for (i in 1:length(allformulas_southernkingfish)) {
model_tw_southernkingfish <- gam(as.formula(allformulas_southernkingfish[i]), family= tw(link= "log"), data= df_CPUE_BC_wide_both)
compare_var_tw_southernkingfish[i, 1] <- allformulas_southernkingfish[i]
compare_var_tw_southernkingfish[i, 2] <- AIC(model_tw_southernkingfish)
print(i)
}

write.csv(compare_var_tw_southernkingfish, "~/Desktop/compare_var_tw_southernkingfish_both_env.csv")
```

```{r}
#Analyze best model
##Red drum
compare_var_tw_reddrum %>% arrange(AIC) %>% .[1,1]

reddrum_env <- gam(reddrumP915~s(avgssal)+s(SAVkm)+factor(Year), family= tw(link= "log"), data=df_CPUE_BC_wide_both)
summary(reddrum_env)
#Test model fit 
##Assumptions
gam.check(reddrum_env)
##Overfitting and prediction 

#TO DO: To assess overfitting: plot marginal effects of each covariate, max k is total # of observations for a covariate - 1 

test <- predict(reddrum_env, newdata= df_CPUE_BC_wide_both, type= "response") #explore this more, tweedie 


lets_see <- df_CPUE_BC_wide_both %>% dplyr::select(reddrumP915, avgssal, SAVkm, smallbluecrabP120, clupeidae_forage, sciaenidae_forage) %>% mutate(pred= predict(reddrum_env), type="link") %>% pivot_longer(cols= c(avgssal, SAVkm, smallbluecrabP120, clupeidae_forage, sciaenidae_forage), names_to= "predictor")

lets_see %>% ggplot(aes(value, reddrumP915)) + geom_point() + geom_smooth(method= "loess") + facet_wrap(~predictor, scales= "free") + standard_theme

#WHAT THE HECK! 
lets_see %>% ggplot(aes(value, reddrumP915)) + geom_point() + geom_smooth(method= "loess") + facet_wrap(~predictor, scales= "free") + standard_theme + geom_line(aes(x= value, y= pred))
```

##### Env + total forage + blue crabs

```{r}
#Load formulas
##Red drum
allformulas_reddrum_M2 <- dredgeform(pred = "reddrumP915", covars = c("s(avgdepth)", "s(avgssal)", "s(avgstemp)", "s(avgsdo)", "s(SAVkm)", "s(NoFishRest)", "s(smallbluecrabP120)", "s(reddrumP915forage)", "s(Year)"))
```

```{r}
#Run CV
##Red drum
compare_var_tw_reddrum_M2 <- as.data.frame(matrix(ncol = 2, nrow = 0))
colnames(compare_var_tw_reddrum_M2) <- c("formula", "AIC")
for (i in 1:length(allformulas_reddrum_M2)) {
model_tw_reddrum_M2 <- gam(as.formula(allformulas_reddrum_M2[i]), data=df_CPUE_BC_wide_both, family= tw(link= "log"))
compare_var_tw_reddrum_M2[i, 1] <- allformulas_reddrum_M2[i]
compare_var_tw_reddrum_M2[i, 2] <- AIC(model_tw_reddrum_M2)
print(i)
}

write.csv(compare_var_tw_reddrum_M2, "/users/sallydowd/Desktop/Ch1Data/Final_results/GAMs/Env_forage/compare_var_tw_reddrum_both_env_forage.csv")
```

```{r}
#Analyze best model
##Red drum
# compare_var_tw_reddrum_M2 %>% arrange(AIC) %>% .[1,1]

reddrum_env_forage <- gam(reddrumP915~s(avgssal)+s(SAVkm)+s(smallbluecrabP120)+s(Year), family= tw(link= "log"), data=df_CPUE_BC_wide_both)
summary(reddrum_env_forage)
#Test model fit 
##Assumptions
gam.check(reddrum_env_forage)
##Overfitting and prediction 
lets_see <- df_CPUE_BC_wide_both %>% dplyr::select(reddrumP915, avgssal, SAVkm, smallbluecrabP120, clupeidae_forage, sciaenidae_forage) %>% mutate(pred= predict(reddrum_env_forage)) %>% pivot_longer(cols= c(avgssal, SAVkm, smallbluecrabP120, clupeidae_forage, sciaenidae_forage), names_to= "predictor")

lets_see %>% ggplot(aes(value, reddrumP915)) + geom_point() + geom_smooth(method= "loess") + facet_wrap(~predictor, scales= "free") + standard_theme

#WHAT THE HECK! 
lets_see %>% ggplot(aes(value, reddrumP915)) + geom_point() + geom_smooth(method= "loess") + facet_wrap(~predictor, scales= "free") + standard_theme + geom_line(aes(x= value, y= pred))
```

##### Env + fish family forage

```{r}
#Load formulas
##Red drum
allformulas_reddrum_M3 <- dredgeform(pred = "reddrumP915", covars = c("s(avgdepth)", "s(avgssal)", "s(avgstemp)", "s(avgsdo)", "s(SAVkm)", "s(NoFishRest)", "s(smallbluecrabP120)", "s(clupeidae_forage)", "s(sciaenidae_forage)", "s(sparidae_forage)", "s(penaied_forage)", "s(paralichthyidae_forage)", "s(Year)"))
```

#### Model comparison

```{r}
#Run CV
##Red drum
compare_var_tw_reddrum_M3 <- as.data.frame(matrix(ncol = 2, nrow = 0))
colnames(compare_var_tw_reddrum_M3) <- c("formula", "AIC")
for (i in 1:length(allformulas_reddrum_M3)) {
model_tw_reddrum_M3 <- gam(as.formula(allformulas_reddrum_M3[i]), data=df_CPUE_BC_wide_both, family= tw(link= "log"))
compare_var_tw_reddrum_M3[i, 1] <- allformulas_reddrum_M3[i]
compare_var_tw_reddrum_M3[i, 2] <- AIC(model_tw_reddrum_M3)
print(i)
}

write.csv(compare_var_tw_reddrum_M3, "/users/sallydowd/Desktop/Ch1Data/Final_results/GAMs/Env_family/compare_var_tw_reddrum_both_env_family.csv")
```

```{r}
#Analyze best model
##Red drum
compare_var_tw_reddrum_M3 <- read.csv("/users/sallydowd/Desktop/Ch1Data/Final_results/GAMs/Env_family/compare_var_tw_reddrum_both_env_family.csv")
compare_var_tw_reddrum_M3 %>% arrange(AIC) %>% .[1,2]

reddrum_env_family <- gam(reddrumP915~s(avgssal)+s(SAVkm)+s(smallbluecrabP120)+s(clupeidae_forage)+s(sciaenidae_forage)+(Year), family= tw(link= "log"), data=df_CPUE_BC_wide_both)
summary(reddrum_env_family)

#Test model fit 
##Assumptions
gam.check(reddrum_env_family)
##Overfitting and prediction 
lets_see <- df_CPUE_BC_wide_both %>% dplyr::select(reddrumP915, avgssal, SAVkm, smallbluecrabP120, clupeidae_forage, sciaenidae_forage) %>% mutate(pred= predict(reddrum_env_family)) %>% pivot_longer(cols= c(avgssal, SAVkm, smallbluecrabP120, clupeidae_forage, sciaenidae_forage), names_to= "predictor")

lets_see %>% ggplot(aes(value, reddrumP915)) + geom_point() + geom_smooth(method= "loess") + facet_wrap(~predictor, scales= "free") + standard_theme

#WHAT THE HECK! 
lets_see %>% ggplot(aes(value, reddrumP915)) + geom_point() + geom_smooth(method= "loess") + facet_wrap(~predictor, scales= "free") + standard_theme + geom_line(aes(x= value, y= pred))
```

```{r}
AIC(reddrum_env_forage, reddrum_env, reddrum_env_family) %>% arrange(-AIC)
```

#Prediction https://multithreaded.stitchfix.com/blog/2015/07/30/gam/ #more interpretation: https://www.analyticsvidhya.com/blog/2023/09/understanding-generalized-additive-models-gams-a-comprehensive-guide/
