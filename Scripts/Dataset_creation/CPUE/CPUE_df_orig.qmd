---
title: "CPUE_df_orig"
format: html
editor: visual
---

#### Load datasets and packages

```{r}
packages <- c("ggplot2", "tidyverse", "lubridate", "sf", "sp", "dplyr", "rnaturalearth", "readr", "readxl", "spatialEco", "tidyr")
invisible(lapply(packages, library, character.only= TRUE))

p195_abund <- read_csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/P195/Finalized/p195_abund.csv")
P120_bioledt <- read_csv("~/Desktop/Ch1Data/P120/p120_biol_new.csv")
```

#### CPUE no length

##### P120

```{r}
select_spp <- c("atlantic menhaden", "atlantic croaker", "bay anchovy", "blue crab", "brown shrimp", "pink shrimp", "white shrimp", "pinfish", "silver perch", "southern flounder", "spot", "spotted seatrout", "striped anchovy", "weakfish")

##Form a haul dataset where every row is one haul 
summary(is.na(P120_bioledt$Sciname)) #28 NAs for Sciname
P120_bioledt <- P120_bioledt %>% drop_na(Sciname)
P120_bioledt$Speciescommonname[P120_bioledt$Speciescommonname == "northern brown shrimp"] <- "brown shrimp"
haul <- P120_bioledt %>% group_by(Date, Location, Station, Control1) %>% mutate(ID=row_number()) %>% filter(ID==1) %>% as.data.frame() #row every haul: Dan suggested grouping by Date, Location, Control1 Station b/c location is waterbody at large and some stations have the same name (need Location), needed to exclude any non-core sampling, had to group by Control1, SPB1 was pulled twice on 11/9/2021
length(unique(haul$Control1)) #7053
length(unique(P120_bioledt$Control1)) #7053
##Create dummy column for species of focus
haul$Species=NA#create a dummy column first
haul$Species=rep_along(haul$Species, c("atlantic menhaden", "atlantic croaker", "bay anchovy", "blue crab", "brown shrimp", "pink shrimp", "white shrimp", "pinfish", "silver perch", "southern flounder", "spot", "spotted seatrout", "striped anchovy", "weakfish")) #this repeats these species common names for the entirety of the length of the haul df
haul_df <- haul %>% dplyr::select(Control1, Program, Year, Month, Day, Date, Location, Nbrrec3, Station, Time, Duration, Sedsize, Btmcomp, Sedsize_new, Btmcomp_new, Depth, Stemp, Btemp, Ssal, Bsal, Sdo, Bdo, Secchi, Latitude, Longitude, Core, Species)
haul_df_all <- haul_df %>% tidyr::expand(Species,Control1) ##using expand to make all species associated with each collection number, is 13x (# of species) larger so it worked
haul=haul_df %>% dplyr::select(-Species) #drop dummy species common name from hauldf

#now can merge haul.all and haul to create a df with a row for species associated with each collection number
haul_final=left_join(haul_df_all,haul,by="Control1")%>%as.data.frame()

sel_spp_120 <- P120_bioledt %>% filter(Speciescommonname %in% select_spp) %>% dplyr::select(Control1,Date,Speciescommonname,Colnum) 
P120_bc_tojoin <- P120_bc_prop %>% dplyr::select(Control1, Date, -Speciescommonname, Age_class, Number)
P120_bc_tojoin <- P120_bc_tojoin %>% mutate(Age_class= ifelse(Age_class %in% "J", "juv blue crab", "adult blue crab")) %>% rename("Speciescommonname"= "Age_class", "Colnum"= "Number")
sel_spp_120join <- rbind(sel_spp_120, P120_bc_tojoin)
sel_spp_120joinedt <- sel_spp_120join %>% group_by(Speciescommonname,Control1)%>% mutate(id=row_number()) %>% filter(id==1) %>%ungroup()%>%as.data.frame() #should always be 1 for juv. and adult blue crab b/c have distinct rows, take the first row as there are repeats of Colnum with Control1 and Speciescommonname b/c of length measurements

sel_spp_120joinedt = sel_spp_120joinedt %>% select(-id)
haul_final <- haul_final %>% rename("Speciescommonname" = "Species")
haul_sel_spp <- left_join(haul_final, sel_spp_120joinedt) %>% as.data.frame() #df is 56,424 rows, 7053 rows for each species (8 species)
haul_sel_spp$Colnum[haul_sel_spp$Colnum %in% NA] <- 0

names_join <- P120_bioledt %>% select(Speciescommonname, Sciname) %>% distinct(Speciescommonname, .keep_all= T)
p120_CPUE <- haul_sel_spp %>% left_join(names_join) %>% mutate(Sciname = ifelse(Speciescommonname == "brown shrimp", "F. aztecus", Sciname)) #brown shrimp went to NA for Sciname
p120_CPUE$Sciname <- ifelse(p120_CPUE$Speciescommonname %in% "juv blue crab"|p120_CPUE$Speciescommonname %in% "adult blue crab", "C. sapidus", p120_CPUE$Sciname)

p120_CPUE$doy <- yday(p120_CPUE$Date)
p120_CPUE$Photoperiod <- daylength(lat= p120_CPUE$Latitude, doy= p120_CPUE$doy)
p120_CPUE$Season <- ifelse(p120_CPUE$Month==4 | p120_CPUE$Month==5 | p120_CPUE$Month==6, "Spring", ifelse(p120_CPUE$Month==9 |p120_CPUE$Month==10 | p120_CPUE$Month==11 | p120_CPUE$Month==12, "Fall", ifelse(p120_CPUE$Month==7 |p120_CPUE$Month==8, "Summer", "Winter")))
p120_CPUE$Ym_date <- format(p120_CPUE$Date, "%Y-%m")

#write.csv(p120_CPUE, "~/Documents/GitHub/NCBlueCrab_Predators/Data/P120/Finalized/p120_CPUE.csv")
```

##### P195 CPUE

```{r}
p195_abundedt <- p195_abund %>% drop_na(Sciname) #1 NA for Sciname
length(unique(p195_abundedt$Eventname)) #2012
haul <- p195_abundedt %>% group_by(Date, Stationcode) %>% mutate(ID=row_number()) %>% filter(ID==1) %>% as.data.frame() #row every haul (2012 hauls), same as unique eventname 
select_spp <- c("atlantic brief squid", "atlantic thread herring", "atlantic menhaden", "bay anchovy", "blue crab", "bluefish", "brown shrimp", "pink shrimp", "white shrimp", "cownose ray", "lesser blue crab", "pinfish", "silver perch", "southern flounder", "southern kingfish", "spot", "striped anchovy", "summer flounder", "weakfish")

haul$Species=NA#create a dummy column first
haul$Species=rep_along(haul$Species,c("atlantic brief squid", "atlantic thread herring", "atlantic menhaden", "bay anchovy", "blue crab", "bluefish", "brown shrimp", "pink shrimp", "white shrimp", "cownose ray", "lesser blue crab", "pinfish", "silver perch", "southern flounder", "southern kingfish", "spot", "striped anchovy", "summer flounder", "weakfish"))

haul_df <- haul %>% dplyr::select(Eventname, Year, Month, Day, Date, Location, Stationcode, Timestart, Duration, Tempsurface, Tempbottom, Salinitysurface, Salinitybottom, Sdo, Bdo, Latitudestart, Longitudestart, Depthstart, Depthend, Sedsize_new, Btmcomp_new, Secchi_depthcm, Photoperiod, Wbdytype, Season, Ym_date, Wbd, Depthzone, Species)

haul_df_all <- haul_df %>% tidyr::expand(Species,Eventname)
haul=haul_df %>%select(-Species)
haul_final=left_join(haul_df_all,haul,by="Eventname")%>%as.data.frame() #18*2012= 36216, it worked

sel_spp_195 <- p195_abundedt %>% filter(Speciescommonname %in% select_spp) %>% select(Eventname,Date,Speciescommonname,Numbertotal)#1997 for Eventname
P195_bc_tojoin <- P195_bc_prop_edt2 %>% select(Eventname,Date, Age_class, Number) 
P195_bc_tojoin <- P195_bc_tojoin %>% rename("Speciescommonname"= "Age_class", "Numbertotal"= "Number")
sel_spp_195join <- rbind(sel_spp_195, P195_bc_tojoin)
#To note: there are some Species that have multiple values for Numbertotal for same Control1 (diseased individuals), need to take the larger value, 12903 to 12713 values
sel_spp_195joinedt <- sel_spp_195join %>% group_by(Speciescommonname, Eventname) %>% group_by(Speciescommonname, Eventname) %>% filter(Numbertotal== max(Numbertotal)) %>% distinct(Numbertotal, .keep_all= TRUE) #max takes larger value but it could be same value, need to do distinct
sel_spp_195joinedt2 <- sel_spp_195joinedt %>% group_by(Speciescommonname, Eventname) %>% mutate(id= row_number()) %>% filter(id==1) %>%ungroup()%>%as.data.frame() %>% select(Eventname,Date,Speciescommonname, Numbertotal) #all id's are 1 before filtering 

haul_final <- haul_final %>% rename("Speciescommonname" = "Species")
haul_sel_spp <- left_join(haul_final, sel_spp_195joinedt2) %>% as.data.frame()
haul_sel_spp$Numbertotal[haul_sel_spp$Numbertotal %in% NA] <- 0

spp_names <- p195_abundedt %>% select(Speciescommonname, Speciesscientificname, Sciname) %>% distinct(Speciescommonname, .keep_all= TRUE)
p195_CPUE <- haul_sel_spp %>% left_join(spp_names) #NA for juv and adult blue crab
p195_CPUE$Sciname <- ifelse(p195_CPUE$Speciescommonname %in% "juv blue crab"|p195_CPUE$Speciescommonname %in% "adult blue crab", "C. sapidus", p195_CPUE$Sciname)
p195_CPUE$Speciesscientificname <- ifelse(p195_CPUE$Speciescommonname %in% "juv blue crab"|p195_CPUE$Speciescommonname %in% "adult blue crab", "callinectes sapidus", p195_CPUE$Speciesscientificname)
write.csv(p195_CPUE, "~/Documents/GitHub/NCBlueCrab_Predators/Data/P195/Finalized/p195_CPUE.csv")
```

####CPUE length 
#####P120

```{r}
#After EDA, we know we want a dataset with only Core stations and in May and June
P120_bioledt <- P120_bioledt %>% filter(Core== 1|Core==2, Month==5|Month==6) #only want cores sampled year around

#Form blue crab dataset and make sure each blue crab in the subsample has their own row
P120_bc <- P120_bioledt %>% filter(Speciescommonname %in% "blue crab") %>% dplyr::select(Control1, Date, Location, Colnum, Samnum, Subnum, Linenum, Frequenc, Length, Speciescommonname) %>% drop_na(Colnum, Length)
P120_bc_edt <- P120_bc %>% group_by(Control1, Colnum, Length) %>% uncount(weights=Frequenc, .remove= FALSE) %>% mutate(Frequenc_new = 1)

#Bin length: define the breaks for the intervals
values <- 1:300
breaks <- seq(0, 300, by = 10)
assigned_values <- seq(10, 300, by = 10)
result <- cut(values, breaks, labels = assigned_values) #cut values based on cut points (breaks), labels for resulting category, default is (a, b)
result_numeric <- as.numeric(as.character(result))
df <- data.frame(Length = values, Assigned_length = result_numeric)

#Calculate proportion of juveniles and adults in each Eventname
P120_bc_prop <- P120_bc_edt %>% left_join(df, by= "Length")
P120_bc_prop$Age_class <- ifelse(P120_bc_prop$Assigned_length < 50, "J", "A") #assign juvenile if under 50 mm, 50.8 mm (2 inches) is harvestable length, blue crabs should reach this length in ~1 year when they become sexually mature
P120_bc_prop <- P120_bc_prop %>% group_by(Control1, Age_class, Colnum) %>% mutate(Count= n()) %>% distinct(Count, .keep_all= TRUE) %>% ungroup() %>% group_by(Control1, Colnum) %>% mutate(Total_sampled= sum(Count)) %>% ungroup() %>% mutate(Proportion= Count/Total_sampled) %>% dplyr::select(Control1, Date, Speciescommonname, Colnum, Age_class, Count, Total_sampled, Proportion) #don't need to group_by Date/Location/Station here as blue crabs weren't in the diff_values below after 2008

#Now apply proportion to Colnum 
P120_bc_prop <- P120_bc_prop %>% mutate(Number= round(Colnum*Proportion,0))
P120_bc_prop$Number[P120_bc_prop$Number==0] <- 0.5 #Will have to check over this move, want it to be sampled but 
```
