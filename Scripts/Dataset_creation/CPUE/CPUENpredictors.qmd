---
title: "CPUE_calcs"
format: html
editor: visual
---

#### Load packages, functions, and CPUE datasets

```{r}
#Load packages and functions 
packages <- c("ggplot2", "tidyverse", "lubridate", "sf", "sp", "dplyr", "rnaturalearth", "readr", "readxl", "spatialEco", "rstatix", "viridis", "BBmisc", "corrplot")
invisible(lapply(packages, library, character.only= TRUE))

standard_theme <- theme_bw() + theme(panel.border = element_rect(fill=NA, colour = "black")) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(legend.text.align= 0, legend.title= element_text(size = 12), legend.text = element_text(size= 10), axis.text=element_text(size=10), axis.title=element_text(size=12))
world <- ne_countries(scale = "medium", returnclass = "sf")
```

```{r}
#Load CPUE datasets
p915_CPUE <- read_csv("/users/sallydowd/Desktop/Ch1Data/P915/p915_CPUE_new.csv")
setwd("~/Documents/GitHub/NCBlueCrab_Predators")
p120_CPUE <- read_csv("Data/P120/Finalized/p120_CPUE.csv") #98472 rows/14 species = 7053 unique sampling events 
p195_CPUE <- read_csv("Data/P195/Finalized/p195_CPUE.csv")

#Filter datasets: Add back in Secchi size once get P195 data
p915_CPUEedt <- p915_CPUE %>% dplyr::select(-...1, -Obs, -Weather, -Weather, -Sedsize, -Btmcomp, -doy, -Wbdytype, -Wbd, -Sample, -Ph, -Quad, -Secchi) %>% rename("Location" = "Area", "Strata/station"= "Strata") %>% filter(between(Year, 2001, 2021), Month %in% c(5,6,9)) #added in species of focus for now (still waiting on data)
p120_CPUEedt <- p120_CPUE %>% filter(Core== 1|Core==2) %>% dplyr::select(-...1, -Program, -Nbrrec3, -Time, -Duration, -doy, -Core, -Sedsize, -Btmcomp, -Secchi, -Photoperiod) %>% rename("Strata/station"= "Station") %>% filter(between(Year, 2001, 2021), Month %in% c(5,6))
p195_CPUEedt <- p195_CPUE %>% dplyr::select(-...1, -Timestart, -Duration, -Depthend, -Wbdytype, -Wbd, -Speciesscientificname, -Depthzone, -Secchi_depthcm, -Photoperiod) %>% rename("Ssal" = "Salinitysurface", "Bsal"= "Salinitybottom", "Stemp"= "Tempsurface", "Btemp"= "Tempbottom", "Latitude"= "Latitudestart", "Longitude"= "Longitudestart", "Colnum"= "Numbertotal", "Control1"= "Eventname", "Strata/station"= "Stationcode", "Depth"= "Depthstart") %>% filter(between(Year, 2001, 2021), Month %in% c(5,6,9))

p915_CPUEedt <- p915_CPUEedt %>% drop_na(Latitude, Longitude)
p915_CPUEedt$Survey <- "P915"
p120_CPUEedt <- p120_CPUEedt  %>% drop_na(Latitude, Longitude)
p120_CPUEedt$Survey <- "P120"
p195_CPUEedt <- p195_CPUEedt  %>% drop_na(Latitude, Longitude)
p195_CPUEedt$Survey <- "P195"

CPUE_all <- rbind(p915_CPUEedt, p120_CPUEedt, p195_CPUEedt)
CPUE_all$lat_lon <- paste(CPUE_all$Latitude, CPUE_all$Longitude, sep= "_")

#Checks: had an issue where filtering month with == c(5,6) was deleting data, for P120 and P195 it would create unequal # of Control1s for species. For P915, the # of Control1s were the same but it cut down the dataset as well 
length(unique(p195_CPUEedt$Control1)) #2079 (5) + 2284 = 4363
length(unique(p195_CPUEedt$Speciescommonname)) #7053*14 = 98742, this matches # of rows, correct
p195_CPUEedt %>% group_by(Speciescommonname) %>% summarize(count= length(unique(Control1)))
```

```{r}
#Gridded datasets
##10 km
predictors_df <- read_csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/Predictor_variables/Grid_predictors_10km.11.20.23.csv")
predictors_df <- predictors_df[,-1]
gridded_coords <- read_csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_11.20.23.csv")
gridded_coords <- gridded_coords[,-1]

globe_bb <- matrix(c(-78.900147,33.802938,
                      -78.900147,36.672128,
                      -75.263672,36.672128,
                     -75.263672, 33.802938,
                     -78.900147,33.802938), byrow = TRUE, ncol = 2) %>% list() %>% st_polygon() %>% st_sfc(., crs = 4326)
globe_grid_30 <- st_make_grid(x= globe_bb, n = c(30,30), crs = 4326, what = 'polygons') %>% st_sf('geometry' = ., data.frame('ID' = 1:length(.)))

##5 km 
predictors_df5km <- read_csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/Predictor_variables/grid_predictors_5km.10.03.23.csv")
predictors_df5km <- predictors_df5km[,-1]
gridded_coords5km <- read_csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_10.02.23.5km.csv")
gridded_coords5km <- gridded_coords5km[,-1]
```

### 10 km:

May, June and September

##### Combine gridded, predictors, and biological datasets

```{r}
#Join gridded coordinates with predictors 
gridpred_lat_lon <- gridded_coords %>% left_join(predictors_df, by= "gridID") %>% filter(!gridID %in% 543) #Removing gridIDs 543 as it only had 4 observations, see clarification in Predictor_calcs.qmd

##Join gridded coordinates with predictors to CPUE data
CPUE_all_grid_pred <- CPUE_all %>% left_join(gridpred_lat_lon, by= "lat_lon") %>% dplyr::select(lat_lon, everything())
#1208 rows with NA for gridID, compared with dataset where I did not remove gridIDs outside study area (other than 543) and it was 37, keep this dataset 
summary(is.na(CPUE_all_grid_pred))

CPUE_all_grid_pred <- CPUE_all_grid_pred %>% drop_na(gridID)
CPUE_all_grid_pred <- CPUE_all_grid_pred %>% separate(lat_lon, into= c("Latitude", "Longitude"), sep = "_", convert= TRUE, remove=FALSE) 

ggplot(data = world) + geom_sf() + geom_sf(data =globe_grid_30, fill = NA) + coord_sf(xlim=c(-78, -75), ylim=c(33.5,37), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + standard_theme + geom_point(data = CPUE_all_grid_pred, aes(x = Longitude, y = Latitude, color= Survey), size = .2) #it worked! 

#write.csv(CPUE_all_grid_pred,"~/Desktop/Ch1Data/CPUE/CPUE_all_grid_pred.11.21.23.csv")
```

```{r}
base_plot <- ggplot(data = world) + geom_sf() + geom_sf(data =globe_grid_30, fill = NA) + coord_sf(xlim=c(-78, -75), ylim=c(33.5,37), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + standard_theme 
#Outlier analysis
colnames(CPUE_all_grid_pred)
cn <- c("Year", "Month", "Day", "Depth", "Ssal", "Bsal", "Stemp", "Btemp", "Sdo", "Bdo", "Colnum", "GillPound_aA", "InletDist_km", "SAV_km", "Latitude", "Longitude")
t <- list()
for(col in cn){
t[[col]] <- CPUE_all_grid_pred %>% identify_outliers(col) %>% filter(is.extreme== TRUE) %>% dplyr::select(col, is.extreme, Speciescommonname)
}
#No outliers for year, month, day, surface salinity, bottom salinity, inlet distance, latitude and longitude 

##depth:
t[4] 
min(CPUE_all_grid_pred$Depth, na.rm= TRUE) #0 m 
max(CPUE_all_grid_pred$Depth, na.rm= TRUE) #8.8 m
min(t[[4]]$Depth) #5.8
max(t[[4]]$Depth) #8.8
CPUE_all_grid_pred %>% filter(Depth >= 5.8) 
ggplot() + geom_histogram(data= CPUE_all_grid_pred, aes(x= Depth)) + standard_theme
base_plot + geom_point(data = subset(CPUE_all_grid_pred,Depth >=5.3), aes(x = Longitude, y = Latitude, color= Depth)) + scale_color_gradient(low = "lightblue", high = "darkblue")

##Stemp: 246 extreme outliers in May and June, remove these 
t[7]
min(CPUE_all_grid_pred$Stemp, na.rm= TRUE) #0 
max(CPUE_all_grid_pred$Stemp, na.rm= TRUE) #36.5C
min(t[[7]]$Stemp) #0
max(t[[7]]$Stemp) #11.8
subset(CPUE_all_grid_pred, Stemp <= 11.8) #all outliers in May and June
ggplot() + geom_histogram(data= CPUE_all_grid_pred, aes(x= Stemp)) + standard_theme
base_plot + geom_point(data = subset(CPUE_all_grid_pred, Stemp <= 9.3), aes(x = Longitude, y = Latitude, color= Stemp)) + scale_color_gradient(low = "lightblue", high = "darkblue")

##Sdo: don't remove outliers, remove 0 values 
t[9]
min(CPUE_all_grid_pred$Sdo, na.rm= TRUE) #0 
max(CPUE_all_grid_pred$Sdo, na.rm= TRUE) #15.9
min(t[[9]]$Sdo) #14.5
max(t[[9]]$Sdo) #15.9
ggplot() + geom_histogram(data= CPUE_all_grid_pred, aes(x= Sdo)) + standard_theme
base_plot + geom_point(data = subset(CPUE_all_grid_pred, Sdo >= 14.5), aes(x = Longitude, y = Latitude, color= Sdo)) + scale_color_gradient(low = "lightblue", high = "darkblue")

##SAV km: 
t[14]
min(CPUE_all_grid_pred$SAV_km, na.rm= TRUE) #0 
max(CPUE_all_grid_pred$SAV_km, na.rm= TRUE) #75.8
min(t[[14]]$SAV_km) #25.7
max(t[[14]]$SAV_km) #45.7
ggplot() + geom_histogram(data= CPUE_all_grid_pred, aes(x= SAV_km)) + standard_theme
ggplot(data = world) + geom_sf() + geom_sf(data =globe_grid_30, fill = NA) + theme(panel.background = element_rect(fill = "white", colour = "black")) + standard_theme + geom_point(data = subset(CPUE_all_grid_pred, SAV_km >= 25.7), aes(x = Longitude, y = Latitude, color= Survey)) + coord_sf(xlim=c(-80, -75), ylim=c(33.5,37), expand = TRUE)
subset(CPUE_all_grid_pred, SAV_km >= 25.7 & Survey == "P120") #39 rows with P915, 1,169 rows for P120 

##Colnum
t[11]
min(CPUE_all_grid_pred$Colnum, na.rm= TRUE) #0 
max(CPUE_all_grid_pred$Colnum, na.rm= TRUE) #9741
min(t[[11]]$Colnum) #4.5
max(t[[11]]$Colnum) #9741
ggplot() + geom_histogram(data= CPUE_all_grid_pred, aes(x= Colnum)) + standard_theme + xlim(0, 5000) + ylim(0,6000)
ggplot() + geom_histogram(data= CPUE_all_grid_pred, aes(x= Colnum)) + standard_theme +
facet_wrap(~Speciescommonname) + xlim(0, 1000) + ylim(0,750)
ggplot() + geom_histogram(data= subset(CPUE_all_grid_pred, Colnum > 100), aes(x= Colnum)) + standard_theme + facet_wrap(~Speciescommonname) + xlim(0, 1000) + ylim(0,250)
```

##### CPUE dataset

```{r}
#Form CPUE dataset 
CPUE_dfs_gridded_final <- read_csv("~/Desktop/Ch1Data/CPUE/CPUE_all_grid_pred.11.21.23.csv")
CPUE_dfs_gridded_final <- CPUE_dfs_gridded_final[,-1]

#Effort by survey: this works 
CPUE_grid <- CPUE_dfs_gridded_final %>% mutate("Effort"= ifelse(Survey %in% "P120", 1, ifelse(Survey %in% "P195", 20, ifelse(Survey %in% "P915" & Location == "CAPEF" & Month %in% c(04, 05, 06, 07, 08, 09), 240, ifelse(Survey %in% "P915" & Location == "NEWR" & Month %in% c(04, 05, 06, 07, 08, 09), 240, 720))))) #P120: 1 minute tows, P195: 20 minute tows, P915: 240 minute soak time for rivers from April to September and 720 soak time everything else 

#CPUE by row: since you assigned effort correctly, this will work as it should 
CPUE_grid$CPUE <- CPUE_grid$Colnum/CPUE_grid$Effort

CPUE_grid <- CPUE_grid %>% group_by(Survey) %>% mutate(CPUE_stdzd= normalize(CPUE, method= "range", range= c(0,1))) ##min-max scaling:
CPUE_grid <- CPUE_grid %>% group_by(gridID, Month, Survey, Year, Speciescommonname) %>% mutate(mean_CPUE= mean(CPUE), mean_CPUE_stdzd= mean(CPUE_stdzd))

#Remove outliers! Turn into NAs and then remove them 
CPUE_grid_avg <- CPUE_grid %>% ungroup() %>% mutate(Stemp= ifelse(CPUE_grid$Stemp <= 11.8, NA, CPUE_grid$Stemp), Ssal= ifelse(CPUE_grid$Ssal==0.0, NA, CPUE_grid$Ssal), Sdo= ifelse(CPUE_grid$Sdo==0.0, NA, CPUE_grid$Sdo), Depth= ifelse(CPUE_grid$Depth==0.0, NA, CPUE_grid$Depth)) %>% group_by(Month, Year, gridID) %>% mutate(avg_depth= mean(Depth, na.rm= TRUE), avg_ssal= mean(Ssal, na.rm= TRUE), avg_bsal= mean(Bsal, na.rm= TRUE), avg_stemp= mean(Stemp, na.rm= TRUE), avg_btemp= mean(Btemp, na.rm= TRUE), avg_sdo= mean(Sdo, na.rm= TRUE), avg_bdo= mean(Bdo, na.rm= TRUE), avg_latitude= mean(Latitude, na.rm= TRUE), avg_longitude= mean(Longitude), na.rm= TRUE) %>% dplyr::select(-avg_bsal, -avg_btemp, -avg_bdo, -Stemp, -Btemp, -Sdo, -Bdo, -Ssal, -Bsal, -Season, -Sedsize_new, -Btmcomp_new, -Depth, -na.rm, -avg_latitude, -avg_longitude)
CPUE_grid_avg <- CPUE_grid_avg %>% mutate_all(~ifelse(is.nan(.), NA, .)) %>% drop_na() #drops 2426 rows

#Correlation plot to see what to remove
cor <- cor(CPUE_grid_avg[, c(17, 19:25, 28:32)])
corrplot(cor) #fishing variables are relatively correlated, for now, only select NoFishRest and FishingAll_num (not correlated), already removed bottom environmental variables previously
cor1 <- cor(CPUE_grid_avg[, c(24:25, 38:41)])
corrplot(cor1) #maybe remove inlet distance 

#Remove latitude, longitude, all fishing variables except NofishRest and FishingAll_num 
CPUE_grid_avg_edt <- CPUE_grid_avg %>% dplyr::select(-Latitude, -Longitude, -DPA_aA:-RestrictedArea_pA, -ShrimpTrawl_aA:-GillPound_aA, -lat_lon, -Day, -Location, -Colnum, -Date, -Ym_date, -Sciname, -"Strata/station", -Waterbody_A, -Effort, -Effort, -CPUE, -CPUE_stdzd, -mean_CPUE, -Month, -Control1)

summary(is.na(CPUE_grid_avg_edt)) #no NAs                                           
##Make there be one column for each CPUE
CPUE_grid_avg_edt <- CPUE_grid_avg_edt %>% group_by(Month, Year, gridID, Speciescommonname, Survey) %>% distinct(mean_CPUE_stdzd, .keep_all= TRUE)

write.csv(CPUE_grid_avg_edt, "~/Desktop/Ch1Data/CPUE/CPUE_grid_avg_edt.11.21.23.csv")
```

##### Count dataset

```{r}
CPUE_grid_count <- CPUE_grid %>% group_by(Month, gridID, Survey, Year, Speciescommonname) %>% mutate(avg_count= round(mean(Colnum),0)) #doesn't round any down to 0

CPUE_grid_count_avg <- CPUE_grid_count %>% ungroup() %>% mutate(Stemp= ifelse(CPUE_grid_count$Stemp <= 11.8, NA, CPUE_grid_count$Stemp), Ssal= ifelse(CPUE_grid_count$Ssal==0.0, NA, CPUE_grid_count$Ssal), Sdo= ifelse(CPUE_grid_count$Sdo==0.0, NA, CPUE_grid_count$Sdo), Depth= ifelse(CPUE_grid_count$Depth==0.0, NA, CPUE_grid_count$Depth)) %>% group_by(Year, gridID, Month) %>% mutate(avg_depth= mean(Depth, na.rm= TRUE), avg_ssal= mean(Ssal, na.rm= TRUE), avg_bsal= mean(Bsal, na.rm= TRUE), avg_stemp= mean(Stemp, na.rm= TRUE), avg_btemp= mean(Btemp, na.rm= TRUE), avg_sdo= mean(Sdo, na.rm= TRUE), avg_bdo= mean(Bdo, na.rm= TRUE), avg_latitude= mean(Latitude, na.rm= TRUE), avg_longitude= mean(Longitude), na.rm= TRUE) %>% dplyr::select(-avg_bsal, -avg_btemp, -avg_bdo, -Stemp, -Btemp, -Sdo, -Bdo, -Ssal, -Bsal, -Season, -Sedsize_new, -Btmcomp_new, -Depth, -na.rm, -avg_latitude, -avg_longitude)

CPUE_grid_count_avg <- CPUE_grid_count_avg %>% mutate_all(~ifelse(is.nan(.), NA, .)) %>% drop_na() #dropped 1324 rows, same as before 

CPUE_grid_count_avg_edt <- CPUE_grid_count_avg %>% dplyr::select(-Latitude, -Longitude, -DPA_aA:-RestrictedArea_pA, -ShrimpTrawl_aA:-GillPound_aA, -lat_lon, -Day, -Location, -Colnum, -Date, -Ym_date, -Sciname, -"Strata/station", -Waterbody_A, -Effort, -Effort, -Month, -Control1)
CPUE_grid_count_avg_edt <- CPUE_grid_count_avg_edt %>% group_by(Year, gridID, Speciescommonname, Survey, Month) %>% distinct(avg_count, .keep_all= TRUE)

write.csv(CPUE_grid_count_avg_edt,"~/Desktop/Ch1Data/CPUE/CPUE_grid_count_avg_edt.11.21.23.csv")
```

##### Presence-absence dataset

```{r}
##Binary dataset (0 or 1):  
CPUE_grid_binary_edt <- CPUE_grid_count_avg_edt %>% mutate(binary = ifelse(avg_count > 0, 1, 0))

write.csv(CPUE_grid_binary_edt,"~/Desktop/Ch1Data/CPUE/CPUE_grid_binary_edt.11.22.23.csv") 
```

### 5 km

########################## 5 KM in May, June, & September

To edit for 5 km

```{r}
gridpred_lat_lon <- gridded_coords %>% left_join(predictors_df, by= "gridID")

##Join lat_lon from predictors gridded to CPUE!! 143 rows with NA for gridID, 7 latitude and longitude points, all P915
CPUE_all_grid_pred <- CPUE_all %>% left_join(gridpred_lat_lon, by= "lat_lon") %>% dplyr::select(lat_lon, everything())

CPUE_all_grid_pred <- CPUE_all_grid_pred %>% drop_na(gridID)
CPUE_all_grid_pred <- CPUE_all_grid_pred %>% separate(lat_lon, into= c("Latitude", "Longitude"), sep = "_", convert= TRUE, remove=FALSE) %>% filter(!gridID %in% c(706, 757, 1576, 2165, 2655, 3530, 258)) #get rid of grid cells that are outliers, gets rid of 323 rows 

ggplot(data = world) + geom_sf() + geom_sf(data =globe_grid_60, fill = NA) + coord_sf(xlim=c(-78, -75), ylim=c(33.5,37), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + standard_theme + geom_point(data = CPUE_all_grid_pred, aes(x = Longitude, y = Latitude, color= Survey), size = .2) #it worked! 

#Outlier analysis: there are some is.extreme outliers here and there but I've decided not to remove any (e.g: outlier for CPUE makes sense)
colnames(CPUE_all_grid_pred)
cn <- c("Year", "Month", "Day", "Depth", "Ssal", "Bsal", "Stemp", "Btemp", "Sdo", "Bdo", "Colnum", "GillPound_aA", "InletDist_km", "SAV_km", "Latitude", "Longitude")
t <- list()
for(col in cn){
t[[col]] <- CPUE_all_grid_pred %>% identify_outliers(col) %>% filter(is.extreme== TRUE) %>% select(col, is.extreme, Speciescommonname)
}

write.csv(CPUE_all_grid_pred,"~/Documents/GitHub/NCBlueCrab_Predators/Data/CPUE/CPUE_all_grid_pred.5km.10.04.23.csv") 
```

############# 5 km

CPUE calculation

```{r}
#Form CPUE dataset 
CPUE_dfs_gridded_final <- read_csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/CPUE/CPUE_all_grid_pred.5km.10.04.23.csv")
CPUE_dfs_gridded_final <- CPUE_dfs_gridded_final[,-1]

#Effort by survey: this works 
CPUE_grid <- CPUE_dfs_gridded_final %>% mutate("Effort"= ifelse(Survey %in% "P120", 1, ifelse(Survey %in% "P195", 20, ifelse(Survey %in% "P915" & Location == "CAPEF" & Month %in% c(04, 05, 06, 07, 08, 09), 240, ifelse(Survey %in% "P915" & Location == "NEWR" & Month %in% c(04, 05, 06, 07, 08, 09), 240, 720))))) #P120: 1 minute tows, P195: 20 minute tows, P915: 240 minute soak time for rivers from April to September and 720 soak time everything else 

#CPUE by row: since you assigned effort correctly, this will work as it should 
CPUE_grid$CPUE <- CPUE_grid$Colnum/CPUE_grid$Effort

CPUE_grid <- CPUE_grid %>% group_by(Survey) %>% mutate(CPUE_stdzd= normalize(CPUE, method= "range", range= c(0,1))) ##min-max scaling:
CPUE_grid <- CPUE_grid %>% group_by(gridID, Survey, Year, Speciescommonname) %>% mutate(mean_CPUE= mean(CPUE), mean_CPUE_stdzd= mean(CPUE_stdzd))

#Add a few more environmental predictors: exclude 0 values for stemp, sdo, or ssal by turning them to NAs and then
CPUE_grid_avg <- CPUE_grid %>% ungroup() %>% mutate(Stemp= ifelse(CPUE_grid$Stemp==0.0, NA, CPUE_grid$Stemp), Ssal= ifelse(CPUE_grid$Ssal==0.0, NA, CPUE_grid$Ssal), Sdo= ifelse(CPUE_grid$Sdo==0.0, NA, CPUE_grid$Sdo)) %>% group_by(Year, gridID) %>% mutate(avg_depth= mean(Depth, na.rm= TRUE), avg_ssal= mean(Ssal, na.rm= TRUE), avg_bsal= mean(Bsal, na.rm= TRUE), avg_stemp= mean(Stemp, na.rm= TRUE), avg_btemp= mean(Btemp, na.rm= TRUE), avg_sdo= mean(Sdo, na.rm= TRUE), avg_bdo= mean(Bdo, na.rm= TRUE), avg_latitude= mean(Latitude, na.rm= TRUE), avg_longitude= mean(Longitude), avg_photoperiod= mean(Photoperiod), na.rm= TRUE) %>% dplyr::select(-avg_bsal, -avg_btemp, -avg_bdo, -Stemp, -Btemp, -Sdo, -Bdo, -Ssal, -Bsal, -Season, -Sedsize_new, -Btmcomp_new, -Photoperiod, -Depth, -avg_photoperiod, -na.rm, -avg_latitude, -avg_longitude)
CPUE_grid_avg <- CPUE_grid_avg %>% mutate_all(~ifelse(is.nan(.), NA, .)) %>% drop_na() #drops 835 rows, 757 NA for avg_do, 114 NA for avg_stemp, 179 NA for avg_ssal

#Correlation plot to see what to remove
cor <- cor(CPUE_grid_avg[, c(17, 19:25, 28:31)])
corrplot(cor) #fishing variables are relatively correlated, for now, only select NoFishRest and FishingAll_num (not correlated), already removed bottom environmental variables previously

unique(CPUE_grid_avg$NoFishRest)
colnames(CPUE_grid_avg)

#Remove latitude, longitude, all fishing variables except NofishRest and FishingAll_num 
CPUE_grid_avg_edt <- CPUE_grid_avg %>% dplyr::select(-Latitude, -Longitude, -DPA_aA:-RestrictedArea_pA, -ShrimpTrawl_aA:-GillPound_aA, -lat_lon, -Day, -Location, -Colnum, -Date, -Ym_date, -Sciname, -"Strata/station", -Waterbody_A, -Effort, -Effort, -CPUE, -CPUE_stdzd, -mean_CPUE, -Month, -Control1)

colnames(CPUE_grid_avg_edt)                                    
summary(is.na(CPUE_grid_avg_edt))                                              

##Make there be one column for each CPUE
CPUE_grid_avg_edt <- CPUE_grid_avg_edt %>% group_by(Year, gridID, Speciescommonname, Survey) %>% distinct(mean_CPUE_stdzd, .keep_all= TRUE)

write.csv(CPUE_grid_avg_edt, "~/Documents/GitHub/NCBlueCrab_Predators/Data/CPUE/CPUE_grid_avg_edt.5km.10.04.23.csv")          

#Form count dataset 
CPUE_grid_count <- CPUE_grid %>% group_by(gridID, Survey, Year, Speciescommonname) %>% mutate(avg_count= round(mean(Colnum),0)) #doesn't round any down to 0

CPUE_grid_count_avg <- CPUE_grid_count %>% ungroup() %>% mutate(Stemp= ifelse(CPUE_grid_count$Stemp==0.0, NA, CPUE_grid_count$Stemp), Ssal= ifelse(CPUE_grid_count$Ssal==0.0, NA, CPUE_grid_count$Ssal), Sdo= ifelse(CPUE_grid_count$Sdo==0.0, NA, CPUE_grid_count$Sdo)) %>% group_by(Year, gridID) %>% mutate(avg_depth= mean(Depth, na.rm= TRUE), avg_ssal= mean(Ssal, na.rm= TRUE), avg_bsal= mean(Bsal, na.rm= TRUE), avg_stemp= mean(Stemp, na.rm= TRUE), avg_btemp= mean(Btemp, na.rm= TRUE), avg_sdo= mean(Sdo, na.rm= TRUE), avg_bdo= mean(Bdo, na.rm= TRUE), avg_latitude= mean(Latitude, na.rm= TRUE), avg_longitude= mean(Longitude), avg_photoperiod= mean(Photoperiod), na.rm= TRUE) %>% dplyr::select(-avg_bsal, -avg_btemp, -avg_bdo, -Stemp, -Btemp, -Sdo, -Bdo, -Ssal, -Bsal, -Season, -Sedsize_new, -Btmcomp_new, -Photoperiod, -Depth, -avg_photoperiod, -na.rm, -avg_latitude, -avg_longitude)

CPUE_grid_count_avg <- CPUE_grid_count_avg %>% mutate_all(~ifelse(is.nan(.), NA, .)) %>% drop_na() #drops 835 rows, 757 NA for avg_do, 114 NA for avg_stemp, 179 NA for avg_ssal        

colnames(CPUE_grid_count_avg)
CPUE_grid_count_avg_edt <- CPUE_grid_count_avg %>% dplyr::select(-Latitude, -Longitude, -DPA_aA:-RestrictedArea_pA, -ShrimpTrawl_aA:-GillPound_aA, -lat_lon, -Day, -Location, -Colnum, -Date, -Ym_date, -Sciname, -"Strata/station", -Waterbody_A, -Effort, -Effort, -Month, -Control1)
CPUE_grid_count_avg_edt <- CPUE_grid_count_avg_edt %>% group_by(Year, gridID, Speciescommonname, Survey) %>% distinct(avg_count, .keep_all= TRUE)

write.csv(CPUE_grid_count_avg_edt,"~/Documents/GitHub/NCBlueCrab_Predators/Data/CPUE/CPUE_grid_count_avg_edt.5km.10.04.23.csv") 


test <- read.csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/CPUE/CPUE_grid_count_avg_edt.5km.10.04.23.csv")
t <- test %>% filter(Survey %in% "P120") %>% dplyr::select(-c(CPUE, mean_CPUE, CPUE_stdzd)) %>% ungroup() %>% pivot_wider(values_from = "avg_count", names_from = "Speciescommonname")


t2 <- test %>% filter(Survey == "P120") %>% dplyr::select(-c(CPUE, mean_CPUE, CPUE_stdzd, mean_CPUE_stdzd)) %>% filter(gridID == "1176", Year == 2001) %>% ungroup() %>% pivot_wider(values_from = "avg_count", names_from = "Speciescommonname")

t2 <- test %>%
  filter(Survey == "P120") %>%
  dplyr::select(-c(CPUE, mean_CPUE, CPUE_stdzd)) %>%
  filter(gridID == "1176", Year == 2001) %>%
  group_by(gridID, Year, Speciescommonname) %>%
  summarize(avg_count = mean(avg_count, na.rm = TRUE)) %>%
  ungroup() %>%
  pivot_wider(values_from = "avg_count", names_from = "Speciescommonname")

test$avg_count <- as.numeric(test$avg_count)
t2 <- test %>%
  filter(Survey == "P120", gridID == "1176", Year == 2001) %>%
  dplyr::select(-c(CPUE, mean_CPUE, CPUE_stdzd, X, mean_CPUE_stdzd)) %>% ungroup() %>% pivot_wider(values_from = "avg_count", names_from = "Speciescommonname")

t2 <- test %>% filter(Survey == "P120") %>% dplyr::select(-c(CPUE, mean_CPUE, CPUE_stdzd, X, mean_CPUE_stdzd)) %>% filter(gridID== "1176", Year==2001) %>% ungroup() %>% pivot_wider(values_from = "avg_count", names_from = "Speciescommonname")


t2 <- test %>%
  filter(Survey == "P120", gridID == "1176", Year == 2001) %>%
  dplyr::select(-c(CPUE, mean_CPUE, CPUE_stdzd)) %>%
  spread(key = Speciescommonname, value = avg_count)

```
