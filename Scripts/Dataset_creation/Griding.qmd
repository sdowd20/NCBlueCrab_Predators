---
title: "Griding"
format: html
editor: visual
---

#### Load packages, CPUE datasets, and filter them

```{r}
#Load packages and functions 
packages <- c("ggplot2", "tidyverse", "lubridate", "sf", "sp", "dplyr", "rnaturalearth", "readr", "readxl", "spatialEco", "rstatix", "viridis", "BBmisc", "corrplot", "readr")
invisible(lapply(packages, library, character.only= TRUE))

standard_theme <- theme_bw() + theme(panel.border = element_rect(fill=NA, colour = "black")) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(legend.text.align= 0, legend.title= element_text(size = 12), legend.text = element_text(size= 10), axis.text=element_text(size=10), axis.title=element_text(size=12))

world <- ne_countries(scale = "medium", returnclass = "sf")

#Load CPUE datasets
p915_CPUE <- read_csv("/users/sallydowd/Desktop/Ch1Data/P915/p915_CPUE_new.csv")
setwd("~/Documents/GitHub/NCBlueCrab_Predators")
p120_CPUE <- read_csv("Data/P120/Finalized/p120_CPUE.csv")
p195_CPUE <- read_csv("Data/P195/Finalized/p195_CPUE.csv")

#Filter datasets: leave it as year-around!
p915_CPUEedt <- p915_CPUE %>% dplyr::select(-...1, -Obs, -Weather, -Weather, -Sedsize, -Btmcomp, -doy, -Wbdytype, -Wbd, -Sample, -Ph, -Quad, -Secchi) %>% rename("Location" = "Area", "Strata/station"= "Strata") %>% filter(between(Year, 2001, 2021)) 
p120_CPUEedt <- p120_CPUE %>% filter(Core== 1|Core==2) %>% dplyr::select(-...1, -Program, -Nbrrec3, -Time, -Duration, -doy, -Core, -Sedsize, -Btmcomp, -Secchi) %>% rename("Strata/station"= "Station") %>% filter(between(Year, 2001, 2021)) %>% dplyr::select(-Photoperiod)
p195_CPUEedt <- p195_CPUE %>% dplyr::select(-...1, -Timestart, -Duration, -Depthend, -Wbdytype, -Wbd, -Speciesscientificname, -Depthzone, -Secchi_depthcm) %>% rename("Ssal" = "Salinitysurface", "Bsal"= "Salinitybottom", "Stemp"= "Tempsurface", "Btemp"= "Tempbottom", "Latitude"= "Latitudestart", "Longitude"= "Longitudestart", "Colnum"= "Numbertotal", "Control1"= "Eventname", "Strata/station"= "Stationcode", "Depth"= "Depthstart") %>% filter(between(Year, 2001, 2021)) %>% dplyr::select(-Photoperiod)

##All same column names! 
colnames(p915_CPUEedt)
colnames(p120_CPUEedt)
colnames(p195_CPUEedt)

p915_CPUEedt <- p915_CPUEedt %>% drop_na(Latitude, Longitude)
p915_CPUEedt$Survey <- "P915"
p120_CPUEedt <- p120_CPUEedt  %>% drop_na(Latitude, Longitude)
p120_CPUEedt$Survey <- "P120"
p195_CPUEedt <- p195_CPUEedt  %>% drop_na(Latitude, Longitude)
p195_CPUEedt$Survey <- "P195"

CPUE_all <- rbind(p915_CPUEedt, p120_CPUEedt, p195_CPUEedt)
CPUE_all$lat_lon <- paste(CPUE_all$Latitude, CPUE_all$Longitude, sep= "_")
```

```{r}
p915_latlon <- p915_CPUEedt %>% dplyr::select(Latitude, Longitude) %>% mutate(lat_lon = paste(Latitude, Longitude, sep= "_"))
p120_latlon <- p120_CPUEedt %>% dplyr::select(Latitude, Longitude) %>% mutate(lat_lon = paste(Latitude, Longitude, sep= "_"))
p195_latlon <- p195_CPUEedt %>% dplyr::select(Latitude, Longitude) %>% mutate(lat_lon = paste(Latitude, Longitude, sep= "_"))
lat_lon_combo <- rbind(p915_latlon, p120_latlon, p195_latlon)
lat_lon_combo <- lat_lon_combo %>% distinct(lat_lon, .keep_all= TRUE)
```

####Form grids

##### Grid: From 0.12° x 0.12° grid cell 

```{r}
globe_bb <- matrix(c(-78.900147,33.802938,
                      -78.900147,36.672128,
                      -75.263672,36.672128,
                     -75.263672, 33.802938,
                     -78.900147,33.802938), byrow = TRUE, ncol = 2) %>% list() %>% st_polygon() %>% st_sfc(., crs = 4326)
globe_grid_30 <- st_make_grid(x= globe_bb, n = c(30,30), crs = 4326, what = 'polygons') %>% st_sf('geometry' = ., data.frame('ID' = 1:length(.))) #grid is 0.13° by 0.13° (14.4 km)

ggplot(data = world) + geom_sf() + geom_sf(data = globe_grid_30, fill = NA) + coord_sf(xlim=c(-85, -70), ylim=c(25,40), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + geom_point(data = lat_lon_combo, aes(x = Longitude, y = Latitude), size = .2) + coord_sf(xlim=c(-78, -75), ylim=c(33.5,37), expand = TRUE)

fish_spat <- as.data.frame(lat_lon_combo)
fish_spat$rowID <- 1:nrow(fish_spat)
coordinates(fish_spat) <- ~ Longitude + Latitude
fish_spat <- st_as_sf(fish_spat)
fish_spat <- st_set_crs(fish_spat, 4326)
grid <- globe_grid_30
fish_extract <- st_intersection(fish_spat, grid)
fish_extract_2 <- as.data.frame(fish_extract)

#Group to get rid of duplicates (there are times when a point is overlapping two grid cells)
fish_extract_2_2 <- fish_extract_2[!duplicated(fish_extract_2[c("rowID")]),] #this should be the same size as fish spat, it is 5 observations less, thinking this is bc a few datapoints might be outside of grid cells, didn't change in size from fish_extract_2

fish_extract_2_2$gridID <- fish_extract_2_2$ID
fish_extract_2_2edt <- fish_extract_2_2[,-c(2,3, 4)]

write.csv(fish_extract_2_2edt, "~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_11.20.23.csv") #updated on 11/20/23

lat_lon_pts_g <- fish_extract_2_2edt %>% separate(lat_lon, c("lat", "lon"), sep= "_")
ggplot(data = world) + geom_sf() + geom_sf(data =globe_grid_30, fill = NA) + theme(panel.background = element_rect(fill = "white", colour = "black")) + standard_theme + geom_point(data = lat_lon_pts_g, aes(x = as.numeric(lon), y = as.numeric(lat), color= gridID)) + coord_sf(xlim=c(-78, -75), ylim=c(33.5,37), expand = TRUE) #works
```

##### Grid: Form 0.06° x 0.06° grid cell 

```{r}
# make an object the size and shape of the output you want
globe_bb <- matrix(c(-78.900147,33.802938,
                      -78.900147,36.672128,
                      -75.263672,36.672128,
                     -75.263672, 33.802938,
                     -78.900147,33.802938), byrow = TRUE, ncol = 2) %>% list() %>% st_polygon() %>% st_sfc(., crs = 4326)
globe_grid_60 <- st_make_grid(x= globe_bb, n = c(60,60), crs = 4326, what = 'polygons') %>% st_sf('geometry' = ., data.frame('ID' = 1:length(.))) #grid is 0.06° by 0.06° (5.5 km b/c half of 0.13 which was 10)

fish_spat <- as.data.frame(lat_lon_combo)
fish_spat$rowID <- 1:nrow(fish_spat)
coordinates(fish_spat) <- ~ Longitude + Latitude
fish_spat <- st_as_sf(fish_spat)
fish_spat <- st_set_crs(fish_spat, 4326)
grid <- globe_grid_30

fish_s <- fish_spat[1:4748,]
fish_s2 <- fish_spat[4749:9496,]
fish_s3 <- fish_spat[9497:14246,]

fish_extract_s <- st_intersection(fish_s, grid)
fish_extract_s <- as.data.frame(fish_extract_s)
fish_extract_s2 <- st_intersection(fish_s2, grid)
fish_extract_s2 <- as.data.frame(fish_extract_s2)
fish_extract_s3 <- st_intersection(fish_s3, grid)
fish_extract_s3 <- as.data.frame(fish_extract_s3)
library(beepr)
beep(sound=8)

length(unique(fish_extract_s$lat_lon)) + length(unique(fish_extract_s2$lat_lon)) + length(unique(fish_extract_s3$lat_lon))

fish_extract_combo <- rbind(fish_extract_s, fish_extract_s2, fish_extract_s3)
#Group to get rid of duplicates (there are times when a point is overlapping two grid cells)
fish_extract_combo <- fish_extract_combo[!duplicated(fish_extract_combo[c("rowID")]),] #this should be the same size as fish spat, it is 5 observations less, thinking this is bc a few datapoints might be outside of grid cells, didn't change in size from fish_extract_2

fish_extract_combo$gridID <- fish_extract_combo$ID
fish_extract_comboedt <- fish_extract_combo[,-c(2,3, 4)]

#write.csv(fish_extract_comboedt, "~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_10.02.23.5km.csv")

#ggplot(data = world) + geom_sf() + geom_sf(data = fish_extract_comboedt, fill = NA) + geom_sf(data= fish_spat) + theme(panel.background = element_rect(fill = "white", colour = "black")) + coord_sf(xlim=c(-78, -75), ylim=c(33.5,37), expand = TRUE)
```

##### Grid: Form 0.24° x 0.24° grid cell 
```{r}
# make an object the size and shape of the output you want
globe_bb <- matrix(c(-78.900147,33.802938,
                      -78.900147,36.672128,
                      -75.263672,36.672128,
                     -75.263672, 33.802938,
                     -78.900147,33.802938), byrow = TRUE, ncol = 2) %>% list() %>% st_polygon() %>% st_sfc(., crs = 4326)
globe_grid_15 <- st_make_grid(x= globe_bb, n = c(15,15), crs = 4326, what = 'polygons') %>% st_sf('geometry' = ., data.frame('ID' = 1:length(.))) 

fish_spat <- as.data.frame(lat_lon_combo)
fish_spat$rowID <- 1:nrow(fish_spat)
coordinates(fish_spat) <- ~ Longitude + Latitude
fish_spat <- st_as_sf(fish_spat)
fish_spat <- st_set_crs(fish_spat, 4326)
grid <- globe_grid_15

fish_extract_s <- st_intersection(fish_spat, grid)
fish_extract_2 <- as.data.frame(fish_extract_s)
fish_extract_2_2 <- fish_extract_2[!duplicated(fish_extract_2[c("rowID")]),] #should be same size as fish spat
fish_extract_2_2$gridID <- fish_extract_2_2$ID
fish_extract_2_2edt <- fish_extract_2_2[,-c(2,3, 4)]

write.csv(fish_extract_2_2edt, "~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_24km.01.30.24.csv") 

```

#### Structure grid dataset

```{r}
#10 km 
gridded_coords <- read_csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_11.20.23.csv")
gridded_coords <- gridded_coords %>% separate(lat_lon, into = c("Latitude", "Longitude"), sep = "_", convert = TRUE) %>% dplyr::select(-...1)

#Does this line up? yes!
selected_grids <- unique(gridded_coords$gridID)
globe_grid_30_test <- globe_grid_30 %>% rename("gridID"= "ID") %>% filter(gridID %in% selected_grids)

#Join grid geometry to gridded dataset
globe_grid_30_edt <- globe_grid_30 %>% rename("gridID"= "ID")
gridded_coords_geom <- gridded_coords %>% left_join(globe_grid_30_edt, by= "gridID")
gridded_coords_geom_edt <- gridded_coords_geom %>% distinct(gridID, .keep_all= TRUE) %>% dplyr::select(gridID, geometry)
write.csv(gridded_coords_geom_edt, "~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_coords_geom.11.20.23.csv")
```

```{r}
#5 km 
fish_extract_comboedt <- read.csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_10.02.23.5km.csv")
gridded_coords <- fish_extract_comboedt %>% separate(lat_lon, into = c("Latitude", "Longitude"), sep = "_", convert = TRUE) %>% dplyr::select(-X)
globe_grid_60_edt <- globe_grid_60 %>% rename("gridID"= "ID")
gridded_coords_geom <- gridded_coords %>% left_join(globe_grid_60_edt, by= "gridID")
gridded_coords_geom_edt <- gridded_coords_geom %>% distinct(gridID, .keep_all= TRUE) %>% dplyr::select(gridID, geometry)
write.csv(gridded_coords_geom_edt, "~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_coords_geom.5km.01.30.24.csv")
```

