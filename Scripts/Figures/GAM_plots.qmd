---
title: "GAM_plots"
format: html
editor: visual
---

```{r}
source("~/Documents/GitHub/NCBlueCrab_Predators/Scripts/Load.SDM.Final.R")

globe_bb <- matrix(c(-78.900147,33.802938,
                      -78.900147,36.672128,
                      -75.263672,36.672128,
                     -75.263672, 33.802938,
                     -78.900147,33.802938), byrow = TRUE, ncol = 2) %>% list() %>% st_polygon() %>% st_sfc(., crs = 4326)
globe_grid_30 <- st_make_grid(x= globe_bb, n = c(30,30), crs = 4326, what = 'polygons') %>% st_sf('geometry' = ., data.frame('ID' = 1:length(.))) %>% rename("gridID"= "ID")

library(gratia)
```

#### Predicted vs. observed

##### Best GAMs

```{r}
reddrum_env_bc <- gam(reddrumP915~s(avgdepth)+s(avgssal)+s(avgstemp)+s(avgsdo)+s(NoFishRest)+factor(Yearfactor) + s(logsmallbluecrabP120), family= tw(), data=df_CPUE_length_wide_both)

southernkingfish_env_forage <- gam(southernkingfishP915~s(avgdepth)+s(avgssal)+s(avgstemp)+s(avgsdo)+s(NoFishRest)+factor(Yearfactor) + s(logsouthernkingfishP915forageP915) + s(logsouthernkingfishP915forageP120), family= tw(), data=df_CPUE_length_wide_both)

blackdrum_env_forage <- gam(blackdrumP915~s(avgdepth)+s(avgssal)+s(avgstemp)+s(avgsdo)+s(NoFishRest)+factor(Yearfactor) + s(logblackdrumP915forageP120), family= tw(), data=df_CPUE_length_wide_both)
```

##### Predict

```{r}
df_rd <- as.data.frame(predict(reddrum_env_bc), df_CPUE_length_wide_both, type= "response")
colnames(df_rd) <- "prediction"
df_rd <- df_rd %>% mutate(pred_reddrum= exp(prediction)) %>% dplyr::select(pred_reddrum)

df_sk <- as.data.frame(predict(southernkingfish_env_forage), df_CPUE_length_wide_both, type= "response")
colnames(df_sk) <- "prediction"
df_sk <- df_sk %>% mutate(pred_southernkingfish = exp(prediction)) %>% dplyr::select(pred_southernkingfish)

df_bd <- as.data.frame(predict(blackdrum_env_forage), df_CPUE_length_wide_both, type= "response")
colnames(df_bd) <- "prediction"
df_bd <- df_bd %>% mutate(pred_blackdrum= exp(prediction)) %>% dplyr::select(pred_blackdrum)

df_pred <- cbind(df_CPUE_length_wide_both, df_rd, df_sk, df_bd)
df_pred <- df_pred %>% mutate(diff_reddrum= ((reddrumP915 - pred_reddrum)/reddrumP915)*100, diff_southernkingfish= ((southernkingfishP915 - pred_southernkingfish)/southernkingfishP915)*100, diff_blackdrum= ((blackdrumP915 - pred_blackdrum)/blackdrumP915)*100) %>% left_join(globe_grid_30, by= "gridID")

df_pred2 <- cbind(df_CPUE_length_wide_both, df_rd, df_sk, df_bd)
df_pred2 <- df_pred2 %>% mutate(diff_reddrum= reddrumP915 - pred_reddrum, diff_southernkingfish= southernkingfishP915 - pred_southernkingfish, diff_blackdrum= blackdrumP915 - pred_blackdrum) %>% left_join(globe_grid_30, by= "gridID")
```

```{r}
#Predict
ggplot(data = world) + geom_sf() + geom_sf(data = df_pred, aes(geometry= geometry, fill = diff_reddrum), show.legend= TRUE) +  theme(panel.background = element_rect(fill = "white", colour = "black")) + coord_sf(xlim=c(-85, -70), ylim=c(25,40), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + coord_sf(xlim=c(-78.900147, -75.263672), ylim=c(33.802938,36.672128), expand = TRUE) + standard_theme + facet_wrap(~Yearfactor, ncol=3, nrow=7)
ggsave("/users/sallydowd/desktop/test.jpeg", dpi= 300, width= 30, height= 20)

ggplot(data = world) + geom_sf() + geom_sf(data = df_pred, aes(geometry= geometry, fill = diff_southernkingfish), show.legend= TRUE) +  theme(panel.background = element_rect(fill = "white", colour = "black")) + coord_sf(xlim=c(-85, -70), ylim=c(25,40), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + coord_sf(xlim=c(-78.900147, -75.263672), ylim=c(33.802938,36.672128), expand = TRUE) + standard_theme

ggplot(data = world) + geom_sf() + geom_sf(data = df_pred, aes(geometry= geometry, fill = diff_blackdrum), show.legend= TRUE) +  theme(panel.background = element_rect(fill = "white", colour = "black")) + coord_sf(xlim=c(-85, -70), ylim=c(25,40), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + coord_sf(xlim=c(-78.900147, -75.263672), ylim=c(33.802938,36.672128), expand = TRUE) + standard_theme
```

#### Partial effects

https://cran.r-project.org/web/packages/gratia/vignettes/custom-plotting.html

Evaluate smooths at values of their covariates through smooth_estimates() and add partial residuals to the partial effects plots.

We also want to add a rug plot with the observed values of the predictor variable, the credible interval around the esitmated smooth, the partial residuals as a point layer, and the estimated smooth as a line layer.

```{r}
df <- df_CPUE_length_wide_both

sm <- smooth_estimates(reddrum_env_bc) %>% transform_fun(exp) %>%
add_confint() 

pr <- df %>% add_partial_residuals(reddrum_env_bc) %>%  
transform_fun(fun = exp, column = "s(avgssal)") %>%  
transform_fun(fun = exp, column = "s(avgstemp)") %>%  
transform_fun(fun = exp, column = "s(avgdepth)") %>%  
transform_fun(fun = exp, column = "s(avgsdo)") %>%  
transform_fun(fun = exp, column = "s(NoFishRest)") %>%  
transform_fun(fun = exp, column = "s(logsmallbluecrabP120)")

#this changed when updated dataset
```

```{r}
plot <- function(smooth2, predictor, predictor2, predictor3, predator, xlabel){
sm %>%
  filter(smooth == smooth2) %>%
  ggplot() + geom_rug(aes(x= {{predictor}}), data= pr) + geom_ribbon(aes(ymin = lower_ci, ymax = upper_ci, x = {{predictor}}), alpha = 0.2) + geom_point(aes(x = {{predictor}}, y = {{predictor2}}), data = pr, cex = 1.5, colour = "steelblue3")+ geom_line(aes(x = {{predictor}}, y = est), lwd = 1.2) + labs(y = "Partial effect", title = predictor3) + standard_theme + xlab(xlabel) + labs(title=NULL) + rremove("ylab")
}

p1 <- plot("s(avgssal)", avgssal, `s(avgssal)`, "s(avgssal)", reddrumP915, "Average surface salinity")
p2 <- plot("s(avgstemp)", avgstemp, `s(avgstemp)`, "s(avgstemp)", reddrumP915, "Average surface temperature")
p3 <- plot("s(avgdepth)", avgdepth, `s(avgdepth)`, "s(avgdepth)", reddrumP915, "Average depth")
p4 <- plot("s(avgsdo)", avgsdo, `s(avgsdo)`, "s(avgsdo)", reddrumP915, "Average surface dissolved oxygen")
p5 <- plot("s(NoFishRest)", NoFishRest, `s(NoFishRest)`, "s(NoFishRest)", reddrumP915, "NoFishRest")
p6 <- plot("s(logsmallbluecrabP120)", logsmallbluecrabP120, `s(logsmallbluecrabP120)`, "s(logsmallbluecrabP120)", reddrumP915, "Small blue crab CPUE") 
library(ggpubr)
t1 <- ggarrange(p1, p2, p3, p4, p5, p6) 
annotate_figure(t1, left= textGrob("Partial effect", rot=90))  
```

