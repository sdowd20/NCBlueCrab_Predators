---
title: "SDM_dataprep_new"
format: html
editor: visual
---

#### Month of June

#### Load packages, CPUE datasets, and filter them

```{r}
#Load packages and functions 
packages <- c("ggplot2", "tidyverse", "lubridate", "sf", "sp", "dplyr", "rnaturalearth", "readr", "readxl", "spatialEco", "rstatix", "viridis", "BBmisc", "corrplot")
invisible(lapply(packages, library, character.only= TRUE))

standard_theme <- theme_bw() + theme(panel.border = element_rect(fill=NA, colour = "black")) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(legend.text.align= 0, legend.title= element_text(size = 12), legend.text = element_text(size= 10), axis.text=element_text(size=10), axis.title=element_text(size=12))

#select <- dplyr::select()

#Load CPUE datasets
p915_CPUE <- read_csv("/users/sallydowd/Desktop/Ch1Data/P915/p915_CPUE_new.csv")
setwd("~/Documents/GitHub/NCBlueCrab_Predators")
p120_CPUE <- read_csv("Data/P120/Finalized/p120_CPUE.csv")
p195_CPUE <- read_csv("Data/P195/Finalized/p195_CPUE.csv")

#Filter datasets: Add back in Secchi size once get P195 data
p915_CPUEedt <- p915_CPUE %>% dplyr::select(-...1, -Obs, -Weather, -Weather, -Sedsize, -Btmcomp, -doy, -Wbdytype, -Wbd, -Sample, -Ph, -Quad, -Secchi) %>% rename("Location" = "Area", "Strata/station"= "Strata") %>% filter(between(Year, 2001, 2021), Month== 6) #added in species of focus for now (still waiting on data)
p120_CPUEedt <- p120_CPUE %>% filter(Core== 1|Core==2) %>% select(-...1, -Program, -Nbrrec3, -Time, -Duration, -doy, -Core, -Sedsize, -Btmcomp, -Secchi) %>% rename("Strata/station"= "Station") %>% filter(between(Year, 2001, 2021), Month==6)
p195_CPUEedt <- p195_CPUE %>% dplyr::select(-...1, -Timestart, -Duration, -Depthend, -Wbdytype, -Wbd, -Speciesscientificname, -Depthzone, -Secchi_depthcm) %>% rename("Ssal" = "Salinitysurface", "Bsal"= "Salinitybottom", "Stemp"= "Tempsurface", "Btemp"= "Tempbottom", "Latitude"= "Latitudestart", "Longitude"= "Longitudestart", "Colnum"= "Numbertotal", "Control1"= "Eventname", "Strata/station"= "Stationcode", "Depth"= "Depthstart") %>% filter(between(Year, 2001, 2021), Month==6)

##All same column names! 
colnames(p915_CPUEedt)
colnames(p120_CPUEedt)
colnames(p195_CPUEedt) #not using depthzone right now, might be hard w/ averaging 

##Get rid of NAs outside of environmental variables!
summary(is.na(p915_CPUEedt)) #A good amount of NAs for Sedsize_new (3248) and Btmcomp_new (2714)
summary(is.na(p120_CPUEedt)) #Almost no NAs in general, Sedsize_new: 130
summary(is.na(p195_CPUEedt)) #A good amount of NAs for Sedsize_new (1170) and Btmcomp_new (1080)

p915_CPUEedt <- p915_CPUEedt %>% drop_na(Latitude, Longitude)
p915_CPUEedt$Survey <- "P915"
p120_CPUEedt <- p120_CPUEedt  %>% drop_na(Latitude, Longitude)
p120_CPUEedt$Survey <- "P120"
p195_CPUEedt <- p195_CPUEedt  %>% drop_na(Latitude, Longitude)
p195_CPUEedt$Survey <- "P195"

CPUE_all <- rbind(p915_CPUEedt, p120_CPUEedt, p195_CPUEedt)
CPUE_all$lat_lon <- paste(CPUE_all$Latitude, CPUE_all$Longitude, sep= "_")
```

##### Grid: Form 5 x 5 km grid

```{r}
# p915_latlon <- p915_CPUEedt %>% select(Latitude, Longitude) %>% mutate(lat_lon = paste(Latitude, Longitude, sep= "_"))
# p120_latlon <- p120_CPUEedt %>% select(Latitude, Longitude) %>% mutate(lat_lon = paste(Latitude, Longitude, sep= "_"))
# p195_latlon <- p195_CPUEedt %>% select(Latitude, Longitude) %>% mutate(lat_lon = paste(Latitude, Longitude, sep= "_"))
# lat_lon_combo <- rbind(p915_latlon, p120_latlon, p195_latlon)
# lat_lon_combo <- lat_lon_combo %>% distinct(lat_lon, .keep_all= TRUE) 
# world <- ne_countries(scale = "medium", returnclass = "sf")
# # make an object the size and shape of the output you want
# globe_bb <- matrix(c(-78.900147,33.802938,
#                       -78.900147,36.672128,
#                       -75.263672,36.672128,
#                      -75.263672, 33.802938,
#                      -78.900147,33.802938), byrow = TRUE, ncol = 2) %>% list() %>% st_polygon() %>% st_sfc(., crs = 4326)
# globe_grid_30 <- st_make_grid(x= globe_bb, n = c(60,60), crs = 4326, what = 'polygons') %>% st_sf('geometry' = ., data.frame('ID' = 1:length(.))) #grid is 0.06° by 0.06° (5.5 km b/c half of 0.13 which was 10)
# 
# fish_spat <- as.data.frame(lat_lon_combo)
# fish_spat$rowID <- 1:nrow(fish_spat)
# coordinates(fish_spat) <- ~ Longitude + Latitude
# fish_spat <- st_as_sf(fish_spat)
# fish_spat <- st_set_crs(fish_spat, 4326)
# grid <- globe_grid_30
# fish_extract <- st_intersection(fish_spat, grid)
# fish_extract_2 <- as.data.frame(fish_extract)
# 
# #Group to get rid of duplicates (there are times when a point is overlapping two grid cells)
# fish_extract_2_2 <- fish_extract_2[!duplicated(fish_extract_2[c("rowID")]),] #this should be the same size as fish spat, it is 5 observations less, thinking this is bc a few datapoints might be outside of grid cells, didn't change in size from fish_extract_2
# 
# fish_extract_2_2$gridID <- fish_extract_2_2$ID
# fish_extract_2_2edt <- fish_extract_2_2[,-c(2,3, 4)]
# write.csv(fish_extract_2_2edt, "~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_09.11.23.5km.csv")
# 
# ggplot(data = world) + geom_sf() + geom_sf(data = fish_extract_2_2, fill = NA, aes(geometry= geometry)) + geom_sf(data= fish_spat) + theme(panel.background = element_rect(fill = "white", colour = "black")) + coord_sf(xlim=c(-78, -75), ylim=c(33.5,37), expand = TRUE) 
```

```{r}
CPUE_all_grid_pred <- read_csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_09.11.23.5km.csv")
gridded_09.11.23.5km <- read_csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_09.11.23.5km.csv")
CPUE_all_grid_pred <- CPUE_all %>% left_join(gridded_09.11.23.5km, by= "lat_lon") %>% select(lat_lon, everything())

CPUE_all_grid_pred <- CPUE_all_grid_pred %>% drop_na(gridID)
CPUE_all_grid_pred <- CPUE_all_grid_pred %>% separate(lat_lon, into= c("Latitude", "Longitude"), sep = "_", convert= TRUE, remove=FALSE) %>% filter(!gridID %in% c(398, 543, 668, 678, 679, 707, 895, 173, 199, 388)) #get rid of grid cells that are outliers, gets rid of 323 rows

#Calculate CPUE
CPUE_grid <- CPUE_all_grid_pred %>% mutate("Effort"= ifelse(Survey %in% "P120", 1, ifelse(Survey %in% "P195", 20, ifelse(Survey %in% "P915" & Location == "CAPEF" & Month %in% c(04, 05, 06, 07, 08, 09), 240, ifelse(Survey %in% "P915" & Location == "NEWR" & Month %in% c(04, 05, 06, 07, 08, 09), 240, 720))))) #P120: 1 minute tows, P195: 20 minute tows, P915: 240 minute soak time for rivers from April to September and 720 soak time everything else

CPUE_grid$CPUE <- CPUE_grid$Colnum/CPUE_grid$Effort

CPUE_grid <- CPUE_grid %>% group_by(Survey) %>% mutate(CPUE_stdzd= normalize(CPUE, method= "range", range= c(0,1))) ##min-max scaling:
CPUE_grid <- CPUE_grid %>% group_by(gridID, Survey, Year, Speciescommonname) %>% mutate(mean_CPUE= mean(CPUE), mean_CPUE_stdzd= mean(CPUE_stdzd))

CPUE_grid$CPUE <- CPUE_grid$Colnum/CPUE_grid$Effort
CPUE_grid <- CPUE_grid %>% group_by(Survey) %>% mutate(CPUE_stdzd= normalize(CPUE, method= "range", range= c(0,1))) ##min-max scaling:
CPUE_grid <- CPUE_grid %>% group_by(gridID, Survey, Year, Speciescommonname) %>% mutate(mean_CPUE= mean(CPUE), mean_CPUE_stdzd= mean(CPUE_stdzd))

CPUE_grid_avg <- CPUE_grid %>% ungroup() %>% mutate(Stemp= ifelse(CPUE_grid$Stemp==0.0, NA, CPUE_grid$Stemp), Ssal= ifelse(CPUE_grid$Ssal==0.0, NA, CPUE_grid$Ssal), Sdo= ifelse(CPUE_grid$Sdo==0.0, NA, CPUE_grid$Sdo)) %>% group_by(Year, gridID) %>% mutate(avg_depth= mean(Depth, na.rm= TRUE), avg_ssal= mean(Ssal, na.rm= TRUE), avg_bsal= mean(Bsal, na.rm= TRUE), avg_stemp= mean(Stemp, na.rm= TRUE), avg_btemp= mean(Btemp, na.rm= TRUE), avg_sdo= mean(Sdo, na.rm= TRUE), avg_bdo= mean(Bdo, na.rm= TRUE), avg_latitude= mean(Latitude, na.rm= TRUE), avg_longitude= mean(Longitude), avg_photoperiod= mean(Photoperiod), na.rm= TRUE) %>% dplyr::select(-avg_bsal, -avg_btemp, -avg_bdo, -Stemp, -Btemp, -Sdo, -Bdo, -Ssal, -Bsal, -Season, -Sedsize_new, -Btmcomp_new, -Photoperiod, -Depth, -avg_photoperiod, -na.rm, -avg_latitude, -avg_longitude)
CPUE_grid_avg <- CPUE_grid_avg %>% mutate_all(~ifelse(is.nan(.), NA, .)) %>% drop_na() #drops 835 rows, 757 NA for avg_do, 114 NA for avg_stemp, 179 NA for avg_ssal

CPUE_grid_avg_edt <- CPUE_grid_avg %>% group_by(Year, gridID, Speciescommonname, Survey) %>% distinct(mean_CPUE_stdzd, .keep_all= TRUE)

#Form count
CPUE_grid_count <- CPUE_grid %>% group_by(gridID, Survey, Year, Speciescommonname) %>% mutate(avg_count= round(mean(Colnum),0)) #doesn't round any down to 0

CPUE_grid_count_avg <- CPUE_grid_count %>% ungroup() %>% mutate(Stemp= ifelse(CPUE_grid_count$Stemp==0.0, NA, CPUE_grid_count$Stemp), Ssal= ifelse(CPUE_grid_count$Ssal==0.0, NA, CPUE_grid_count$Ssal), Sdo= ifelse(CPUE_grid_count$Sdo==0.0, NA, CPUE_grid_count$Sdo)) %>% group_by(Year, gridID) %>% mutate(avg_depth= mean(Depth, na.rm= TRUE), avg_ssal= mean(Ssal, na.rm= TRUE), avg_bsal= mean(Bsal, na.rm= TRUE), avg_stemp= mean(Stemp, na.rm= TRUE), avg_btemp= mean(Btemp, na.rm= TRUE), avg_sdo= mean(Sdo, na.rm= TRUE), avg_bdo= mean(Bdo, na.rm= TRUE), avg_latitude= mean(Latitude, na.rm= TRUE), avg_longitude= mean(Longitude), avg_photoperiod= mean(Photoperiod), na.rm= TRUE) %>% dplyr::select(-avg_bsal, -avg_btemp, -avg_bdo, -Stemp, -Btemp, -Sdo, -Bdo, -Ssal, -Bsal, -Season, -Sedsize_new, -Btmcomp_new, -Photoperiod, -Depth, -avg_photoperiod, -na.rm, -avg_latitude, -avg_longitude)

CPUE_grid_count_avg <- CPUE_grid_count_avg %>% mutate_all(~ifelse(is.nan(.), NA, .)) %>% drop_na() #drops 835 rows, 757 NA for avg_do, 114 NA for avg_stemp, 179 NA for avg_ssal        

CPUE_grid_count_avg_edt <- CPUE_grid_count_avg %>% dplyr::select(-Latitude, -Longitude, -lat_lon, -Day, -Location, -Colnum, -Date, -Ym_date, -Sciname, -"Strata/station", -Effort, -Effort, -Month, -Control1)
CPUE_grid_count_avg_edt <- CPUE_grid_count_avg_edt %>% group_by(Year, gridID, Speciescommonname, Survey) %>% distinct(avg_count, .keep_all= TRUE)
```

##### Overlap

```{r}
total_edt <- CPUE_all_grid_pred  %>% filter(Year > 2001, Month == 5| Month== 6| Month== 9, Longitude > -77.0) %>% drop_na(Latitude, Longitude) #NA coordinates already dropped

P915_total <- total_edt %>% filter(Survey %in% "P915")
P120_total <- total_edt %>% filter(Survey %in% "P120")
P195_total <- total_edt %>% filter(Survey %in% "P195")

p915_overlap_gridID <- total_edt %>% select(gridID, Survey) %>% filter(Survey %in% "P915") %>% distinct(gridID, .keep_all= TRUE) %>% select(gridID)
p120_overlap_gridID <- total_edt %>% select(gridID, Survey) %>% filter(Survey %in% "P120") %>% distinct(gridID, .keep_all= TRUE) %>% select(gridID)
p195_overlap_gridID <- total_edt %>% select(gridID, Survey) %>% filter(Survey %in% "P195") %>% distinct(gridID, .keep_all= TRUE) %>% select(gridID)
library(plyr)

match_df(p915_overlap_gridID, p120_overlap_gridID, on = NULL) #31
match_df(p915_overlap_gridID, p195_overlap_gridID, on = NULL) #57
match_df(p195_overlap_gridID, p120_overlap_gridID, on = NULL) #17
```

##### P915 & P120: Year \> 2008, Month= 5,6,9, group_by Season

```{r}
#For each Speciescommonname and blue crabs, loop through to see the overlapping gridIDs with the other datasets for each season and year 

##Positive, positive
spp_names <- unique(P915_total$Speciescommonname)
P915_total_spp <- list()
P915_total_gridID <- list()
P120_total_gridID <- list()
match_df <- list()
library(plyr)
library(dplyr)
for(i in spp_names) {
P915_total_spp[[i]] <- P915_total %>% filter(Speciescommonname %in% i, Colnum > 0) %>% drop_na(Colnum)
P915_total_gridID[[i]] <- P915_total_spp[[i]] %>% dplyr::select(gridID, Month, Speciescommonname, Year) %>% group_by(Month, Year, Speciescommonname) %>% distinct(gridID, .keep_all= TRUE)
P120_bc <- P120_total %>% filter(Speciescommonname %in% "blue crab", Colnum > 0) %>% drop_na(Colnum)
P120_bc_gridID <- P120_bc %>% dplyr::select(gridID, Month, Speciescommonname, Year) %>% group_by(Month, Year, Speciescommonname) %>% distinct(gridID, .keep_all= TRUE)
match_df[[i]] <- match_df(P915_total_gridID[[i]], P120_bc_gridID, on = c("gridID", "Month", "Year")) 
}

detach(package:plyr)
library(dplyr)
match_data2 <- as.data.frame(do.call(rbind, match_df)) 
match_data2 <- match_data2 %>% group_by(Speciescommonname, Month, Year) %>% dplyr::mutate(count= n()) #%>% select(-gridID) #count: number of observations overlapping for a predator species and blue crab for a season and year (includes all grid cells)
P915_total_sum <- P915_total %>% filter(Colnum > 0) %>% dplyr::group_by(Speciescommonname, Year, Month, gridID) %>% summarise(sum_Colnum_pred = sum(Colnum)) #add up number of predators based on year, season and gridID
P120_bc_sum <- P120_total %>% filter(Colnum > 0, Speciescommonname %in% "blue crab") %>% dplyr::group_by(Year, Month, gridID) %>% summarise(sum_Colnum_bc = sum(Colnum))

match_data2edt <- match_data2 %>% left_join(P915_total_sum) %>% left_join(P120_bc_sum, by= c("Year", "Month", "gridID")) %>% rename(Species= Speciescommonname)

#pos, zero
##p915 first 
bc_pos <- P120_total %>% filter(Colnum > 0, Speciescommonname %in% "blue crab") %>% group_by(gridID, Month, Year) %>% mutate(bc_colnum= sum(Colnum)) %>% distinct(bc_colnum, .keep_all= F)
p915_zero <- P915_total %>% filter(Colnum == 0) %>% drop_na(Colnum) %>% dplyr::select(Year, Speciescommonname, Month, Colnum, gridID) %>% group_by(Month, Year, gridID, Speciescommonname) %>% distinct(Colnum) #only one row per species, gridID, season, and year b/c colnum= 0 
p915_zeroedt <- p915_zero %>% left_join(bc_pos, by = c("Year", "Month", "gridID")) #it's only gridIDs that overlap bc is the ones present in P915, NA for bc_colnum means it wasn't caught there so remove
pos_zero <- p915_zeroedt %>% drop_na(bc_colnum) %>% rename(Species= Speciescommonname)

##p120 first
pos_zero2 <- bc_pos %>% left_join(p915_zero, by = c("Year", "Month", "gridID")) %>% drop_na(Speciescommonname) %>% rename(Species= Speciescommonname)

#zero, pos
##p915 first
bc_zero <- P120_total %>% filter(Colnum == 0, Speciescommonname %in% "blue crab") %>% drop_na(Colnum) %>% dplyr::select(Year, Speciescommonname, Month, Colnum, gridID) %>% group_by(gridID, Month, Year) %>% distinct(Colnum, .keep_all= F)
p915_pos <- P915_total %>% filter(Colnum > 0) %>% group_by(gridID, Month, Year, Speciescommonname) %>% mutate(pred_colnum = sum(Colnum)) %>% distinct(pred_colnum, .keep_all= F) #just need to get one row for a grid cell, season, year and species
zero_pos <- p915_pos %>% left_join(bc_zero, by= c("Year", "Month", "gridID")) %>% drop_na(Colnum) %>% rename(Species= Speciescommonname) #exclude when blue crabs weren't sampled
##p120 first 
zero_pos2 <- bc_zero %>% left_join(p915_pos, by= c("Year", "Month", "gridID")) %>% drop_na(Speciescommonname) %>% rename(Species= Speciescommonname)  #exclude when blue crabs weren't sampled

#zero, zero
zero_zero <- p915_zero %>% select(-Colnum) %>% left_join(bc_zero, by= c("Year", "Month", "gridID")) %>% drop_na(Colnum) %>% group_by(Speciescommonname, Month, Year) %>% mutate(count= n()) #NAs are a grid cell where blue crab wasn't sampled, drop this, count gets at # of grid cells overlapping 


library(gt)
match_data2edt %>% group_by(Species) %>% summarize(sum_spp = sum(sum_Colnum_pred), sum_bc = sum(sum_Colnum_bc))%>% gt() %>% cols_width(everything() ~ px(100)) %>% cols_align(align= "center")
```

##### GAMs: Tweedie 5 x 5 km, June

```{r}
gam_formula <- red_drum ~ s(avg_depth, bs="ts", k=5) + s(avg_ssal, bs="ts", k=5) + s(avg_stemp, bs="ts", k=5) + s(avg_sdo, bs="ts", k=5) + s(atlantic_menhaden, bs="ts", k=5) + s(atlantic_croaker, bs="ts", k=5) + s(southern_flounder, bs="ts", k=5) + s(spot, bs="ts", k=5)

df_count <- CPUE_grid_count_avg_edt %>% dplyr::select(-c(CPUE, CPUE_stdzd, mean_CPUE, mean_CPUE_stdzd)) #need to remove or R will get confused 
df_count$Speciescommonname <- gsub(" ", "_", df_count$Speciescommonname)
df_count_wide <- df_count %>% filter(Survey %in% "P915") %>% ungroup() %>% pivot_wider(names_from = "Speciescommonname", values_from = "avg_count") %>% drop_na()
library(mgcv)
tweedie <- gam(gam_formula, family= tw(link= "log"), data= df_count_wide, method= "REML")
summary(tweedie)
gam.check(tweedie)

AIC(tweedie)
```

##### GAMs: Non-gridded, June

```{r}
df_count <- CPUE_all
df_count$Speciescommonname <- gsub(" ", "_", df_count$Speciescommonname)
df_count_wide <- df_count %>% filter(Survey %in% "P915") %>% ungroup() %>% select(-c(Photoperiod, Survey, Sciname, Btmcomp_new, Sedsize_new)) %>% group_by(Control1) %>% pivot_wider(names_from = "Speciescommonname", values_from = "Colnum") %>% drop_na()

gam_formula <- red_drum ~ s(Depth, bs="ts", k=5) + s(Ssal, bs="ts", k=5) + s(Stemp, bs="ts", k=5) + s(Sdo, bs="ts", k=5) + s(atlantic_menhaden, bs="ts", k=5) + s(atlantic_croaker, bs="ts", k=5) + s(southern_flounder, bs="ts", k=5) + s(spot, bs="ts", k=5)

tweedie <- gam(gam_formula, family= tw(link= "log"), data= df_count_wide, method= "REML")
summary(tweedie)
AIC(tweedie)
gam.check(tweedie)
```

#### Year around

##### GAMs: Non-gridded, year-around

```{r}
p915_CPUEedt_year <- p915_CPUE %>% dplyr::select(-...1, -Obs, -Weather, -Weather, -Sedsize, -Btmcomp, -doy, -Wbdytype, -Wbd, -Sample, -Ph, -Quad, -Secchi) %>% rename("Location" = "Area", "Strata/station"= "Strata") %>% filter(between(Year, 2001, 2021)) #added in species of focus for now (still waiting on data)
p120_CPUEedt_year <- p120_CPUE %>% filter(Core== 1|Core==2) %>% select(-...1, -Program, -Nbrrec3, -Time, -Duration, -doy, -Core, -Sedsize, -Btmcomp, -Secchi) %>% rename("Strata/station"= "Station") %>% filter(between(Year, 2001, 2021))
p195_CPUEedt_year <- p195_CPUE %>% dplyr::select(-...1, -Timestart, -Duration, -Depthend, -Wbdytype, -Wbd, -Speciesscientificname, -Depthzone, -Secchi_depthcm) %>% rename("Ssal" = "Salinitysurface", "Bsal"= "Salinitybottom", "Stemp"= "Tempsurface", "Btemp"= "Tempbottom", "Latitude"= "Latitudestart", "Longitude"= "Longitudestart", "Colnum"= "Numbertotal", "Control1"= "Eventname", "Strata/station"= "Stationcode", "Depth"= "Depthstart") %>% filter(between(Year, 2001, 2021))

p915_CPUEedt_year <- p915_CPUEedt_year %>% drop_na(Latitude, Longitude)
p915_CPUEedt_year$Survey <- "P915"
p120_CPUEedt_year <- p120_CPUEedt_year  %>% drop_na(Latitude, Longitude)
p120_CPUEedt_year$Survey <- "P120"
p195_CPUEedt_year <- p195_CPUEedt_year %>% drop_na(Latitude, Longitude)
p195_CPUEedt_year$Survey <- "P195"

CPUE_all_year <- rbind(p915_CPUEedt_year, p120_CPUEedt_year, p195_CPUEedt_year)
CPUE_all_year$lat_lon <- paste(CPUE_all_year$Latitude, CPUE_all_year$Longitude, sep= "_")
```

#### For June, all overlap at once

```{r}
spp_names <- unique(P915_total$Speciescommonname)
spp_names_trawl <- c("northern brown shrimp", "bluefish", "atlantic croaker", "southern flounder", "red drum", "black drum", "blue catfish", "gizzard shad", "american shad", "cownose ray", "blue crab", "atlantic menhaden", "spot", "summer flounder", "shads", "american eel")

P915_total_spp <- list()
P915_total_gridID <- list()
P120_total_spp <- list()
P120_total_gridID <- list()
match_df <- list()

for (i in spp_names) {
  P915_total_spp[[i]] <- P915_total %>%
    filter(Speciescommonname %in% i, Colnum > 0) %>%
    drop_na(Colnum)
  
  P915_total_gridID[[i]] <- P915_total_spp[[i]] %>%
    dplyr::select(gridID, Month, Speciescommonname, Year) %>%
    group_by(Month, Year, Speciescommonname) %>%
    distinct(gridID, .keep_all = TRUE)
  
  match_df[[i]] <- list()  # Initialize an empty list for each species in spp_names
  for (j in spp_names_trawl) {
    P120_total_spp[[j]] <- P120_total %>%
      filter(Speciescommonname %in% j, Colnum > 0) %>%
      drop_na(Colnum)
    
    P120_total_gridID[[j]] <- P120_total_spp[[j]] %>%
      dplyr::select(gridID, Month, Speciescommonname, Year) %>%
      group_by(Month, Year, Speciescommonname) %>%
      distinct(gridID, .keep_all = TRUE)
    
  #  match_df[[i]][[j]] <- match_df(P915_total_gridID[[i]], #P120_total_gridID[[j]], on = c("gridID", "Season", "Year")) 
    match_df[[i]][[j]] <- inner_join(P915_total_gridID[[i]], P120_total_gridID[[j]], by = c("gridID", "Month", "Year")) %>%
      dplyr::select(Speciescommonname.y, everything())
  }
}

match_df[[21]][[11]]
```

###GAMs: Tweedie 5 x 5 km, year-around

```{r}
CPUE_all_year <- CPUE_all_year# %>% drop_na()
df_count_year <- CPUE_all_year
df_count_year$Speciescommonname <- gsub(" ", "_", df_count_year$Speciescommonname)
df_count_year_wide <- df_count_year %>% filter(Survey %in% "P915") %>% select(Speciescommonname, Colnum, Stemp, Sdo, Ssal, Depth, Control1) %>% group_by(Control1) %>% pivot_wider(names_from = "Speciescommonname", values_from = "Colnum") %>% drop_na() 
                                                  
gam_formula <- red_drum ~ s(Depth, bs="ts", k=5) + s(Ssal, bs="ts", k=5) + s(Stemp, bs="ts", k=5) + s(Sdo, bs="ts", k=5) + s(atlantic_menhaden, bs="ts", k=5) + s(atlantic_croaker, bs="ts", k=5) + s(southern_flounder, bs="ts", k=5) + s(spot, bs="ts", k=5)

tweedie <- gam(gam_formula, family= tw(link= "log"), data= df_count_year_wide, method= "REML")
summary(tweedie)
AIC(tweedie)
gam.check(tweedie)
```
