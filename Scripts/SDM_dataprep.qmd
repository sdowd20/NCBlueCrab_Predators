---
title: "GAM_sd"
format: html
editor: visual
---

```{r}
packages <- c("ggplot2", "tidyverse", "lubridate", "sf", "sp", "dplyr", "rnaturalearth", "readr", "readxl", "spatialEco", "rstatix", "viridis")
invisible(lapply(packages, library, character.only= TRUE))

setwd("~/Documents/GitHub/NCBlueCrab_Predators")
p915_CPUE <- read_csv("Data/P915/Finalized/p915_CPUE.csv")
p120_CPUE <- read_csv("Data/P120/Finalized/p120_CPUE.csv")
p195_CPUE <- read_csv("Data/P195/Finalized/p195_CPUE.csv")

world <- ne_countries(scale = "medium", returnclass = "sf")

p915_CPUEedt <- p915_CPUE %>% select(-...1, -Obs, -Weather, -Winddir, -Windspd, -Sedsize, -Btmcomp, -doy) %>% filter(Speciescommonname %in% c("atlantic croaker", "black drum", "red drum", "southern flounder", "southern kingfish", "striped bass")) %>% filter(Year >= 2008) #added in species of focus for now (still waiting on data) 
p120_CPUEedt <- p120_CPUE %>% select(-...1, -Program, -Nbrrec3, -Time, -Duration) %>% filter(Year >= 2008) #still don't have btmcomp or sedsize 
p195_CPUEedt <- p195_CPUE %>% select(-...1, -Timestart, -Duration, -Depthstart) %>% rename("Ssal" = "Salinitysurface", "Bsal"= "Salinitybottom", "Stemp"= "Tempsurface", "Btemp"= "Tempbottom", "Latitude"= "Latitudestart", "Longitude"= "Longitudestart", "Colnum"= "Numbertotal_new") %>% filter(Year >= 2008)
p195_CPUEedt$Depthzone[p195_CPUEedt$Depthzone %in% NA] <- "River"

colnames(p915_CPUEedt)
colnames(p120_CPUEedt)
colnames(p195_CPUEedt)

#Area, Strata vs. Location, Station vs. Location, Stationcode, Eventname vs. Control1 
#P120: no sedsize_new or btmcomp_new, doesn't have wbdytype or wbd, P120 still has core right now
```

###Calculate CPUE (move this to after outlier analysis), also might need to do at grid cell level- just making sure it works with data

```{r}
#P120: 
summary(p120_CPUE$Duration) #All tows are 1 minute speed in duration
#Adjusted to cover 75 yards, headrope is 10.5 feet, so area covered in one tow is 0.02195 hectares
p120_CPUEedt$Effort= 0.02195
p120_CPUEedt$CPUE=p120_CPUEedt$Colnum/p120_CPUEedt$Effort

#P195 
##Effort in p195_abund is 1.812, double rigged trawl, duration is 20 mins at a speed of 2.5 knots to cover 87,750 square feet.
p195_CPUEedt$Effort = 1.812
p195_CPUEedt$CPUE=p195_CPUEedt$Colnum/p195_CPUEedt$Effort

#P915
p915_CPUEedt <- p915_CPUEedt %>% mutate("Soak_time" = ifelse(Area == 'CAPEF' & Month  %in% c(04, 05, 06, 07, 08, 09), 240, ifelse(Area == 'NEWR' & Month %in% c(04, 05, 06, 07, 08, 09), 240, 720))) #add in standard soak time, max is 12 hours, soak time 4 hours for CAPEF and NEWR b/w April and September
p915_CPUEedt$CPUE= p915_CPUEedt$Colnum/p915_CPUEedt$Soak_time #calculate CPUE

t <- p915_CPUEedt %>% filter(Area %in% "DARE2", Strata %in% "MANT2")


```

###Outlier analysis

```{r}
#Remove NAs
summary(is.na(p915_CPUEedt)) #No NAs where it doesn't make sense
summary(is.na(p120_CPUEedt)) #Almost no NAs in general
summary(is.na(p195_CPUEedt)) #A good amount of NAs for Sedsize_new and Btmcomp_new b/c isn't greater than 2008 

p915_CPUEedt <- p915_CPUEedt %>% drop_na() #drops 6914 data points
p915_CPUEedt$Survey <- "P915"
p120_CPUEedt <- p120_CPUEedt %>% drop_na() #drops 564 data points 
p120_CPUEedt$Survey <- "P120"
p195_CPUEedt <- p195_CPUEedt %>% drop_na() #drops 1137 data points 
p195_CPUEedt$Survey <- "P195"


ggplot(data = world) + geom_sf() + geom_sf(data = globe_grid_20, fill = NA) + coord_sf(xlim=c(-85, -70), ylim=c(25,40), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + geom_point(data = p195_CPUEedt, aes(x = Longitude, y = Latitude), size = .2) + coord_sf(xlim=c(-78, -75), ylim=c(33,37), expand = TRUE)

#Outliers
t<- p915_CPUEedt %>% identify_outliers(Latitude)
t2 <-t[which(t$is.extreme %in% TRUE), ]

lower_bound_SummerFlounder <- quantile(P195JuneSDMDATAREDO_SummerFlounderF$SummerFlounderCount, 0.01)
upper_bound_SummerFlounder <- quantile(P195JuneSDMDATAREDO_SummerFlounderF$SummerFlounderCount, 0.99)
outlier_ind_SummerFlounder <- which(P195JuneSDMDATAREDO_SummerFlounderF$SummerFlounderCount < lower_bound_SummerFlounder | P195JuneSDMDATAREDO_SummerFlounderF$SummerFlounderCount> upper_bound_SummerFlounder)
View(P195JuneSDMDATAREDO_SummerFlounderF[outlier_ind_SummerFlounder, ])

```

#### Predictor variables: coordinates

##### Load predictor variable datasets
```{r}
setwd("~/Documents/GitHub/NCBlueCrab_Predators")
inlet_coords <- st_read("Data/Inlet.points.kml")
coords2 <- st_coordinates(inlet_coords)
inlet_coords$Latitude <- coords2[, "Y"]
inlet_coords$Longitude <- coords2[, "X"]
inlet_coords <- inlet_coords %>% select(-Description)
st_crs(inlet_coords)

NC_watersheds <- st_read("Data/NC_watersheds/HUC_10.shp")
NC_watersheds <- st_transform(NC_watersheds, crs = 4326)

SAV_06
```

##### Add in other metrics to coordinates
```{r}
#Distance to inlet 
coords_survey <- rbind(p915_CPUEedt %>% select(Latitude, Longitude, Survey), p120_CPUEedt %>% select(Latitude, Longitude, Survey), p195_CPUEedt %>% select(Latitude, Longitude, Survey))
coords_surveyedt <- coords_survey %>% distinct(Latitude, Longitude, .keep_all= TRUE)
coords_surveysf <- st_as_sf(coords_surveyedt, coords= c("Longitude", "Latitude"), crs= 4326)
coords_inlet_nearest <- st_nearest_feature(coords_surveysf, inlet_coords)
dist_inlets = st_distance(coords_surveysf, inlet_coords[coords_inlet_nearest,], by_element=TRUE)
dist_inlets <- as.numeric(dist_inlets)
coords_surveysf <- coords_surveysf %>% mutate(dist_inlets= dist_inlets)

ggplot(data= world) + geom_sf() + geom_point(data= coords_surveysf[100:200,], aes(x= Longitude, y= Latitude, color= dist_inlets)) + geom_point(data= inlet_coords, aes(x= Longitude, y= Latitude)) + coord_sf(xlim=c(-78, -75), ylim=c(33,37), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + labs(x= "Longitude", y= "Latitude") + scale_color_viridis() #it works! just need to do it with less data 

intersections <- st_intersection(coords_surveysf, NC_watersheds)
unique(intersections$HU_10_NAME)

intersections_edt <- intersections %>% mutate(Wbd = ifelse(HU_10_NAME %in% "Brunswick River-Cape Fear River"|HU_10_NAME %in% "Goshen Swamp"|HU_10_NAME %in% "Liliput Creek-Cape Fear River"|HU_10_NAME %in% "Harrisons Creek-Northeast Cape Fear River", "Cape Fear River", ifelse(HU_10_NAME %in% "South Creek-Pamlico River"|HU_10_NAME %in% "Chocowinity Bay-Pamlico River", "Pamlico River", ifelse(HU_10_NAME %in% "Pantego Creek"|HU_10_NAME %in% "Headwaters Pungo River"| HU_10_NAME %in% "Intracoastal Waterway-Pungo River"| HU_10_NAME %in% "Outlet Pungo River", "Pungo River", ifelse(HU_10_NAME %in% "Pamlico Sound-Ocracoke Inlet"|HU_10_NAME %in% "Pamlico Sound-Hatteras Inlet", HU_10_NAME %in% "Cape Lookout Shoals-Core Banks"|HU_10_NAME %in% "Neuse River-Pamlico Sound"|HU_10_NAME %in% "Oyster Creek-Jarrett Bay"|HU_10_NAME %in% "Bogue Banks-Shackleford Banks"|HU_10_NAME %in% "Lake Mattamuskeet-Rose Bay"|HU_10_NAME %in% "Jones Bay-Bay River", "Pamlico Sound", NA)))))

ifelse(HU_10_NAME %in% "Headwaters New River"|HU_10_NAME %in% "New River Inlet", "New River", ifelse(HU_10_NAME %in% "Upper Broad Creek-Neuse River"|HU_10_NAME %in% "Cherry Point-Neuse River"|HU_10_NAME %in% "Town of Oriental-Neuse River", "Neuse River", intersections$HU_10_NAME)))))))
                                                             
                                                             

"Brunswick River-Cape Fear River", "Goshen Swamp", "Liliput Creek-Cape Fear River", "Harrisons Creek-Northeast Cape Fear River",  --> "Cape Fear River"

"South Creek-Pamlico River", "Chocowinity Bay-Pamlico River" --> "Pamlico River"

"Pantego Creek", "Headwaters Pungo River", "Intracoastal Waterway-Pungo River", "Outlet Pungo River" --> "Pungo river"

"Pamlico Sound-Ocracoke Inlet" --> "Pamlico Sound"
"Pamlico Sound-Hatteras Inlet"
"Cape Lookout Shoals-Core Banks"
"Neuse River-Pamlico Sound"
"Oyster Creek-Jarrett Bay"
"Bogue Banks-Shackleford Banks"
Lake Mattamuskeet-Rose Bay
Jones Bay-Bay River

"Headwaters New River" --> "New River", "New River Inlet", 


"Upper Broad Creek-Neuse River", "Cherry Point-Neuse River", "Town of Oriental-Neuse River" --> "Neuse River"

unique(intersections$DWQ_Basin)
ggplot(data= world) + geom_sf() + geom_point(data= t, aes(x= Longitude, y= Latitude, color= HU_10_NAME)) + coord_sf(xlim=c(-78, -75), ylim=c(33,37), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + labs(x= "Longitude", y= "Latitude") #it works! just need to do it with less data

t <- intersections %>% filter(HU_10_NAME %in% "Lake Mattamuskeet-Rose Bay")
coords2 <- st_coordinates(t)
t$Latitude <- coords2[, "Y"]
t$Longitude <- coords2[, "X"]
#shallotte river, outlet cashie river, 

coords2 <- st_coordinates(coords_surveysf)
coords_surveysf$Latitude <- coords2[, "Y"]
coords_surveysf$Longitude <- coords2[, "X"]
```

#### Predictor variables: grid
```{r}
#visualize btmcomp and sedsize
```

#### Add in metrics to grid

```{r}
#Add grid cells in 
p915_latlon <- p915_CPUEedt %>% select(Latitude, Longitude) %>% mutate(lat_lon = paste(Latitude, Longitude, sep= "_"))
p120_latlon <- p120_CPUEedt %>% select(Latitude, Longitude) %>% mutate(lat_lon = paste(Latitude, Longitude, sep= "_"))
p195_latlon <- p195_CPUEedt %>% select(Latitude, Longitude) %>% mutate(lat_lon = paste(Latitude, Longitude, sep= "_"))

lat_lon_combo <- rbind(p915_latlon, p120_latlon, p195_latlon)
lat_lon_combo <- lat_lon_combo %>% distinct(lat_lon, .keep_all= TRUE)

world <- ne_countries(scale = "medium", returnclass = "sf")
# make an object the size and shape of the output you want
globe_bb <- matrix(c(-78.900147,33.802938,
                      -78.900147,36.672128,
                      -75.263672,36.672128,
                     -75.263672, 33.802938,
                     -78.900147,33.802938), byrow = TRUE, ncol = 2) %>% list() %>% st_polygon() %>% st_sfc(., crs = 4326)

globe_grid_20 <- st_make_grid(x= globe_bb, n = c(20,20), crs = 4326, what = 'polygons') %>% st_sf('geometry' = ., data.frame('ID' = 1:length(.)))

fish_spat <- as.data.frame(lat_lon_combo)
fish_spat$rowID <- 1:nrow(fish_spat)

coordinates(fish_spat) <- ~ Longitude + Latitude
fish_spat <- st_as_sf(fish_spat)
fish_spat <- st_set_crs(fish_spat, 4326)
grid <- globe_grid_20

fish_extract <- st_intersection(fish_spat, grid)
fish_extract_2 <- as.data.frame(fish_extract)

#Group to get rid of duplicates (there are times when a point is overlapping two grid cells)
fish_extract_2_2 <- fish_extract_2[!duplicated(fish_extract_2[c("rowID")]),] #this should be the same size as fish spat, it is 5 observations less, thinking this is bc a few datapoints might be outside of grid cells, didn't change in size from fish_extract_2
fish_extract_2_2$gridID <- fish_extract_2_2$ID
fish_extract_2_2edt <- fish_extract_2_2[,-c(2,3, 4)]

unique(fish_extract_2_2edt$gridID)
#write.csv(fish_extract_2_2edt, "~/Documents/GitHub/NCBlueCrab_Predators/Data/SDM.grids.csv") #updated on 07/11/23
```

```{r}
globe_bb <- matrix(c(-78.900147,33.802938,
                      -78.900147,36.672128,
                      -75.263672,36.672128,
                     -75.263672, 33.802938,
                     -78.900147,33.802938), byrow = TRUE, ncol = 2) %>% list() %>% st_polygon() %>% st_sfc(., crs = 4326)

globe_grid_20 <- st_make_grid(x= globe_bb, n = c(30,30), crs = 4326, what = 'polygons') %>% st_sf('geometry' = ., data.frame('ID' = 1:length(.))) #0.13 degrees

degrees_per_km = 1/111.0 #1 degree is 111 km 
degress <- 14.4*degrees_per_km #0.129

ggplot(data = world) + geom_sf() + geom_sf(data = globe_grid_20, fill = NA) + coord_sf(xlim=c(-85, -70), ylim=c(25,40), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + geom_point(data = coords_survey, aes(x = Longitude, y = Latitude, color= Survey), size = .2) + coord_sf(xlim=c(-78, -75), ylim=c(33,37), expand = TRUE)
ggsave("Users/sallydowd/Desktop.savedIT.png")
```

```{r}
setwd("~/Documents/GitHub/NCBlueCrab_Predators")
grid_t <- read.csv("Data/SDM.grids.csv")



Btm_test <- rbind(p915_CPUEedt %>% select(Btmcomp_new, Sedsize_new, Latitude, Longitude) %>% mutate(Survey= "P915"), p195_CPUEedt %>% select(Btmcomp_new, Sedsize_new, Latitude, Longitude) %>% mutate(Survey= "P195"))

ggplot(data= world) + geom_sf() + geom_sf(data = globe_grid_20, fill = NA) + coord_sf(xlim=c(-78, -75), ylim=c(34,37), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + geom_point(data = Btm_test, aes(x = Longitude, y = Latitude, colour = Survey), size = .2)
```
