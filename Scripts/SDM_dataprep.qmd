---
title: "GAM_sd"
format: html
editor: visual
---

#### Load packages, CPUE datasets, and filter them

```{r}
#Load packages and functions 
packages <- c("ggplot2", "tidyverse", "lubridate", "sf", "sp", "dplyr", "rnaturalearth", "readr", "readxl", "spatialEco", "rstatix", "viridis", "BBmisc", "corrplot")
invisible(lapply(packages, library, character.only= TRUE))

standard_theme <- theme_bw() + theme(panel.border = element_rect(fill=NA, colour = "black")) + theme(panel.grid.major = element_blank(), panel.grid.minor = element_blank()) + theme(legend.text.align= 0, legend.title= element_text(size = 12), legend.text = element_text(size= 10), axis.text=element_text(size=10), axis.title=element_text(size=12))

#select <- dplyr::select()

#Load CPUE datasets
p915_CPUE <- read_csv("/users/sallydowd/Desktop/Ch1Data/P915/p915_CPUE_new.csv")
setwd("~/Documents/GitHub/NCBlueCrab_Predators")
p120_CPUE <- read_csv("Data/P120/Finalized/p120_CPUE.csv")
p195_CPUE <- read_csv("Data/P195/Finalized/p195_CPUE.csv")

length(unique(p915_CPUEedt$Control1))

#Filter datasets: Add back in Secchi size once get P195 data
p915_CPUEedt <- p915_CPUE %>% dplyr::select(-...1, -Obs, -Weather, -Weather, -Sedsize, -Btmcomp, -doy, -Wbdytype, -Wbd, -Sample, -Ph, -Quad, -Secchi) %>% rename("Location" = "Area", "Strata/station"= "Strata") %>% filter(between(Year, 2001, 2021), Month== 6) #added in species of focus for now (still waiting on data)
p120_CPUEedt <- p120_CPUE %>% filter(Core== 1|Core==2) %>% select(-...1, -Program, -Nbrrec3, -Time, -Duration, -doy, -Core, -Sedsize, -Btmcomp, -Secchi) %>% rename("Strata/station"= "Station") %>% filter(between(Year, 2001, 2021), Month==6)
p195_CPUEedt <- p195_CPUE %>% dplyr::select(-...1, -Timestart, -Duration, -Depthend, -Wbdytype, -Wbd, -Speciesscientificname, -Depthzone, -Secchi_depthcm) %>% rename("Ssal" = "Salinitysurface", "Bsal"= "Salinitybottom", "Stemp"= "Tempsurface", "Btemp"= "Tempbottom", "Latitude"= "Latitudestart", "Longitude"= "Longitudestart", "Colnum"= "Numbertotal", "Control1"= "Eventname", "Strata/station"= "Stationcode", "Depth"= "Depthstart") %>% filter(between(Year, 2001, 2021), Month==6)

##All same column names! 
colnames(p915_CPUEedt)
colnames(p120_CPUEedt)
colnames(p195_CPUEedt) #not using depthzone right now, might be hard w/ averaging 

##Get rid of NAs outside of environmental variables!
summary(is.na(p915_CPUEedt)) #A good amount of NAs for Sedsize_new (3248) and Btmcomp_new (2714)
summary(is.na(p120_CPUEedt)) #Almost no NAs in general, Sedsize_new: 130
summary(is.na(p195_CPUEedt)) #A good amount of NAs for Sedsize_new (1170) and Btmcomp_new (1080)

p915_CPUEedt <- p915_CPUEedt %>% drop_na(Latitude, Longitude)
p915_CPUEedt$Survey <- "P915"
p120_CPUEedt <- p120_CPUEedt  %>% drop_na(Latitude, Longitude)
p120_CPUEedt$Survey <- "P120"
p195_CPUEedt <- p195_CPUEedt  %>% drop_na(Latitude, Longitude)
p195_CPUEedt$Survey <- "P195"

CPUE_all <- rbind(p915_CPUEedt, p120_CPUEedt, p195_CPUEedt)
CPUE_all$lat_lon <- paste(CPUE_all$Latitude, CPUE_all$Longitude, sep= "_")
```

#### Species: Number

```{r}
#Number of observations for species of interest: to note- when I redid this (08/06/23), I included bonnethead hammerhead and blue catfish just to look at the #s
interest_spp <- c("brown shrimp", "bluefish", "atlantic croaker", "southern flounder", "red drum", "black drum", "blue catfish", "gizzard shad", "american shad", "cownose ray", "blue crab", "atlantic menhaden", "spot", "summer flounder", "shads", "american eel", "adult blue crab", "atlantic brief squid", "atlantic thread herring", "lesser blue crab", "pink shrimp", "silver perch", "southern flounder", "spoot", "weakfish", "white shrimp", "cephalopod mullusc", "periwinkles", "alewife", "atlantic silverside", "bonnethead shark", "channel catfish", "hickory shad", "oyster toadfish", "sheepshead", "silver perch", "silversides", "striped mullet", "white mullet")

unique(p915_CPUEedt$Speciescommonname)

p195_nums <- p195_CPUEedt %>% filter(Year > 2008, Speciescommonname %in% interest_spp, Month== 6) %>% group_by(Speciescommonname, Month) %>% summarise(Sum_colnum= sum(Colnum)) %>% mutate(Survey= "P195") 

p120_nums <- p120_CPUEedt %>% filter(Year > 2008, Speciescommonname %in% interest_spp, Month==6) %>% group_by(Speciescommonname, Month) %>% drop_na(Colnum) %>% summarise(Sum_colnum= sum(Colnum)) %>% mutate(Survey= "P120") 

p915_nums <- p915_CPUEedt %>% filter(Year >= 2001,Month==6, Speciescommonname %in% interest_spp) %>% group_by(Speciescommonname, Month) %>% drop_na(Colnum) %>% summarise(Sum_colnum= sum(Colnum)) %>% mutate(Survey= "P915")

combo <- rbind(p195_nums, p120_nums, p915_nums)
combo <- combo %>% arrange(Speciescommonname, Month)
write.csv(combo, "~/Desktop/numbers.08.23.23.csv")
```

#### Grid: Form

```{r}
p915_latlon <- p915_CPUEedt %>% select(Latitude, Longitude) %>% mutate(lat_lon = paste(Latitude, Longitude, sep= "_"))
p120_latlon <- p120_CPUEedt %>% select(Latitude, Longitude) %>% mutate(lat_lon = paste(Latitude, Longitude, sep= "_"))
p195_latlon <- p195_CPUEedt %>% select(Latitude, Longitude) %>% mutate(lat_lon = paste(Latitude, Longitude, sep= "_"))
lat_lon_combo <- rbind(p915_latlon, p120_latlon, p195_latlon)
lat_lon_combo <- lat_lon_combo %>% distinct(lat_lon, .keep_all= TRUE) 

world <- ne_countries(scale = "medium", returnclass = "sf")
# make an object the size and shape of the output you want
globe_bb <- matrix(c(-78.900147,33.802938,
                      -78.900147,36.672128,
                      -75.263672,36.672128,
                     -75.263672, 33.802938,
                     -78.900147,33.802938), byrow = TRUE, ncol = 2) %>% list() %>% st_polygon() %>% st_sfc(., crs = 4326)
globe_grid_30 <- st_make_grid(x= globe_bb, n = c(30,30), crs = 4326, what = 'polygons') %>% st_sf('geometry' = ., data.frame('ID' = 1:length(.))) #grid is 0.13° by 0.13° (14.4 km)

#degrees_per_km = 1/111.0 #1 degree is 111 km 
#degress <- 14.4*degrees_per_km #0.129
#distance_km <- 14.4
#degrees <- distance_km * 111

ggplot(data = world) + geom_sf() + geom_sf(data = globe_grid_30, fill = NA) + coord_sf(xlim=c(-85, -70), ylim=c(25,40), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + geom_point(data = lat_lon_combo, aes(x = Longitude, y = Latitude), size = .2) + coord_sf(xlim=c(-78, -75), ylim=c(33.5,37), expand = TRUE)

fish_spat <- as.data.frame(lat_lon_combo)
fish_spat$rowID <- 1:nrow(fish_spat)
coordinates(fish_spat) <- ~ Longitude + Latitude
fish_spat <- st_as_sf(fish_spat)
fish_spat <- st_set_crs(fish_spat, 4326)
grid <- globe_grid_30
fish_extract <- st_intersection(fish_spat, grid)
fish_extract_2 <- as.data.frame(fish_extract)

#Group to get rid of duplicates (there are times when a point is overlapping two grid cells)
fish_extract_2_2 <- fish_extract_2[!duplicated(fish_extract_2[c("rowID")]),] #this should be the same size as fish spat, it is 5 observations less, thinking this is bc a few datapoints might be outside of grid cells, didn't change in size from fish_extract_2

fish_extract_2_2$gridID <- fish_extract_2_2$ID
fish_extract_2_2edt <- fish_extract_2_2[,-c(2,3, 4)]
write.csv(fish_extract_2_2edt, "~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_08.18.23.csv") #updated on 08/08/23

unique(fish_extract_2_2$gridID)

ggplot(data = world) + geom_sf() + geom_sf(data = fish_extract_2_2, fill = NA) + geom_sf(data= fish_spat) + coord_sf(xlim=c(-85, -70), ylim=c(25,40), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + coord_sf(xlim=c(-78, -75), ylim=c(33.5,37), expand = TRUE) + geom_point(data = lat_lon_combo2, aes(x = Longitude, y = Latitude, color= Survey), size = .2) 
```

#### Grid: Structuring predictor variables

```{r}
#Read in gridded coordinates dataset: each lat and lon has a grid 
gridded_coords <- read_csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_08.18.23.csv")
gridded_coords <- gridded_coords %>% separate(lat_lon, into = c("Latitude", "Longitude"), sep = "_", convert = TRUE) %>% dplyr::select(-...1)

##Did this work? Make sure the joined work and data lines up, 08/16/23 it does! 
selected_grids <- unique(gridded_coords$gridID)
globe_grid_30_test <- globe_grid_30 %>% rename("gridID"= "ID") %>% filter(gridID %in% selected_grids)

#ggplot(data = world) + geom_sf() + geom_sf(data = globe_grid_30_test, fill = NA) + coord_sf(xlim=c(-85, -70), ylim=c(25,40), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + geom_point(data = gridded_coords_geom, aes(x = Longitude, y = Latitude), size = .2) + coord_sf(xlim=c(-78, -75), ylim=c(33.5,37), expand = TRUE)

#Join grid geometry to gridded dataset 
globe_grid_30_edt <- globe_grid_30 %>% rename("gridID"= "ID")
gridded_coords_geom <- gridded_coords %>% left_join(globe_grid_30_edt, by= "gridID")
gridded_coords_geom_edt <- gridded_coords_geom %>% distinct(gridID, .keep_all= TRUE) %>% dplyr::select(gridID, geometry)
#write.csv(gridded_coords_geom, "~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_coords_geom.08.18.23.csv")

##Did this work? Yes! 
#ggplot(data = world) + geom_sf() + geom_sf(data = gridded_coords_geom, fill = NA) + coord_sf(xlim=c(-85, -70), ylim=c(25,40), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + geom_point(data = gridded_coords_geom, aes(x = Longitude, y = Latitude), size = .2) + coord_sf(xlim=c(-78, -75), ylim=c(33.5,37), expand = TRUE)

#Save shapefiles for QGIS
#st_write(gridded_coords_geom, "~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_coords_geom.08.21.23.shp")
#st_write(globe_grid_30_edt, "~/Documents/GitHub/NCBlueCrab_Predators/Data/globe_grid_30_edt.08.21.23.shp")
#--> TO QGIS for processing 
```

#### Grid: Calculating predictor variables

```{r}
library(dplyr)
#Organize data
Overall_grid9 <- read.csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/Predictor_variables/Overall_grid9.csv")
Overall_grid9[Overall_grid9 == ''] <- NA
Centroids4 <- read.csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/Predictor_variables/Centroids4.csv")
Centroids4 <- Centroids4 %>% rename("ShorelineType"= "ShorelineT", "InletDist_km"= "InletDist_", "ShorelineDist_km"= "ShorelineD") %>% dplyr::select(gridID, ShorelineType, InletDist_km, SAVDist_km)

selected_grids <- gridded_coords_geom_edt$gridID 
  
Grid_predictors <- Overall_grid9 %>% left_join(Centroids4, by= "gridID") %>% rename("gridArea_km"= "area_km2","ShrimpTrawl_p"= "ShrimpT_p", "TrawlDredge_p" ="TrawlDredg", "GillPoundNet_p"= "GillPound_", "WaterbodyCover"= "WaterbodyC") %>% filter(gridID %in% selected_grids) %>% dplyr::select(-Waterbody)

#Calculate fishing predictors: there are no negatives from waterbody
subset_cols <- c("ShrimpTrawl_p", "TrawlDredge_p", "GillPoundNet_p", "DPA_a")
Grid_predictors_edt <- Grid_predictors %>% mutate(ShrimpTrawl_a= WaterbodyCover - ShrimpTrawl_p, TrawlDredge_a= WaterbodyCover - TrawlDredge_p, GillPoundNet_a= WaterbodyCover - GillPoundNet_p) 
colnames(Grid_predictors_edt) 
Grid_predictors_edt2 <- Grid_predictors_edt %>% mutate(FishingAll_num= rowSums(Grid_predictors_edt[c("ShrimpTrawl_a", "TrawlDredge_a", "GillPoundNet_a", "DPA_a")] > 0), NoFishRest= WaterbodyCover- Restricted)

#Remove gridIDs outside of study area (determined by QGIS)
Grid_predictors_edt2 <- Grid_predictors_edt2 %>% filter(!gridID %in% c(398, 543, 668, 678, 679, 707, 895, 173, 199, 388))

#Calculate most common Sedsize_new in a grid cell
dataset_bind <- rbind(p915_CPUEedt, p195_CPUEedt, p120_CPUEedt)
datasets_Sedsize <- dataset_bind %>% dplyr::select(Latitude, Longitude, Sedsize_new) %>% drop_na(Sedsize_new)
datasets_Sedsize$lat_lon <- paste(datasets_Sedsize$Latitude,datasets_Sedsize$Longitude, sep = "_") 
gridded_coords_geom$lat_lon <- paste(gridded_coords_geom$Latitude,gridded_coords_geom$Longitude, sep = "_") 
datasets_Sedsize <- datasets_Sedsize %>% left_join(gridded_coords_geom %>% dplyr::select(gridID, lat_lon), by= "lat_lon")
Sedsize_common <- datasets_Sedsize %>% group_by(gridID) %>% summarise(Sedsize_common = names(which.max(table(Sedsize_new)))) %>% drop_na(gridID)

#Finish predicators 
Grid_predictors_edt2final <- Grid_predictors_edt2 %>% left_join(Sedsize_common, by= "gridID")
#write.csv(Grid_predictors_edt2final, "~/Documents/GitHub/NCBlueCrab_Predators/Data/Predictor_variables/gridded_predictors_final.csv")
```

#### Fish to grid, predictor

```{r}
#Combining datasets
predictors_df <- read_csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/Predictor_variables/gridded_predictors_final.csv")
predictors_df <- predictors_df[,-1]

##Join predictors with lat_lon
gridded_coords <- read_csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/gridded_08.18.23.csv")
gridded_coords <- gridded_coords[,-1]
gridpred_lat_lon <- gridded_coords %>% left_join(predictors_df, by= "gridID")

##Join lat_lon from predictors gridded to CPUE!! 143 rows with NA for gridID, 7 latitude and longitude points, all P915
CPUE_all_grid_pred <- CPUE_all %>% left_join(gridpred_lat_lon, by= "lat_lon") %>% select(lat_lon, everything())
CPUE_all_grid_pred <- CPUE_all_grid_pred %>% drop_na(gridID)
CPUE_all_grid_pred <- CPUE_all_grid_pred %>% separate(lat_lon, into= c("Latitude", "Longitude"), sep = "_", convert= TRUE, remove=FALSE) %>% filter(!gridID %in% c(398, 543, 668, 678, 679, 707, 895, 173, 199, 388)) #get rid of grid cells that are outliers, gets rid of 323 rows 

ggplot(data = world) + geom_sf() + geom_sf(data =globe_grid_30_test, fill = NA) + coord_sf(xlim=c(-78, -75), ylim=c(33.5,37), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + standard_theme + geom_point(data = CPUE_all_grid_pred, aes(x = Longitude, y = Latitude, color= Survey), size = .2) #it worked! 

#Outlier analysis: there are some is.extreme outliers here and there but I've decided not to remove any (e.g: outlier for CPUE makes sense)
colnames(CPUE_all_grid_pred)
cn <- c("Year", "Month", "Day", "Depth", "Ssal", "Bsal", "Stemp", "Btemp", "Sdo", "Bdo", "Colnum", "GillPoundNet_a", "InletDist_km", "SAVDist_km", "Latitude", "Longitude")
t <- list()
for(col in cn){
t[[col]] <- CPUE_all_grid_pred %>% identify_outliers(col) %>% filter(is.extreme== TRUE) %>% select(col, is.extreme, Speciescommonname)
}

#write.csv(CPUE_all_grid_pred,"~/Documents/GitHub/NCBlueCrab_Predators/Data/CPUE/CPUE_all_grid_pred.csv") #updated on 08/23/23
```

#### Overlap

```{r}
CPUE_dfs_gridded_final <- read.csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/CPUE/CPUE_dfs_gridded_final.csv", sep= ",")
overlap_t <- CPUE_dfs_gridded_final

#Overlapping grid IDs
##In general
gridID_count <- overlap_t %>% filter(Colnum > 0) %>% group_by(Survey, gridID) %>% summarize(count = n()) 

p915_overlap_gridID <- overlap_t %>% select(gridID, Survey, Year) %>% filter(Survey %in% "P915") %>% group_by(Year) %>% distinct(gridID, .keep_all= TRUE) %>% select(gridID, Year)
p120_overlap_gridID <- overlap_t %>% select(gridID, Survey, Year) %>% filter(Survey %in% "P120") %>% group_by(Year) %>% distinct(gridID, .keep_all= TRUE) %>% select(gridID, Year)
p195_overlap_gridID <- overlap_t %>% select(gridID, Survey, Year) %>% filter(Survey %in% "P195") %>% group_by(Year) %>% distinct(gridID, .keep_all= TRUE) %>% select(gridID, Year)

library(plyr)
match_df(p915_overlap_gridID, p120_overlap_gridID, on = NULL)
match_df(p915_overlap_gridID, p195_overlap_gridID, on = NULL)
match_df(p195_overlap_gridID, p120_overlap_gridID, on = NULL) 

##Positive, positive
spp_names <- unique(subset(overlap_t, Survey %in% "P915")$Speciescommonname)
P915_total_spp <- list()
P915_total_gridID <- list()
P120_total_gridID <- list()
match_df <- list()
library(plyr)
library(dplyr)
for(i in spp_names) {
P915_total_spp[[i]] <- overlap_t %>% filter(Survey %in% "P915", Speciescommonname %in% i, Colnum > 0)
P915_total_gridID[[i]] <- P915_total_spp[[i]] %>% dplyr::select(gridID, Month, Speciescommonname, Year) %>% group_by(Month, Year, Speciescommonname) %>% distinct(gridID, .keep_all= TRUE)
P120_bc <- overlap_t %>% filter(Survey %in% "P120", Speciescommonname %in% "blue crab", Colnum > 0)
P120_bc_gridID <- P120_bc %>% dplyr::select(gridID, Month, Speciescommonname, Year) %>% group_by(Month, Year, Speciescommonname) %>% distinct(gridID, .keep_all= TRUE)
match_df[[i]] <- match_df(P915_total_gridID[[i]], P120_bc_gridID, on = c("gridID", "Month", "Year")) 
}

detach(package:plyr)
library(dplyr)
match_data2 <- as.data.frame(do.call(rbind, match_df)) 
match_data2 <- match_data2 %>% group_by(Speciescommonname, Month, Year) %>% dplyr::mutate(count= n())

match_data2 %>% filter(Month== 6) %>% ggplot() + geom_histogram(aes(x= Year)) + facet_wrap(~Speciescommonname) + standard_theme


spp_names_trawl <- unique(subset(overlap_t, Survey %in% "P120")$Speciescommonname)

P915_total_spp <- list()
P915_total_gridID <- list()
P120_total_spp <- list()
P120_total_gridID <- list()
match_df <- list()
all_match_df <- list()

for (i in spp_names) {
  P915_total_spp[[i]] <- overlap_t %>%
    filter(Survey %in% "P915", Speciescommonname %in% i, Colnum > 0, Month== 6) %>%
    drop_na(Colnum)
  
  P915_total_gridID[[i]] <- P915_total_spp[[i]] %>%
    dplyr::select(gridID, Month, Speciescommonname, Year) %>%
    group_by(Month, Year, Speciescommonname) %>%
    distinct(gridID, .keep_all = TRUE)
  
  match_df[[i]] <- list()  # Initialize an empty list for each species in spp_names
  for (j in spp_names_trawl) {
    P120_total_spp[[j]] <- overlap_t %>%
      filter(Survey %in% "P120", Speciescommonname %in% j, Colnum > 0, Month==6) %>%
      drop_na(Colnum)
    
    P120_total_gridID[[j]] <- P120_total_spp[[j]] %>%
      dplyr::select(gridID, Month, Speciescommonname, Year) %>%
      group_by(Month, Year, Speciescommonname) %>%
      distinct(gridID, .keep_all = TRUE)
    
  #  match_df[[i]][[j]] <- match_df(P915_total_gridID[[i]], #P120_total_gridID[[j]], on = c("gridID", "Season", "Year")) 
    match_df[[i]][[j]] <- inner_join(P915_total_gridID[[i]], P120_total_gridID[[j]], by = c("gridID", "Month", "Year")) %>%
      dplyr::select(Speciescommonname.y, everything())
  }
   all_match_df[[i]] <- bind_rows(match_df[[i]]) #combine match_df[[i]][[j]] into data frames for each predator
}

detach(package:plyr)
final_combo <- bind_rows(all_match_df)
final_combo_n_yr <- final_combo %>% group_by(Year, Speciescommonname.x, Speciescommonname.y) %>% mutate(count= n()) %>% distinct(count, .keep_all= TRUE) %>% select(-gridID)
final_combo_n <- final_combo %>% group_by(Speciescommonname.x, Speciescommonname.y) %>% mutate(count= n()) %>% distinct(count, .keep_all= TRUE) %>% select(-gridID, -Year)

```

In general, there were not many extreme outliers throughout the datasets. There were no extreme outliers for year, month, day, ssal, bsal, stemp, btemp, sdo, and bdo columns. There were some extreme outliers for the Depth column. The minimum depth was 0.0 and the maximum was 8.8 meters. The only watersheds that had water depth over 7 meters were New River, Pamlico River, Neuse River, and Pamlico Sound. Based on briefly examining the maxinimum depth for water bodies, I think this might be plausible. For Colnum, there were around 102,398 extreme outliers with a maximum Colnum of 9006. As the species with extreme outliers for this category are commonly caught in the estuary (atlantic croaker, black drum, blue crab, spot, etc.), I feel comfortable with retaining these outliers. Lastly, there were some rows of extreme outliers for distance to nearest inlet and SAV. \#### Overlap

```{r}
CPUE_dfs_gridded_final <- read.csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/CPUE/CPUE_dfs_gridded_final.csv", sep= ",")
overlap_t <- CPUE_dfs_gridded_final

#Overlapping grid IDs
##In general
gridID_count <- overlap_t %>% filter(Colnum > 0) %>% group_by(Survey, gridID) %>% summarize(count = n()) 

p915_overlap_gridID <- overlap_t %>% select(gridID, Survey, Year) %>% filter(Survey %in% "P915") %>% group_by(Year) %>% distinct(gridID, .keep_all= TRUE) %>% select(gridID, Year)
p120_overlap_gridID <- overlap_t %>% select(gridID, Survey, Year) %>% filter(Survey %in% "P120") %>% group_by(Year) %>% distinct(gridID, .keep_all= TRUE) %>% select(gridID, Year)
p195_overlap_gridID <- overlap_t %>% select(gridID, Survey, Year) %>% filter(Survey %in% "P195") %>% group_by(Year) %>% distinct(gridID, .keep_all= TRUE) %>% select(gridID, Year)

library(plyr)
match_df(p915_overlap_gridID, p120_overlap_gridID, on = NULL)
match_df(p915_overlap_gridID, p195_overlap_gridID, on = NULL)
match_df(p195_overlap_gridID, p120_overlap_gridID, on = NULL) 

##Positive, positive
spp_names <- unique(subset(overlap_t, Survey %in% "P915")$Speciescommonname)
P915_total_spp <- list()
P915_total_gridID <- list()
P120_total_gridID <- list()
match_df <- list()
library(plyr)
library(dplyr)
for(i in spp_names) {
P915_total_spp[[i]] <- overlap_t %>% filter(Survey %in% "P915", Speciescommonname %in% i, Colnum > 0)
P915_total_gridID[[i]] <- P915_total_spp[[i]] %>% dplyr::select(gridID, Month, Speciescommonname, Year) %>% group_by(Month, Year, Speciescommonname) %>% distinct(gridID, .keep_all= TRUE)
P120_bc <- overlap_t %>% filter(Survey %in% "P120", Speciescommonname %in% "blue crab", Colnum > 0)
P120_bc_gridID <- P120_bc %>% dplyr::select(gridID, Month, Speciescommonname, Year) %>% group_by(Month, Year, Speciescommonname) %>% distinct(gridID, .keep_all= TRUE)
match_df[[i]] <- match_df(P915_total_gridID[[i]], P120_bc_gridID, on = c("gridID", "Month", "Year")) 
}

detach(package:plyr)
library(dplyr)
match_data2 <- as.data.frame(do.call(rbind, match_df)) 
match_data2 <- match_data2 %>% group_by(Speciescommonname, Month, Year) %>% dplyr::mutate(count= n())

match_data2 %>% filter(Month== 6) %>% ggplot() + geom_histogram(aes(x= Year)) + facet_wrap(~Speciescommonname) + standard_theme


spp_names_trawl <- unique(subset(overlap_t, Survey %in% "P120")$Speciescommonname)

P915_total_spp <- list()
P915_total_gridID <- list()
P120_total_spp <- list()
P120_total_gridID <- list()
match_df <- list()
all_match_df <- list()

for (i in spp_names) {
  P915_total_spp[[i]] <- overlap_t %>%
    filter(Survey %in% "P915", Speciescommonname %in% i, Colnum > 0, Month== 6) %>%
    drop_na(Colnum)
  
  P915_total_gridID[[i]] <- P915_total_spp[[i]] %>%
    dplyr::select(gridID, Month, Speciescommonname, Year) %>%
    group_by(Month, Year, Speciescommonname) %>%
    distinct(gridID, .keep_all = TRUE)
  
  match_df[[i]] <- list()  # Initialize an empty list for each species in spp_names
  for (j in spp_names_trawl) {
    P120_total_spp[[j]] <- overlap_t %>%
      filter(Survey %in% "P120", Speciescommonname %in% j, Colnum > 0, Month==6) %>%
      drop_na(Colnum)
    
    P120_total_gridID[[j]] <- P120_total_spp[[j]] %>%
      dplyr::select(gridID, Month, Speciescommonname, Year) %>%
      group_by(Month, Year, Speciescommonname) %>%
      distinct(gridID, .keep_all = TRUE)
    
  #  match_df[[i]][[j]] <- match_df(P915_total_gridID[[i]], #P120_total_gridID[[j]], on = c("gridID", "Season", "Year")) 
    match_df[[i]][[j]] <- inner_join(P915_total_gridID[[i]], P120_total_gridID[[j]], by = c("gridID", "Month", "Year")) %>%
      dplyr::select(Speciescommonname.y, everything())
  }
   all_match_df[[i]] <- bind_rows(match_df[[i]]) #combine match_df[[i]][[j]] into data frames for each predator
}

detach(package:plyr)
final_combo <- bind_rows(all_match_df)
final_combo_n_yr <- final_combo %>% group_by(Year, Speciescommonname.x, Speciescommonname.y) %>% mutate(count= n()) %>% distinct(count, .keep_all= TRUE) %>% select(-gridID)
final_combo_n <- final_combo %>% group_by(Speciescommonname.x, Speciescommonname.y) %>% mutate(count= n()) %>% distinct(count, .keep_all= TRUE) %>% select(-gridID, -Year)

```

#### CPUE calculation

```{r}
#Form CPUE dataset 
CPUE_dfs_gridded_final <- read_csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/CPUE/CPUE_all_grid_pred.csv")
CPUE_dfs_gridded_final <- CPUE_dfs_gridded_final[,-1]

#Effort by survey: this works 
CPUE_grid <- CPUE_dfs_gridded_final %>% mutate("Effort"= ifelse(Survey %in% "P120", 1, ifelse(Survey %in% "P195", 20, ifelse(Survey %in% "P915" & Location == "CAPEF" & Month %in% c(04, 05, 06, 07, 08, 09), 240, ifelse(Survey %in% "P915" & Location == "NEWR" & Month %in% c(04, 05, 06, 07, 08, 09), 240, 720))))) #P120: 1 minute tows, P195: 20 minute tows, P915: 240 minute soak time for rivers from April to September and 720 soak time everything else 

#CPUE by row: since you assigned effort correctly, this will work as it should 
CPUE_grid$CPUE <- CPUE_grid$Colnum/CPUE_grid$Effort

CPUE_grid <- CPUE_grid %>% group_by(Survey) %>% mutate(CPUE_stdzd= normalize(CPUE, method= "range", range= c(0,1))) ##min-max scaling:
CPUE_grid <- CPUE_grid %>% group_by(gridID, Survey, Year, Speciescommonname) %>% mutate(mean_CPUE= mean(CPUE), mean_CPUE_stdzd= mean(CPUE_stdzd))

#Add a few more environmental predictors: exclude 0 values for stemp, sdo, or ssal by turning them to NAs and then
CPUE_grid_avg <- CPUE_grid %>% ungroup() %>% mutate(Stemp= ifelse(CPUE_grid$Stemp==0.0, NA, CPUE_grid$Stemp), Ssal= ifelse(CPUE_grid$Ssal==0.0, NA, CPUE_grid$Ssal), Sdo= ifelse(CPUE_grid$Sdo==0.0, NA, CPUE_grid$Sdo)) %>% group_by(Year, gridID) %>% mutate(avg_depth= mean(Depth, na.rm= TRUE), avg_ssal= mean(Ssal, na.rm= TRUE), avg_bsal= mean(Bsal, na.rm= TRUE), avg_stemp= mean(Stemp, na.rm= TRUE), avg_btemp= mean(Btemp, na.rm= TRUE), avg_sdo= mean(Sdo, na.rm= TRUE), avg_bdo= mean(Bdo, na.rm= TRUE), avg_latitude= mean(Latitude, na.rm= TRUE), avg_longitude= mean(Longitude), avg_photoperiod= mean(Photoperiod), na.rm= TRUE) %>% dplyr::select(-avg_bsal, -avg_btemp, -avg_bdo, -Stemp, -Btemp, -Sdo, -Bdo, -Ssal, -Bsal, -Season, -Sedsize_new, -Btmcomp_new, -Photoperiod, -Depth, -avg_photoperiod, -na.rm, -avg_latitude, -avg_longitude)
CPUE_grid_avg <- CPUE_grid_avg %>% mutate_all(~ifelse(is.nan(.), NA, .)) %>% drop_na() #drops 835 rows, 757 NA for avg_do, 114 NA for avg_stemp, 179 NA for avg_ssal

#Correlation plot to see what to remove
cor <- cor(CPUE_grid_avg[, c(19, 23, 26:32, 38:42)])
corrplot(cor) #fishing variables are relatively correlated, for now, only select NoFishRest and FishingAll_num (not correlated), already removed bottom environmental variables previously

#Remove latitude, longitude, all fishing variables except NofishRest and FishingAll_num 
CPUE_grid_avg_edt <- CPUE_grid_avg %>% dplyr::select(-Latitude, -Longitude, -DPA_a:-Restricted, -ShrimpTrawl_a:-GillPoundNet_a, -lat_lon, -Day, -Location, -Colnum, -Date, -Ym_date, -Sciname, -gridArea_km, -"Strata/station", -WaterbodyCover, -Effort, -Effort, -CPUE, -CPUE_stdzd, -mean_CPUE, -Month, -Control1)

colnames(CPUE_grid_avg_edt)                                    
summary(is.na(CPUE_grid_avg_edt))                                              

##Make there be one column for each CPUE
CPUE_grid_avg_edt <- CPUE_grid_avg_edt %>% group_by(Year, gridID, Speciescommonname, Survey) %>% distinct(mean_CPUE_stdzd, .keep_all= TRUE)

t <- CPUE_grid_avg_edt %>% filter(gridID %in% 628, Speciescommonname %in% "striped mullet")

t2 <- CPUE_grid_avg_edt %>% filter(gridID %in% 628)
unique(t2$Year)

##write.csv(CPUE_grid_avg_edt, "~/Documents/GitHub/NCBlueCrab_Predators/Data/CPUE/CPUE_grid_avg_edt.csv")          

#Form count dataset 
CPUE_grid_count <- CPUE_grid %>% group_by(gridID, Survey, Year, Speciescommonname) %>% mutate(avg_count= round(mean(Colnum),0))

CPUE_grid_count_avg <- CPUE_grid_count %>% ungroup() %>% mutate(Stemp= ifelse(CPUE_grid_count$Stemp==0.0, NA, CPUE_grid_count$Stemp), Ssal= ifelse(CPUE_grid_count$Ssal==0.0, NA, CPUE_grid_count$Ssal), Sdo= ifelse(CPUE_grid_count$Sdo==0.0, NA, CPUE_grid_count$Sdo)) %>% group_by(Year, gridID) %>% mutate(avg_depth= mean(Depth, na.rm= TRUE), avg_ssal= mean(Ssal, na.rm= TRUE), avg_bsal= mean(Bsal, na.rm= TRUE), avg_stemp= mean(Stemp, na.rm= TRUE), avg_btemp= mean(Btemp, na.rm= TRUE), avg_sdo= mean(Sdo, na.rm= TRUE), avg_bdo= mean(Bdo, na.rm= TRUE), avg_latitude= mean(Latitude, na.rm= TRUE), avg_longitude= mean(Longitude), avg_photoperiod= mean(Photoperiod), na.rm= TRUE) %>% dplyr::select(-avg_bsal, -avg_btemp, -avg_bdo, -Stemp, -Btemp, -Sdo, -Bdo, -Ssal, -Bsal, -Season, -Sedsize_new, -Btmcomp_new, -Photoperiod, -Depth, -avg_photoperiod, -na.rm, -avg_latitude, -avg_longitude)

CPUE_grid_count_avg <- CPUE_grid_count_avg %>% mutate_all(~ifelse(is.nan(.), NA, .)) %>% drop_na() #drops 835 rows, 757 NA for avg_do, 114 NA for avg_stemp, 179 NA for avg_ssal        

CPUE_grid_count_avg_edt <- CPUE_grid_count_avg %>% dplyr::select(-Latitude, -Longitude, -DPA_a:-Restricted, -ShrimpTrawl_a:-GillPoundNet_a, -lat_lon, -Day, -Location, -Colnum, -Date, -Ym_date, -Sciname, -gridArea_km, -"Strata/station", -WaterbodyCover, -Effort, -Effort, -Month, -Control1)
CPUE_grid_count_avg_edt <- CPUE_grid_count_avg_edt %>% group_by(Year, gridID, Speciescommonname, Survey) %>% distinct(avg_count, .keep_all= TRUE)

write.csv(CPUE_grid_count_avg_edt,"~/Documents/GitHub/NCBlueCrab_Predators/Data/CPUE/CPUE_grid_count_avg_edt.csv")        
```

#### CPUE visualization

```{r}
ss_survey_vis <- function(test, species, test2, species2, test3, species3){
ggplot() + geom_sf(data = world) + geom_point(data = subset(CPUE_grid, CPUE_grid$Survey %in% test & CPUE_grid$Speciescommonname %in% species & Colnum > 0), aes(x = Longitude, y = Latitude, size= mean_CPUE_stdzd), colour= "dark green") + geom_point(data = subset(CPUE_grid, CPUE_grid$Survey %in% test2 & CPUE_grid$Speciescommonname %in% species2 & Colnum > 0), aes(x = Longitude, y = Latitude, size= mean_CPUE_stdzd), colour= "light green") + geom_point(data = subset(CPUE_grid, CPUE_grid$Survey %in% test3 & CPUE_grid$Speciescommonname %in% species3 & Colnum > 0), aes(x = Longitude, y = Latitude, size= mean_CPUE_stdzd), colour= "yellow") + scale_size_area() + coord_sf(xlim=c(-78, -75), ylim=c(34,37), expand = TRUE) + theme(panel.background = element_rect(fill = "white", colour = "black")) + scale_colour_discrete(name = "Species") + labs(size= "Average std. CPUE")
}

ss_survey_vis("P915", "atlantic croaker", "P120", "blue crab", "P195", "blue crab") + facet_wrap(~Year)
ggsave("/Users/sallydowd/Desktop/atlantic.croaker.jpeg", width= 7, height= 5)

ss_survey_vis("P915", "striped bass", "P120", "adult blue crab", "P195", "adult blue crab")    
ss_survey_vis("P915", "striped bass", "P120", "blue crab", "P195", "blue crab") 
ss_survey_vis("P915", "striped bass", "P120", "atlantic menhaden", "P195", "atlantic menhaden") #striped bass: associated w/ atlantic menhaden and blue crab

ss_survey_vis("P915", "black drum", "P120", "adult blue crab", "P195", "adult blue crab")    
ss_survey_vis("P915", "black drum", "P120", "blue crab", "P195", "blue crab") 
ss_survey_vis("P915", "black drum", "P120", "atlantic menhaden", "P195", "brown shrimp")

ss_survey_vis("P915", "red drum", "P120", "adult blue crab", "P195", "adult blue crab")    
ss_survey_vis("P915", "red drum", "P120", "blue crab", "P195", "blue crab") 
ss_survey_vis("P915", "red drum", "P120", "atlantic menhaden", "P195", "atlantic menhaden") #hypothesis from Plumlee's work

ss_survey_vis("P915", "southern flounder", "P120", "adult blue crab", "P195", "adult blue crab")    
ss_survey_vis("P915", "southern flounder", "P120", "blue crab", "P195", "blue crab")   
ss_survey_vis("P915", "southern flounder", "P120", "spot", "P195", "spot")
ggsave("/Users/sallydowd/Desktop/southern.flounder.spot.jpeg", width= 7, height=5)
ss_survey_vis("P915", "southern flounder", "P120", "atlantic croaker", "P195", "atlantic croaker") #associated w/ spot and atlantic croaker 

ss_survey_vis("P915", "southern kingfish", "P120", "blue crab", "P195", "blue crab")    
ggsave("/Users/sallydowd/Desktop/southern.kingfish.jpeg", width= 7, height= 5)
ss_survey_vis("P915", "southern kingfish", "P120", "southern kingfish", "P195", "southern kingfish")   

ss_survey_vis("P915", "sheepshead", "P120", "adult blue crab", "P195", "adult blue crab")    
ss_survey_vis("P915", "sheepshead", "P120", "blue crab", "P195", "blue crab")   
```

##TEST GAMs

```{r}
#
CB_df <- read.csv("/Users/sallydowd/Desktop/P120Counts1972PresentStandardizedSimplified.csv")

CPUE_grid_avg_edt <- read.csv("~/Documents/GitHub/NCBlueCrab_Predators/Data/CPUE/CPUE_grid_avg_edt.csv")

CPUE_grid_avg_edt <- CPUE_grid_avg_edt[,-1]
CPUE_to_run <- CPUE_grid_avg_edt
CPUE_survey <- CPUE_to_run %>% ungroup() %>% pivot_wider(names_from = "Speciescommonname", values_from = "mean_CPUE_stdzd") ##not working here!
#survey as random effect

CPUE_to_run$SpeciesSurvey <- paste(CPUE_to_run$Speciescommonname, CPUE_to_run$Survey, sep = ".")
CPUE_to_run_edt <- CPUE_to_run %>% ungroup() %>% dplyr::select(-Speciescommonname, -Survey) %>% pivot_wider(names_from = "SpeciesSurvey", values_from = "mean_CPUE_stdzd") ##not working here!

#Survey as random effect in GAMs, predict fish species accounting for effect of survey
```
